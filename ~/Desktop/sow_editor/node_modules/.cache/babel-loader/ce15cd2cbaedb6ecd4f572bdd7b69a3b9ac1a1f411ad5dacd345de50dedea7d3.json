{"ast":null,"code":"import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n  ...acc,\n  [headerKey]: headerVal.map(headerValEntry => {\n    const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n    if (typeof processedExpr !== \"string\") {\n      throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n    }\n    return processedExpr;\n  })\n}), {});","map":{"version":3,"names":["EndpointError","evaluateExpression","getEndpointHeaders","headers","options","Object","entries","reduce","acc","headerKey","headerVal","map","headerValEntry","processedExpr"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/util-endpoints/dist-es/utils/getEndpointHeaders.js"],"sourcesContent":["import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,UAAU;AACxC,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,OAAO,EAAEC,OAAO,KAAKC,MAAM,CAACC,OAAO,CAACH,OAAO,CAAC,CAACI,MAAM,CAAC,CAACC,GAAG,EAAE,CAACC,SAAS,EAAEC,SAAS,CAAC,MAAM;EACrH,GAAGF,GAAG;EACN,CAACC,SAAS,GAAGC,SAAS,CAACC,GAAG,CAAEC,cAAc,IAAK;IAC3C,MAAMC,aAAa,GAAGZ,kBAAkB,CAACW,cAAc,EAAE,oBAAoB,EAAER,OAAO,CAAC;IACvF,IAAI,OAAOS,aAAa,KAAK,QAAQ,EAAE;MACnC,MAAM,IAAIb,aAAa,CAAC,WAAWS,SAAS,YAAYI,aAAa,mBAAmB,CAAC;IAC7F;IACA,OAAOA,aAAa;EACxB,CAAC;AACL,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}