{"ast":null,"code":"import getDirection from 'direction';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport React, { createContext, useContext, useRef, useEffect, useLayoutEffect, useState, memo, forwardRef, useCallback, Component, useReducer, useMemo } from 'react';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { Transforms, Element as Element$1, Editor, Scrubber, Range, Path, Point, Node, Text as Text$1 } from 'slate';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport { isHotkey } from 'is-hotkey';\nimport ReactDOM from 'react-dom';\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * A React context for sharing the editor object.\n */\nvar EditorContext = /*#__PURE__*/createContext(null);\n/**\n * Get the current editor object from the React context.\n */\nvar useSlateStatic = () => {\n  var editor = useContext(EditorContext);\n  if (!editor) {\n    throw new Error(\"The `useSlateStatic` hook must be used inside the <Slate> component's context.\");\n  }\n  return editor;\n};\nvar REACT_MAJOR_VERSION = parseInt(React.version.split('.')[0], 10);\nvar IS_IOS = typeof navigator !== 'undefined' && typeof window !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\nvar IS_APPLE = typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent);\nvar IS_ANDROID = typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent);\nvar IS_FIREFOX = typeof navigator !== 'undefined' && /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);\nvar IS_WEBKIT = typeof navigator !== 'undefined' && /AppleWebKit(?!.*Chrome)/i.test(navigator.userAgent);\n// \"modern\" Edge was released at 79.x\nvar IS_EDGE_LEGACY = typeof navigator !== 'undefined' && /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent);\nvar IS_CHROME = typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent);\n// Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\nvar IS_CHROME_LEGACY = typeof navigator !== 'undefined' && /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent);\nvar IS_ANDROID_CHROME_LEGACY = IS_ANDROID && typeof navigator !== 'undefined' && /Chrome?\\/(?:[0-5]?\\d)(?:\\.)/i.test(navigator.userAgent);\n// Firefox did not support `beforeInput` until `v87`.\nvar IS_FIREFOX_LEGACY = typeof navigator !== 'undefined' && /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(navigator.userAgent);\n// UC mobile browser\nvar IS_UC_MOBILE = typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent);\n// Wechat browser (not including mac wechat)\nvar IS_WECHATBROWSER = typeof navigator !== 'undefined' && /.*Wechat/.test(navigator.userAgent) && !/.*MacWechat/.test(navigator.userAgent); // avoid lookbehind (buggy in safari < 16.4)\n// Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nvar CAN_USE_DOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nvar HAS_BEFORE_INPUT_SUPPORT = (!IS_CHROME_LEGACY || !IS_ANDROID_CHROME_LEGACY) && !IS_EDGE_LEGACY &&\n// globalThis is undefined in older browsers\ntypeof globalThis !== 'undefined' && globalThis.InputEvent &&\n// @ts-ignore The `getTargetRanges` property isn't recognized.\ntypeof globalThis.InputEvent.prototype.getTargetRanges === 'function';\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\nvar NODE_TO_INDEX = new WeakMap();\nvar NODE_TO_PARENT = new WeakMap();\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\nvar EDITOR_TO_WINDOW = new WeakMap();\nvar EDITOR_TO_ELEMENT = new WeakMap();\nvar EDITOR_TO_PLACEHOLDER_ELEMENT = new WeakMap();\nvar ELEMENT_TO_NODE = new WeakMap();\nvar NODE_TO_ELEMENT = new WeakMap();\nvar NODE_TO_KEY = new WeakMap();\nvar EDITOR_TO_KEY_TO_ELEMENT = new WeakMap();\n/**\n * Weak maps for storing editor-related state.\n */\nvar IS_READ_ONLY = new WeakMap();\nvar IS_FOCUSED = new WeakMap();\nvar IS_COMPOSING = new WeakMap();\nvar EDITOR_TO_USER_SELECTION = new WeakMap();\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\nvar EDITOR_TO_ON_CHANGE = new WeakMap();\n/**\n * Weak maps for saving pending state on composition stage.\n */\nvar EDITOR_TO_SCHEDULE_FLUSH = new WeakMap();\nvar EDITOR_TO_PENDING_INSERTION_MARKS = new WeakMap();\nvar EDITOR_TO_USER_MARKS = new WeakMap();\n/**\n * Android input handling specific weak-maps\n */\nvar EDITOR_TO_PENDING_DIFFS = new WeakMap();\nvar EDITOR_TO_PENDING_ACTION = new WeakMap();\nvar EDITOR_TO_PENDING_SELECTION = new WeakMap();\nvar EDITOR_TO_FORCE_RENDER = new WeakMap();\n/**\n * Symbols.\n */\nvar PLACEHOLDER_SYMBOL = Symbol('placeholder');\nvar MARK_PLACEHOLDER_SYMBOL = Symbol('mark-placeholder');\n\n/**\n * Types.\n */\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nvar DOMText = globalThis.Text;\n/**\n * Returns the host window of a DOM node\n */\nvar getDefaultView = value => {\n  return value && value.ownerDocument && value.ownerDocument.defaultView || null;\n};\n/**\n * Check if a DOM node is a comment node.\n */\nvar isDOMComment = value => {\n  return isDOMNode(value) && value.nodeType === 8;\n};\n/**\n * Check if a DOM node is an element node.\n */\nvar isDOMElement = value => {\n  return isDOMNode(value) && value.nodeType === 1;\n};\n/**\n * Check if a value is a DOM node.\n */\nvar isDOMNode = value => {\n  var window = getDefaultView(value);\n  return !!window && value instanceof window.Node;\n};\n/**\n * Check if a value is a DOM selection.\n */\nvar isDOMSelection = value => {\n  var window = value && value.anchorNode && getDefaultView(value.anchorNode);\n  return !!window && value instanceof window.Selection;\n};\n/**\n * Check if a DOM node is an element node.\n */\nvar isDOMText = value => {\n  return isDOMNode(value) && value.nodeType === 3;\n};\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\nvar isPlainTextOnlyPaste = event => {\n  return event.clipboardData && event.clipboardData.getData('text/plain') !== '' && event.clipboardData.types.length === 1;\n};\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\nvar normalizeDOMPoint = domPoint => {\n  var [node, offset] = domPoint;\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    var isLast = offset === node.childNodes.length;\n    var index = isLast ? offset - 1 : offset;\n    [node, index] = getEditableChildAndIndex(node, index, isLast ? 'backward' : 'forward');\n    // If the editable child found is in front of input offset, we instead seek to its end\n    isLast = index < offset;\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      var i = isLast ? node.childNodes.length - 1 : 0;\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward');\n    }\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0;\n  }\n  // Return the node and offset.\n  return [node, offset];\n};\n/**\n * Determines whether the active element is nested within a shadowRoot\n */\nvar hasShadowRoot = node => {\n  var parent = node && node.parentNode;\n  while (parent) {\n    if (parent.toString() === '[object ShadowRoot]') {\n      return true;\n    }\n    parent = parent.parentNode;\n  }\n  return false;\n};\n/**\n * Get the nearest editable child and index at `index` in a `parent`, preferring\n * `direction`.\n */\nvar getEditableChildAndIndex = (parent, index, direction) => {\n  var {\n    childNodes\n  } = parent;\n  var child = childNodes[index];\n  var i = index;\n  var triedForward = false;\n  var triedBackward = false;\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (isDOMComment(child) || isDOMElement(child) && child.childNodes.length === 0 || isDOMElement(child) && child.getAttribute('contenteditable') === 'false') {\n    if (triedForward && triedBackward) {\n      break;\n    }\n    if (i >= childNodes.length) {\n      triedForward = true;\n      i = index - 1;\n      direction = 'backward';\n      continue;\n    }\n    if (i < 0) {\n      triedBackward = true;\n      i = index + 1;\n      direction = 'forward';\n      continue;\n    }\n    child = childNodes[i];\n    index = i;\n    i += direction === 'forward' ? 1 : -1;\n  }\n  return [child, index];\n};\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\nvar getEditableChild = (parent, index, direction) => {\n  var [child] = getEditableChildAndIndex(parent, index, direction);\n  return child;\n};\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\nvar getPlainText = domNode => {\n  var text = '';\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue;\n  }\n  if (isDOMElement(domNode)) {\n    for (var childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode);\n    }\n    var display = getComputedStyle(domNode).getPropertyValue('display');\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n';\n    }\n  }\n  return text;\n};\n/**\n * Get x-slate-fragment attribute from data-slate-fragment\n */\nvar catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m;\nvar getSlateFragmentAttribute = dataTransfer => {\n  var htmlData = dataTransfer.getData('text/html');\n  var [, fragment] = htmlData.match(catchSlateFragment) || [];\n  return fragment;\n};\n/**\n * Check whether a mutation originates from a editable element inside the editor.\n */\nvar isTrackedMutation = (editor, mutation, batch) => {\n  var {\n    target\n  } = mutation;\n  if (isDOMElement(target) && target.matches('[contentEditable=\"false\"]')) {\n    return false;\n  }\n  var {\n    document\n  } = ReactEditor.getWindow(editor);\n  if (document.contains(target)) {\n    return ReactEditor.hasDOMNode(editor, target, {\n      editable: true\n    });\n  }\n  var parentMutation = batch.find(_ref => {\n    var {\n      addedNodes,\n      removedNodes\n    } = _ref;\n    for (var node of addedNodes) {\n      if (node === target || node.contains(target)) {\n        return true;\n      }\n    }\n    for (var _node of removedNodes) {\n      if (_node === target || _node.contains(target)) {\n        return true;\n      }\n    }\n  });\n  if (!parentMutation || parentMutation === mutation) {\n    return false;\n  }\n  // Target add/remove is tracked. Track the mutation if we track the parent mutation.\n  return isTrackedMutation(editor, parentMutation, batch);\n};\n\n/**\n * An auto-incrementing identifier for keys.\n */\nvar n = 0;\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\nclass Key {\n  constructor() {\n    _defineProperty(this, \"id\", void 0);\n    this.id = \"\".concat(n++);\n  }\n}\n\n// eslint-disable-next-line no-redeclare\nvar ReactEditor = {\n  androidPendingDiffs: editor => EDITOR_TO_PENDING_DIFFS.get(editor),\n  androidScheduleFlush: editor => {\n    var _EDITOR_TO_SCHEDULE_F;\n    (_EDITOR_TO_SCHEDULE_F = EDITOR_TO_SCHEDULE_FLUSH.get(editor)) === null || _EDITOR_TO_SCHEDULE_F === void 0 || _EDITOR_TO_SCHEDULE_F();\n  },\n  blur: editor => {\n    var el = ReactEditor.toDOMNode(editor, editor);\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    IS_FOCUSED.set(editor, false);\n    if (root.activeElement === el) {\n      el.blur();\n    }\n  },\n  deselect: editor => {\n    var {\n      selection\n    } = editor;\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    var domSelection = root.getSelection();\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges();\n    }\n    if (selection) {\n      Transforms.deselect(editor);\n    }\n  },\n  findDocumentOrShadowRoot: editor => {\n    var el = ReactEditor.toDOMNode(editor, editor);\n    var root = el.getRootNode();\n    if ((root instanceof Document || root instanceof ShadowRoot) && root.getSelection != null) {\n      return root;\n    }\n    return el.ownerDocument;\n  },\n  findEventRange: (editor, event) => {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent;\n    }\n    var {\n      clientX: x,\n      clientY: y,\n      target\n    } = event;\n    if (x == null || y == null) {\n      throw new Error(\"Cannot resolve a Slate range from a DOM event: \".concat(event));\n    }\n    var node = ReactEditor.toSlateNode(editor, event.target);\n    var path = ReactEditor.findPath(editor, node);\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Element$1.isElement(node) && Editor.isVoid(editor, node)) {\n      var rect = target.getBoundingClientRect();\n      var isPrev = editor.isInline(node) ? x - rect.left < rect.left + rect.width - x : y - rect.top < rect.top + rect.height - y;\n      var edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end'\n      });\n      var point = isPrev ? Editor.before(editor, edge) : Editor.after(editor, edge);\n      if (point) {\n        var _range = Editor.range(editor, point);\n        return _range;\n      }\n    }\n    // Else resolve a range from the caret position where the drop occured.\n    var domRange;\n    var {\n      document\n    } = ReactEditor.getWindow(editor);\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y);\n    } else {\n      var position = document.caretPositionFromPoint(x, y);\n      if (position) {\n        domRange = document.createRange();\n        domRange.setStart(position.offsetNode, position.offset);\n        domRange.setEnd(position.offsetNode, position.offset);\n      }\n    }\n    if (!domRange) {\n      throw new Error(\"Cannot resolve a Slate range from a DOM event: \".concat(event));\n    }\n    // Resolve a Slate range from the DOM range.\n    var range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false\n    });\n    return range;\n  },\n  findKey: (editor, node) => {\n    var key = NODE_TO_KEY.get(node);\n    if (!key) {\n      key = new Key();\n      NODE_TO_KEY.set(node, key);\n    }\n    return key;\n  },\n  findPath: (editor, node) => {\n    var path = [];\n    var child = node;\n    while (true) {\n      var parent = NODE_TO_PARENT.get(child);\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path;\n        } else {\n          break;\n        }\n      }\n      var i = NODE_TO_INDEX.get(child);\n      if (i == null) {\n        break;\n      }\n      path.unshift(i);\n      child = parent;\n    }\n    throw new Error(\"Unable to find the path for Slate node: \".concat(Scrubber.stringify(node)));\n  },\n  focus: function focus(editor) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      retries: 5\n    };\n    // Return if already focused\n    if (IS_FOCUSED.get(editor)) {\n      return;\n    }\n    // Retry setting focus if the editor has pending operations.\n    // The DOM (selection) is unstable while changes are applied.\n    // Retry until retries are exhausted or editor is focused.\n    if (options.retries <= 0) {\n      throw new Error('Could not set focus, editor seems stuck with pending operations');\n    }\n    if (editor.operations.length > 0) {\n      setTimeout(() => {\n        ReactEditor.focus(editor, {\n          retries: options.retries - 1\n        });\n      }, 10);\n      return;\n    }\n    var el = ReactEditor.toDOMNode(editor, editor);\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    if (root.activeElement !== el) {\n      // Ensure that the DOM selection state is set to the editor's selection\n      if (editor.selection && root instanceof Document) {\n        var domSelection = root.getSelection();\n        var domRange = ReactEditor.toDOMRange(editor, editor.selection);\n        domSelection === null || domSelection === void 0 || domSelection.removeAllRanges();\n        domSelection === null || domSelection === void 0 || domSelection.addRange(domRange);\n      }\n      // Create a new selection in the top of the document if missing\n      if (!editor.selection) {\n        Transforms.select(editor, Editor.start(editor, []));\n        editor.onChange();\n      }\n      // IS_FOCUSED should be set before calling el.focus() to ensure that\n      // FocusedContext is updated to the correct value\n      IS_FOCUSED.set(editor, true);\n      el.focus({\n        preventScroll: true\n      });\n    }\n  },\n  getWindow: editor => {\n    var window = EDITOR_TO_WINDOW.get(editor);\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor');\n    }\n    return window;\n  },\n  hasDOMNode: function hasDOMNode(editor, target) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var {\n      editable = false\n    } = options;\n    var editorEl = ReactEditor.toDOMNode(editor, editor);\n    var targetEl;\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = isDOMElement(target) ? target : target.parentElement;\n    } catch (err) {\n      if (err instanceof Error && !err.message.includes('Permission denied to access property \"nodeType\"')) {\n        throw err;\n      }\n    }\n    if (!targetEl) {\n      return false;\n    }\n    return targetEl.closest(\"[data-slate-editor]\") === editorEl && (!editable || targetEl.isContentEditable ? true : typeof targetEl.isContentEditable === 'boolean' &&\n    // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n    // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n    targetEl.closest('[contenteditable=\"false\"]') === editorEl || !!targetEl.getAttribute('data-slate-zero-width'));\n  },\n  hasEditableTarget: (editor, target) => isDOMNode(target) && ReactEditor.hasDOMNode(editor, target, {\n    editable: true\n  }),\n  hasRange: (editor, range) => {\n    var {\n      anchor,\n      focus\n    } = range;\n    return Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path);\n  },\n  hasSelectableTarget: (editor, target) => ReactEditor.hasEditableTarget(editor, target) || ReactEditor.isTargetInsideNonReadonlyVoid(editor, target),\n  hasTarget: (editor, target) => isDOMNode(target) && ReactEditor.hasDOMNode(editor, target),\n  insertData: (editor, data) => {\n    editor.insertData(data);\n  },\n  insertFragmentData: (editor, data) => editor.insertFragmentData(data),\n  insertTextData: (editor, data) => editor.insertTextData(data),\n  isComposing: editor => {\n    return !!IS_COMPOSING.get(editor);\n  },\n  isFocused: editor => !!IS_FOCUSED.get(editor),\n  isReadOnly: editor => !!IS_READ_ONLY.get(editor),\n  isTargetInsideNonReadonlyVoid: (editor, target) => {\n    if (IS_READ_ONLY.get(editor)) return false;\n    var slateNode = ReactEditor.hasTarget(editor, target) && ReactEditor.toSlateNode(editor, target);\n    return Element$1.isElement(slateNode) && Editor.isVoid(editor, slateNode);\n  },\n  setFragmentData: (editor, data, originEvent) => editor.setFragmentData(data, originEvent),\n  toDOMNode: (editor, node) => {\n    var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);\n    var domNode = Editor.isEditor(node) ? EDITOR_TO_ELEMENT.get(editor) : KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 ? void 0 : KEY_TO_ELEMENT.get(ReactEditor.findKey(editor, node));\n    if (!domNode) {\n      throw new Error(\"Cannot resolve a DOM node from Slate node: \".concat(Scrubber.stringify(node)));\n    }\n    return domNode;\n  },\n  toDOMPoint: (editor, point) => {\n    var [node] = Editor.node(editor, point.path);\n    var el = ReactEditor.toDOMNode(editor, node);\n    var domPoint;\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, {\n      at: point\n    })) {\n      point = {\n        path: point.path,\n        offset: 0\n      };\n    }\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    var selector = \"[data-slate-string], [data-slate-zero-width]\";\n    var texts = Array.from(el.querySelectorAll(selector));\n    var start = 0;\n    for (var i = 0; i < texts.length; i++) {\n      var text = texts[i];\n      var domNode = text.childNodes[0];\n      if (domNode == null || domNode.textContent == null) {\n        continue;\n      }\n      var {\n        length\n      } = domNode.textContent;\n      var attr = text.getAttribute('data-slate-length');\n      var trueLength = attr == null ? length : parseInt(attr, 10);\n      var end = start + trueLength;\n      // Prefer putting the selection inside the mark placeholder to ensure\n      // composed text is displayed with the correct marks.\n      var nextText = texts[i + 1];\n      if (point.offset === end && nextText !== null && nextText !== void 0 && nextText.hasAttribute('data-slate-mark-placeholder')) {\n        var _nextText$textContent;\n        var domText = nextText.childNodes[0];\n        domPoint = [\n        // COMPAT: If we don't explicity set the dom point to be on the actual\n        // dom text element, chrome will put the selection behind the actual dom\n        // text element, causing domRange.getBoundingClientRect() calls on a collapsed\n        // selection to return incorrect zero values (https://bugs.chromium.org/p/chromium/issues/detail?id=435438)\n        // which will cause issues when scrolling to it.\n        domText instanceof DOMText ? domText : nextText, (_nextText$textContent = nextText.textContent) !== null && _nextText$textContent !== void 0 && _nextText$textContent.startsWith('\\uFEFF') ? 1 : 0];\n        break;\n      }\n      if (point.offset <= end) {\n        var offset = Math.min(length, Math.max(0, point.offset - start));\n        domPoint = [domNode, offset];\n        break;\n      }\n      start = end;\n    }\n    if (!domPoint) {\n      throw new Error(\"Cannot resolve a DOM point from Slate point: \".concat(Scrubber.stringify(point)));\n    }\n    return domPoint;\n  },\n  toDOMRange: (editor, range) => {\n    var {\n      anchor,\n      focus\n    } = range;\n    var isBackward = Range.isBackward(range);\n    var domAnchor = ReactEditor.toDOMPoint(editor, anchor);\n    var domFocus = Range.isCollapsed(range) ? domAnchor : ReactEditor.toDOMPoint(editor, focus);\n    var window = ReactEditor.getWindow(editor);\n    var domRange = window.document.createRange();\n    var [startNode, startOffset] = isBackward ? domFocus : domAnchor;\n    var [endNode, endOffset] = isBackward ? domAnchor : domFocus;\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    var startEl = isDOMElement(startNode) ? startNode : startNode.parentElement;\n    var isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width');\n    var endEl = isDOMElement(endNode) ? endNode : endNode.parentElement;\n    var isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width');\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset);\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset);\n    return domRange;\n  },\n  toSlateNode: (editor, domNode) => {\n    var domEl = isDOMElement(domNode) ? domNode : domNode.parentElement;\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(\"[data-slate-node]\");\n    }\n    var node = domEl ? ELEMENT_TO_NODE.get(domEl) : null;\n    if (!node) {\n      throw new Error(\"Cannot resolve a Slate node from DOM node: \".concat(domEl));\n    }\n    return node;\n  },\n  toSlatePoint: (editor, domPoint, options) => {\n    var {\n      exactMatch,\n      suppressThrow\n    } = options;\n    var [nearestNode, nearestOffset] = exactMatch ? domPoint : normalizeDOMPoint(domPoint);\n    var parentNode = nearestNode.parentNode;\n    var textNode = null;\n    var offset = 0;\n    if (parentNode) {\n      var _domNode$textContent, _domNode$textContent2;\n      var editorEl = ReactEditor.toDOMNode(editor, editor);\n      var potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]');\n      // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n      var voidNode = potentialVoidNode && editorEl.contains(potentialVoidNode) ? potentialVoidNode : null;\n      var leafNode = parentNode.closest('[data-slate-leaf]');\n      var domNode = null;\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]');\n        if (textNode) {\n          var window = ReactEditor.getWindow(editor);\n          var range = window.document.createRange();\n          range.setStart(textNode, 0);\n          range.setEnd(nearestNode, nearestOffset);\n          var contents = range.cloneContents();\n          var removals = [...Array.prototype.slice.call(contents.querySelectorAll('[data-slate-zero-width]')), ...Array.prototype.slice.call(contents.querySelectorAll('[contenteditable=false]'))];\n          removals.forEach(el => {\n            // COMPAT: While composing at the start of a text node, some keyboards put\n            // the text content inside the zero width space.\n            if (IS_ANDROID && !exactMatch && el.hasAttribute('data-slate-zero-width') && el.textContent.length > 0 && el.textContext !== '\\uFEFF') {\n              if (el.textContent.startsWith('\\uFEFF')) {\n                el.textContent = el.textContent.slice(1);\n              }\n              return;\n            }\n            el.parentNode.removeChild(el);\n          });\n          // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-react\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n          offset = contents.textContent.length;\n          domNode = textNode;\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent and taking the\n        // first one that isn't inside a nested editor.\n        var leafNodes = voidNode.querySelectorAll('[data-slate-leaf]');\n        for (var index = 0; index < leafNodes.length; index++) {\n          var current = leafNodes[index];\n          if (ReactEditor.hasDOMNode(editor, current)) {\n            leafNode = current;\n            break;\n          }\n        }\n        // COMPAT: In read-only editors the leaf is not rendered.\n        if (!leafNode) {\n          offset = 1;\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]');\n          domNode = leafNode;\n          offset = domNode.textContent.length;\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent.length;\n          });\n        }\n      }\n      if (domNode && offset === domNode.textContent.length &&\n      // COMPAT: Android IMEs might remove the zero width space while composing,\n      // and we don't add it for line-breaks.\n      IS_ANDROID && domNode.getAttribute('data-slate-zero-width') === 'z' && (_domNode$textContent = domNode.textContent) !== null && _domNode$textContent !== void 0 && _domNode$textContent.startsWith('\\uFEFF') && (\n      // COMPAT: If the parent node is a Slate zero-width space, editor is\n      // because the text node should have no characters. However, during IME\n      // composition the ASCII characters will be prepended to the zero-width\n      // space, so subtract 1 from the offset to account for the zero-width\n      // space character.\n      parentNode.hasAttribute('data-slate-zero-width') ||\n      // COMPAT: In Firefox, `range.cloneContents()` returns an extra trailing '\\n'\n      // when the document ends with a new-line character. This results in the offset\n      // length being off by one, so we need to subtract one to account for this.\n      IS_FIREFOX && (_domNode$textContent2 = domNode.textContent) !== null && _domNode$textContent2 !== void 0 && _domNode$textContent2.endsWith('\\n\\n'))) {\n        offset--;\n      }\n    }\n    if (IS_ANDROID && !textNode && !exactMatch) {\n      var node = parentNode.hasAttribute('data-slate-node') ? parentNode : parentNode.closest('[data-slate-node]');\n      if (node && ReactEditor.hasDOMNode(editor, node, {\n        editable: true\n      })) {\n        var _slateNode = ReactEditor.toSlateNode(editor, node);\n        var {\n          path: _path,\n          offset: _offset\n        } = Editor.start(editor, ReactEditor.findPath(editor, _slateNode));\n        if (!node.querySelector('[data-slate-leaf]')) {\n          _offset = nearestOffset;\n        }\n        return {\n          path: _path,\n          offset: _offset\n        };\n      }\n    }\n    if (!textNode) {\n      if (suppressThrow) {\n        return null;\n      }\n      throw new Error(\"Cannot resolve a Slate point from DOM point: \".concat(domPoint));\n    }\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    var slateNode = ReactEditor.toSlateNode(editor, textNode);\n    var path = ReactEditor.findPath(editor, slateNode);\n    return {\n      path,\n      offset\n    };\n  },\n  toSlateRange: (editor, domRange, options) => {\n    var _focusNode$textConten;\n    var {\n      exactMatch,\n      suppressThrow\n    } = options;\n    var el = isDOMSelection(domRange) ? domRange.anchorNode : domRange.startContainer;\n    var anchorNode;\n    var anchorOffset;\n    var focusNode;\n    var focusOffset;\n    var isCollapsed;\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        // COMPAT: In firefox the normal seletion way does not work\n        // (https://github.com/ianstormtaylor/slate/pull/5486#issue-1820720223)\n        if (IS_FIREFOX && domRange.rangeCount > 1) {\n          focusNode = domRange.focusNode; // Focus node works fine\n          var firstRange = domRange.getRangeAt(0);\n          var lastRange = domRange.getRangeAt(domRange.rangeCount - 1);\n          // Here we are in the contenteditable mode of a table in firefox\n          if (focusNode instanceof HTMLTableRowElement && firstRange.startContainer instanceof HTMLTableRowElement && lastRange.startContainer instanceof HTMLTableRowElement) {\n            // HTMLElement, becouse Element is a slate element\n            function getLastChildren(element) {\n              if (element.childElementCount > 0) {\n                return getLastChildren(element.children[0]);\n              } else {\n                return element;\n              }\n            }\n            var firstNodeRow = firstRange.startContainer;\n            var lastNodeRow = lastRange.startContainer;\n            // This should never fail as \"The HTMLElement interface represents any HTML element.\"\n            var firstNode = getLastChildren(firstNodeRow.children[firstRange.startOffset]);\n            var lastNode = getLastChildren(lastNodeRow.children[lastRange.startOffset]);\n            // Zero, as we allways take the right one as the anchor point\n            focusOffset = 0;\n            if (lastNode.childNodes.length > 0) {\n              anchorNode = lastNode.childNodes[0];\n            } else {\n              anchorNode = lastNode;\n            }\n            if (firstNode.childNodes.length > 0) {\n              focusNode = firstNode.childNodes[0];\n            } else {\n              focusNode = firstNode;\n            }\n            if (lastNode instanceof HTMLElement) {\n              anchorOffset = lastNode.innerHTML.length;\n            } else {\n              // Fallback option\n              anchorOffset = 0;\n            }\n          } else {\n            // This is the read only mode of a firefox table\n            // Right to left\n            if (firstRange.startContainer === focusNode) {\n              anchorNode = lastRange.endContainer;\n              anchorOffset = lastRange.endOffset;\n              focusOffset = firstRange.startOffset;\n            } else {\n              // Left to right\n              anchorNode = firstRange.startContainer;\n              anchorOffset = firstRange.endOffset;\n              focusOffset = lastRange.startOffset;\n            }\n          }\n        } else {\n          anchorNode = domRange.anchorNode;\n          anchorOffset = domRange.anchorOffset;\n          focusNode = domRange.focusNode;\n          focusOffset = domRange.focusOffset;\n        }\n        // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n        // IsCollapsed might not work in firefox, but this will\n        if (IS_CHROME && hasShadowRoot(anchorNode) || IS_FIREFOX) {\n          isCollapsed = domRange.anchorNode === domRange.focusNode && domRange.anchorOffset === domRange.focusOffset;\n        } else {\n          isCollapsed = domRange.isCollapsed;\n        }\n      } else {\n        anchorNode = domRange.startContainer;\n        anchorOffset = domRange.startOffset;\n        focusNode = domRange.endContainer;\n        focusOffset = domRange.endOffset;\n        isCollapsed = domRange.collapsed;\n      }\n    }\n    if (anchorNode == null || focusNode == null || anchorOffset == null || focusOffset == null) {\n      throw new Error(\"Cannot resolve a Slate range from DOM range: \".concat(domRange));\n    }\n    // COMPAT: Firefox sometimes includes an extra \\n (rendered by TextString\n    // when isTrailing is true) in the focusOffset, resulting in an invalid\n    // Slate point. (2023/11/01)\n    if (IS_FIREFOX && (_focusNode$textConten = focusNode.textContent) !== null && _focusNode$textConten !== void 0 && _focusNode$textConten.endsWith('\\n\\n') && focusOffset === focusNode.textContent.length) {\n      focusOffset--;\n    }\n    // COMPAT: Triple-clicking a word in chrome will sometimes place the focus\n    // inside a `contenteditable=\"false\"` DOM node following the word, which\n    // will cause `toSlatePoint` to throw an error. (2023/03/07)\n    if ('getAttribute' in focusNode && focusNode.getAttribute('contenteditable') === 'false' && focusNode.getAttribute('data-slate-void') !== 'true') {\n      var _anchorNode$textConte;\n      focusNode = anchorNode;\n      focusOffset = ((_anchorNode$textConte = anchorNode.textContent) === null || _anchorNode$textConte === void 0 ? void 0 : _anchorNode$textConte.length) || 0;\n    }\n    var anchor = ReactEditor.toSlatePoint(editor, [anchorNode, anchorOffset], {\n      exactMatch,\n      suppressThrow\n    });\n    if (!anchor) {\n      return null;\n    }\n    var focus = isCollapsed ? anchor : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n      exactMatch,\n      suppressThrow\n    });\n    if (!focus) {\n      return null;\n    }\n    var range = {\n      anchor: anchor,\n      focus: focus\n    };\n    // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n    if (Range.isExpanded(range) && Range.isForward(range) && isDOMElement(focusNode) && Editor.void(editor, {\n      at: range.focus,\n      mode: 'highest'\n    })) {\n      range = Editor.unhangRange(editor, range, {\n        voids: true\n      });\n    }\n    return range;\n  }\n};\n\n/**\n * Check whether a text diff was applied in a way we can perform the pending action on /\n * recover the pending selection.\n */\nfunction verifyDiffState(editor, textDiff) {\n  var {\n    path,\n    diff\n  } = textDiff;\n  if (!Editor.hasPath(editor, path)) {\n    return false;\n  }\n  var node = Node.get(editor, path);\n  if (!Text$1.isText(node)) {\n    return false;\n  }\n  if (diff.start !== node.text.length || diff.text.length === 0) {\n    return node.text.slice(diff.start, diff.start + diff.text.length) === diff.text;\n  }\n  var nextPath = Path.next(path);\n  if (!Editor.hasPath(editor, nextPath)) {\n    return false;\n  }\n  var nextNode = Node.get(editor, nextPath);\n  return Text$1.isText(nextNode) && nextNode.text.startsWith(diff.text);\n}\nfunction applyStringDiff(text) {\n  for (var _len = arguments.length, diffs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    diffs[_key - 1] = arguments[_key];\n  }\n  return diffs.reduce((text, diff) => text.slice(0, diff.start) + diff.text + text.slice(diff.end), text);\n}\nfunction longestCommonPrefixLength(str, another) {\n  var length = Math.min(str.length, another.length);\n  for (var i = 0; i < length; i++) {\n    if (str.charAt(i) !== another.charAt(i)) {\n      return i;\n    }\n  }\n  return length;\n}\nfunction longestCommonSuffixLength(str, another, max) {\n  var length = Math.min(str.length, another.length, max);\n  for (var i = 0; i < length; i++) {\n    if (str.charAt(str.length - i - 1) !== another.charAt(another.length - i - 1)) {\n      return i;\n    }\n  }\n  return length;\n}\n/**\n * Remove redundant changes from the diff so that it spans the minimal possible range\n */\nfunction normalizeStringDiff(targetText, diff) {\n  var {\n    start,\n    end,\n    text\n  } = diff;\n  var removedText = targetText.slice(start, end);\n  var prefixLength = longestCommonPrefixLength(removedText, text);\n  var max = Math.min(removedText.length - prefixLength, text.length - prefixLength);\n  var suffixLength = longestCommonSuffixLength(removedText, text, max);\n  var normalized = {\n    start: start + prefixLength,\n    end: end - suffixLength,\n    text: text.slice(prefixLength, text.length - suffixLength)\n  };\n  if (normalized.start === normalized.end && normalized.text.length === 0) {\n    return null;\n  }\n  return normalized;\n}\n/**\n * Return a string diff that is equivalent to applying b after a spanning the range of\n * both changes\n */\nfunction mergeStringDiffs(targetText, a, b) {\n  var start = Math.min(a.start, b.start);\n  var overlap = Math.max(0, Math.min(a.start + a.text.length, b.end) - b.start);\n  var applied = applyStringDiff(targetText, a, b);\n  var sliceEnd = Math.max(b.start + b.text.length, a.start + a.text.length + (a.start + a.text.length > b.start ? b.text.length : 0) - overlap);\n  var text = applied.slice(start, sliceEnd);\n  var end = Math.max(a.end, b.end - a.text.length + (a.end - a.start));\n  return normalizeStringDiff(targetText, {\n    start,\n    end,\n    text\n  });\n}\n/**\n * Get the slate range the text diff spans.\n */\nfunction targetRange(textDiff) {\n  var {\n    path,\n    diff\n  } = textDiff;\n  return {\n    anchor: {\n      path,\n      offset: diff.start\n    },\n    focus: {\n      path,\n      offset: diff.end\n    }\n  };\n}\n/**\n * Normalize a 'pending point' a.k.a a point based on the dom state before applying\n * the pending diffs. Since the pending diffs might have been inserted with different\n * marks we have to 'walk' the offset from the starting position to ensure we still\n * have a valid point inside the document\n */\nfunction normalizePoint(editor, point) {\n  var {\n    path,\n    offset\n  } = point;\n  if (!Editor.hasPath(editor, path)) {\n    return null;\n  }\n  var leaf = Node.get(editor, path);\n  if (!Text$1.isText(leaf)) {\n    return null;\n  }\n  var parentBlock = Editor.above(editor, {\n    match: n => Element$1.isElement(n) && Editor.isBlock(editor, n),\n    at: path\n  });\n  if (!parentBlock) {\n    return null;\n  }\n  while (offset > leaf.text.length) {\n    var entry = Editor.next(editor, {\n      at: path,\n      match: Text$1.isText\n    });\n    if (!entry || !Path.isDescendant(entry[1], parentBlock[1])) {\n      return null;\n    }\n    offset -= leaf.text.length;\n    leaf = entry[0];\n    path = entry[1];\n  }\n  return {\n    path,\n    offset\n  };\n}\n/**\n * Normalize a 'pending selection' to ensure it's valid in the current document state.\n */\nfunction normalizeRange(editor, range) {\n  var anchor = normalizePoint(editor, range.anchor);\n  if (!anchor) {\n    return null;\n  }\n  if (Range.isCollapsed(range)) {\n    return {\n      anchor,\n      focus: anchor\n    };\n  }\n  var focus = normalizePoint(editor, range.focus);\n  if (!focus) {\n    return null;\n  }\n  return {\n    anchor,\n    focus\n  };\n}\nfunction transformPendingPoint(editor, point, op) {\n  var pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor);\n  var textDiff = pendingDiffs === null || pendingDiffs === void 0 ? void 0 : pendingDiffs.find(_ref => {\n    var {\n      path\n    } = _ref;\n    return Path.equals(path, point.path);\n  });\n  if (!textDiff || point.offset <= textDiff.diff.start) {\n    return Point.transform(point, op, {\n      affinity: 'backward'\n    });\n  }\n  var {\n    diff\n  } = textDiff;\n  // Point references location inside the diff => transform the point based on the location\n  // the diff will be applied to and add the offset inside the diff.\n  if (point.offset <= diff.start + diff.text.length) {\n    var _anchor = {\n      path: point.path,\n      offset: diff.start\n    };\n    var _transformed = Point.transform(_anchor, op, {\n      affinity: 'backward'\n    });\n    if (!_transformed) {\n      return null;\n    }\n    return {\n      path: _transformed.path,\n      offset: _transformed.offset + point.offset - diff.start\n    };\n  }\n  // Point references location after the diff\n  var anchor = {\n    path: point.path,\n    offset: point.offset - diff.text.length + diff.end - diff.start\n  };\n  var transformed = Point.transform(anchor, op, {\n    affinity: 'backward'\n  });\n  if (!transformed) {\n    return null;\n  }\n  if (op.type === 'split_node' && Path.equals(op.path, point.path) && anchor.offset < op.position && diff.start < op.position) {\n    return transformed;\n  }\n  return {\n    path: transformed.path,\n    offset: transformed.offset + diff.text.length - diff.end + diff.start\n  };\n}\nfunction transformPendingRange(editor, range, op) {\n  var anchor = transformPendingPoint(editor, range.anchor, op);\n  if (!anchor) {\n    return null;\n  }\n  if (Range.isCollapsed(range)) {\n    return {\n      anchor,\n      focus: anchor\n    };\n  }\n  var focus = transformPendingPoint(editor, range.focus, op);\n  if (!focus) {\n    return null;\n  }\n  return {\n    anchor,\n    focus\n  };\n}\nfunction transformTextDiff(textDiff, op) {\n  var {\n    path,\n    diff,\n    id\n  } = textDiff;\n  switch (op.type) {\n    case 'insert_text':\n      {\n        if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n          return textDiff;\n        }\n        if (op.offset <= diff.start) {\n          return {\n            diff: {\n              start: op.text.length + diff.start,\n              end: op.text.length + diff.end,\n              text: diff.text\n            },\n            id,\n            path\n          };\n        }\n        return {\n          diff: {\n            start: diff.start,\n            end: diff.end + op.text.length,\n            text: diff.text\n          },\n          id,\n          path\n        };\n      }\n    case 'remove_text':\n      {\n        if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n          return textDiff;\n        }\n        if (op.offset + op.text.length <= diff.start) {\n          return {\n            diff: {\n              start: diff.start - op.text.length,\n              end: diff.end - op.text.length,\n              text: diff.text\n            },\n            id,\n            path\n          };\n        }\n        return {\n          diff: {\n            start: diff.start,\n            end: diff.end - op.text.length,\n            text: diff.text\n          },\n          id,\n          path\n        };\n      }\n    case 'split_node':\n      {\n        if (!Path.equals(op.path, path) || op.position >= diff.end) {\n          return {\n            diff,\n            id,\n            path: Path.transform(path, op, {\n              affinity: 'backward'\n            })\n          };\n        }\n        if (op.position > diff.start) {\n          return {\n            diff: {\n              start: diff.start,\n              end: Math.min(op.position, diff.end),\n              text: diff.text\n            },\n            id,\n            path\n          };\n        }\n        return {\n          diff: {\n            start: diff.start - op.position,\n            end: diff.end - op.position,\n            text: diff.text\n          },\n          id,\n          path: Path.transform(path, op, {\n            affinity: 'forward'\n          })\n        };\n      }\n    case 'merge_node':\n      {\n        if (!Path.equals(op.path, path)) {\n          return {\n            diff,\n            id,\n            path: Path.transform(path, op)\n          };\n        }\n        return {\n          diff: {\n            start: diff.start + op.position,\n            end: diff.end + op.position,\n            text: diff.text\n          },\n          id,\n          path: Path.transform(path, op)\n        };\n      }\n  }\n  var newPath = Path.transform(path, op);\n  if (!newPath) {\n    return null;\n  }\n  return {\n    diff,\n    path: newPath,\n    id\n  };\n}\nfunction ownKeys$6(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread$6(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys$6(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$6(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\nvar RESOLVE_DELAY = 25;\n// Time with no user interaction before the current user action is considered as done.\nvar FLUSH_DELAY = 200;\n// Replace with `const debug = console.log` to debug\nvar debug = function debug() {};\n// Type guard to check if a value is a DataTransfer\nvar isDataTransfer = value => (value === null || value === void 0 ? void 0 : value.constructor.name) === 'DataTransfer';\nfunction createAndroidInputManager(_ref) {\n  var {\n    editor,\n    scheduleOnDOMSelectionChange,\n    onDOMSelectionChange\n  } = _ref;\n  var flushing = false;\n  var compositionEndTimeoutId = null;\n  var flushTimeoutId = null;\n  var actionTimeoutId = null;\n  var idCounter = 0;\n  var insertPositionHint = false;\n  var applyPendingSelection = () => {\n    var pendingSelection = EDITOR_TO_PENDING_SELECTION.get(editor);\n    EDITOR_TO_PENDING_SELECTION.delete(editor);\n    if (pendingSelection) {\n      var {\n        selection\n      } = editor;\n      var normalized = normalizeRange(editor, pendingSelection);\n      if (normalized && (!selection || !Range.equals(normalized, selection))) {\n        Transforms.select(editor, normalized);\n      }\n    }\n  };\n  var performAction = () => {\n    var action = EDITOR_TO_PENDING_ACTION.get(editor);\n    EDITOR_TO_PENDING_ACTION.delete(editor);\n    if (!action) {\n      return;\n    }\n    if (action.at) {\n      var target = Point.isPoint(action.at) ? normalizePoint(editor, action.at) : normalizeRange(editor, action.at);\n      if (!target) {\n        return;\n      }\n      var _targetRange = Editor.range(editor, target);\n      if (!editor.selection || !Range.equals(editor.selection, _targetRange)) {\n        Transforms.select(editor, target);\n      }\n    }\n    action.run();\n  };\n  var flush = () => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId);\n      flushTimeoutId = null;\n    }\n    if (actionTimeoutId) {\n      clearTimeout(actionTimeoutId);\n      actionTimeoutId = null;\n    }\n    if (!hasPendingDiffs() && !hasPendingAction()) {\n      applyPendingSelection();\n      return;\n    }\n    if (!flushing) {\n      flushing = true;\n      setTimeout(() => flushing = false);\n    }\n    if (hasPendingAction()) {\n      flushing = 'action';\n    }\n    var selectionRef = editor.selection && Editor.rangeRef(editor, editor.selection, {\n      affinity: 'forward'\n    });\n    EDITOR_TO_USER_MARKS.set(editor, editor.marks);\n    debug('flush', EDITOR_TO_PENDING_ACTION.get(editor), EDITOR_TO_PENDING_DIFFS.get(editor));\n    var scheduleSelectionChange = hasPendingDiffs();\n    var diff;\n    while (diff = (_EDITOR_TO_PENDING_DI = EDITOR_TO_PENDING_DIFFS.get(editor)) === null || _EDITOR_TO_PENDING_DI === void 0 ? void 0 : _EDITOR_TO_PENDING_DI[0]) {\n      var _EDITOR_TO_PENDING_DI, _EDITOR_TO_PENDING_DI2;\n      var pendingMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor);\n      if (pendingMarks !== undefined) {\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor);\n        editor.marks = pendingMarks;\n      }\n      if (pendingMarks && insertPositionHint === false) {\n        insertPositionHint = null;\n      }\n      var range = targetRange(diff);\n      if (!editor.selection || !Range.equals(editor.selection, range)) {\n        Transforms.select(editor, range);\n      }\n      if (diff.diff.text) {\n        Editor.insertText(editor, diff.diff.text);\n      } else {\n        Editor.deleteFragment(editor);\n      }\n      // Remove diff only after we have applied it to account for it when transforming\n      // pending ranges.\n      EDITOR_TO_PENDING_DIFFS.set(editor, (_EDITOR_TO_PENDING_DI2 = EDITOR_TO_PENDING_DIFFS.get(editor)) === null || _EDITOR_TO_PENDING_DI2 === void 0 ? void 0 : _EDITOR_TO_PENDING_DI2.filter(_ref2 => {\n        var {\n          id\n        } = _ref2;\n        return id !== diff.id;\n      }));\n      if (!verifyDiffState(editor, diff)) {\n        scheduleSelectionChange = false;\n        EDITOR_TO_PENDING_ACTION.delete(editor);\n        EDITOR_TO_USER_MARKS.delete(editor);\n        flushing = 'action';\n        // Ensure we don't restore the pending user (dom) selection\n        // since the document and dom state do not match.\n        EDITOR_TO_PENDING_SELECTION.delete(editor);\n        scheduleOnDOMSelectionChange.cancel();\n        onDOMSelectionChange.cancel();\n        selectionRef === null || selectionRef === void 0 || selectionRef.unref();\n      }\n    }\n    var selection = selectionRef === null || selectionRef === void 0 ? void 0 : selectionRef.unref();\n    if (selection && !EDITOR_TO_PENDING_SELECTION.get(editor) && (!editor.selection || !Range.equals(selection, editor.selection))) {\n      Transforms.select(editor, selection);\n    }\n    if (hasPendingAction()) {\n      performAction();\n      return;\n    }\n    // COMPAT: The selectionChange event is fired after the action is performed,\n    // so we have to manually schedule it to ensure we don't 'throw away' the selection\n    // while rendering if we have pending changes.\n    if (scheduleSelectionChange) {\n      scheduleOnDOMSelectionChange();\n    }\n    scheduleOnDOMSelectionChange.flush();\n    onDOMSelectionChange.flush();\n    applyPendingSelection();\n    var userMarks = EDITOR_TO_USER_MARKS.get(editor);\n    EDITOR_TO_USER_MARKS.delete(editor);\n    if (userMarks !== undefined) {\n      editor.marks = userMarks;\n      editor.onChange();\n    }\n  };\n  var handleCompositionEnd = _event => {\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId);\n    }\n    compositionEndTimeoutId = setTimeout(() => {\n      IS_COMPOSING.set(editor, false);\n      flush();\n    }, RESOLVE_DELAY);\n  };\n  var handleCompositionStart = _event => {\n    IS_COMPOSING.set(editor, true);\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId);\n      compositionEndTimeoutId = null;\n    }\n  };\n  var updatePlaceholderVisibility = function updatePlaceholderVisibility() {\n    var forceHide = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var placeholderElement = EDITOR_TO_PLACEHOLDER_ELEMENT.get(editor);\n    if (!placeholderElement) {\n      return;\n    }\n    if (hasPendingDiffs() || forceHide) {\n      placeholderElement.style.display = 'none';\n      return;\n    }\n    placeholderElement.style.removeProperty('display');\n  };\n  var storeDiff = (path, diff) => {\n    var _EDITOR_TO_PENDING_DI3;\n    var pendingDiffs = (_EDITOR_TO_PENDING_DI3 = EDITOR_TO_PENDING_DIFFS.get(editor)) !== null && _EDITOR_TO_PENDING_DI3 !== void 0 ? _EDITOR_TO_PENDING_DI3 : [];\n    EDITOR_TO_PENDING_DIFFS.set(editor, pendingDiffs);\n    var target = Node.leaf(editor, path);\n    var idx = pendingDiffs.findIndex(change => Path.equals(change.path, path));\n    if (idx < 0) {\n      var normalized = normalizeStringDiff(target.text, diff);\n      if (normalized) {\n        pendingDiffs.push({\n          path,\n          diff,\n          id: idCounter++\n        });\n      }\n      updatePlaceholderVisibility();\n      return;\n    }\n    var merged = mergeStringDiffs(target.text, pendingDiffs[idx].diff, diff);\n    if (!merged) {\n      pendingDiffs.splice(idx, 1);\n      updatePlaceholderVisibility();\n      return;\n    }\n    pendingDiffs[idx] = _objectSpread$6(_objectSpread$6({}, pendingDiffs[idx]), {}, {\n      diff: merged\n    });\n  };\n  var scheduleAction = function scheduleAction(run) {\n    var {\n      at\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    insertPositionHint = false;\n    EDITOR_TO_PENDING_SELECTION.delete(editor);\n    scheduleOnDOMSelectionChange.cancel();\n    onDOMSelectionChange.cancel();\n    if (hasPendingAction()) {\n      flush();\n    }\n    EDITOR_TO_PENDING_ACTION.set(editor, {\n      at,\n      run\n    });\n    // COMPAT: When deleting before a non-contenteditable element chrome only fires a beforeinput,\n    // (no input) and doesn't perform any dom mutations. Without a flush timeout we would never flush\n    // in this case and thus never actually perform the action.\n    actionTimeoutId = setTimeout(flush);\n  };\n  var handleDOMBeforeInput = event => {\n    var _targetRange2;\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId);\n      flushTimeoutId = null;\n    }\n    var {\n      inputType: type\n    } = event;\n    var targetRange = null;\n    var data = event.dataTransfer || event.data || undefined;\n    if (insertPositionHint !== false && type !== 'insertText' && type !== 'insertCompositionText') {\n      insertPositionHint = false;\n    }\n    var [nativeTargetRange] = event.getTargetRanges();\n    if (nativeTargetRange) {\n      targetRange = ReactEditor.toSlateRange(editor, nativeTargetRange, {\n        exactMatch: false,\n        suppressThrow: true\n      });\n    }\n    // COMPAT: SelectionChange event is fired after the action is performed, so we\n    // have to manually get the selection here to ensure it's up-to-date.\n    var window = ReactEditor.getWindow(editor);\n    var domSelection = window.getSelection();\n    if (!targetRange && domSelection) {\n      nativeTargetRange = domSelection;\n      targetRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: true\n      });\n    }\n    targetRange = (_targetRange2 = targetRange) !== null && _targetRange2 !== void 0 ? _targetRange2 : editor.selection;\n    if (!targetRange) {\n      return;\n    }\n    // By default, the input manager tries to store text diffs so that we can\n    // defer flushing them at a later point in time. We don't want to flush\n    // for every input event as this can be expensive. However, there are some\n    // scenarios where we cannot safely store the text diff and must instead\n    // schedule an action to let Slate normalize the editor state.\n    var canStoreDiff = true;\n    if (type.startsWith('delete')) {\n      if (Range.isExpanded(targetRange)) {\n        var [_start, _end] = Range.edges(targetRange);\n        var _leaf = Node.leaf(editor, _start.path);\n        if (_leaf.text.length === _start.offset && _end.offset === 0) {\n          var next = Editor.next(editor, {\n            at: _start.path,\n            match: Text$1.isText\n          });\n          if (next && Path.equals(next[1], _end.path)) {\n            targetRange = {\n              anchor: _end,\n              focus: _end\n            };\n          }\n        }\n      }\n      var direction = type.endsWith('Backward') ? 'backward' : 'forward';\n      var [start, end] = Range.edges(targetRange);\n      var [leaf, path] = Editor.leaf(editor, start.path);\n      var diff = {\n        text: '',\n        start: start.offset,\n        end: end.offset\n      };\n      var pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor);\n      var relevantPendingDiffs = pendingDiffs === null || pendingDiffs === void 0 ? void 0 : pendingDiffs.find(change => Path.equals(change.path, path));\n      var diffs = relevantPendingDiffs ? [relevantPendingDiffs.diff, diff] : [diff];\n      var text = applyStringDiff(leaf.text, ...diffs);\n      if (text.length === 0) {\n        // Text leaf will be removed, so we need to schedule an\n        // action to remove it so that Slate can normalize instead\n        // of storing as a diff\n        canStoreDiff = false;\n      }\n      if (Range.isExpanded(targetRange)) {\n        if (canStoreDiff && Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n          var point = {\n            path: targetRange.anchor.path,\n            offset: start.offset\n          };\n          var range = Editor.range(editor, point, point);\n          handleUserSelect(range);\n          return storeDiff(targetRange.anchor.path, {\n            text: '',\n            end: end.offset,\n            start: start.offset\n          });\n        }\n        return scheduleAction(() => Editor.deleteFragment(editor, {\n          direction\n        }), {\n          at: targetRange\n        });\n      }\n    }\n    switch (type) {\n      case 'deleteByComposition':\n      case 'deleteByCut':\n      case 'deleteByDrag':\n        {\n          return scheduleAction(() => Editor.deleteFragment(editor), {\n            at: targetRange\n          });\n        }\n      case 'deleteContent':\n      case 'deleteContentForward':\n        {\n          var {\n            anchor\n          } = targetRange;\n          if (canStoreDiff && Range.isCollapsed(targetRange)) {\n            var targetNode = Node.leaf(editor, anchor.path);\n            if (anchor.offset < targetNode.text.length) {\n              return storeDiff(anchor.path, {\n                text: '',\n                start: anchor.offset,\n                end: anchor.offset + 1\n              });\n            }\n          }\n          return scheduleAction(() => Editor.deleteForward(editor), {\n            at: targetRange\n          });\n        }\n      case 'deleteContentBackward':\n        {\n          var _nativeTargetRange;\n          var {\n            anchor: _anchor\n          } = targetRange;\n          // If we have a mismatch between the native and slate selection being collapsed\n          // we are most likely deleting a zero-width placeholder and thus should perform it\n          // as an action to ensure correct behavior (mostly happens with mark placeholders)\n          var nativeCollapsed = isDOMSelection(nativeTargetRange) ? nativeTargetRange.isCollapsed : !!((_nativeTargetRange = nativeTargetRange) !== null && _nativeTargetRange !== void 0 && _nativeTargetRange.collapsed);\n          if (canStoreDiff && nativeCollapsed && Range.isCollapsed(targetRange) && _anchor.offset > 0) {\n            return storeDiff(_anchor.path, {\n              text: '',\n              start: _anchor.offset - 1,\n              end: _anchor.offset\n            });\n          }\n          return scheduleAction(() => Editor.deleteBackward(editor), {\n            at: targetRange\n          });\n        }\n      case 'deleteEntireSoftLine':\n        {\n          return scheduleAction(() => {\n            Editor.deleteBackward(editor, {\n              unit: 'line'\n            });\n            Editor.deleteForward(editor, {\n              unit: 'line'\n            });\n          }, {\n            at: targetRange\n          });\n        }\n      case 'deleteHardLineBackward':\n        {\n          return scheduleAction(() => Editor.deleteBackward(editor, {\n            unit: 'block'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteSoftLineBackward':\n        {\n          return scheduleAction(() => Editor.deleteBackward(editor, {\n            unit: 'line'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteHardLineForward':\n        {\n          return scheduleAction(() => Editor.deleteForward(editor, {\n            unit: 'block'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteSoftLineForward':\n        {\n          return scheduleAction(() => Editor.deleteForward(editor, {\n            unit: 'line'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteWordBackward':\n        {\n          return scheduleAction(() => Editor.deleteBackward(editor, {\n            unit: 'word'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'deleteWordForward':\n        {\n          return scheduleAction(() => Editor.deleteForward(editor, {\n            unit: 'word'\n          }), {\n            at: targetRange\n          });\n        }\n      case 'insertLineBreak':\n        {\n          return scheduleAction(() => Editor.insertSoftBreak(editor), {\n            at: targetRange\n          });\n        }\n      case 'insertParagraph':\n        {\n          return scheduleAction(() => Editor.insertBreak(editor), {\n            at: targetRange\n          });\n        }\n      case 'insertCompositionText':\n      case 'deleteCompositionText':\n      case 'insertFromComposition':\n      case 'insertFromDrop':\n      case 'insertFromPaste':\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText':\n        {\n          if (isDataTransfer(data)) {\n            return scheduleAction(() => ReactEditor.insertData(editor, data), {\n              at: targetRange\n            });\n          }\n          var _text = data !== null && data !== void 0 ? data : '';\n          // COMPAT: If we are writing inside a placeholder, the ime inserts the text inside\n          // the placeholder itself and thus includes the zero-width space inside edit events.\n          if (EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)) {\n            _text = _text.replace('\\uFEFF', '');\n          }\n          // Pastes from the Android clipboard will generate `insertText` events.\n          // If the copied text contains any newlines, Android will append an\n          // extra newline to the end of the copied text.\n          if (type === 'insertText' && /.*\\n.*\\n$/.test(_text)) {\n            _text = _text.slice(0, -1);\n          }\n          // If the text includes a newline, split it at newlines and paste each component\n          // string, with soft breaks in between each.\n          if (_text.includes('\\n')) {\n            return scheduleAction(() => {\n              var parts = _text.split('\\n');\n              parts.forEach((line, i) => {\n                if (line) {\n                  Editor.insertText(editor, line);\n                }\n                if (i !== parts.length - 1) {\n                  Editor.insertSoftBreak(editor);\n                }\n              });\n            }, {\n              at: targetRange\n            });\n          }\n          if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n            var [_start2, _end2] = Range.edges(targetRange);\n            var _diff = {\n              start: _start2.offset,\n              end: _end2.offset,\n              text: _text\n            };\n            // COMPAT: Swiftkey has a weird bug where the target range of the 2nd word\n            // inserted after a mark placeholder is inserted with an anchor offset off by 1.\n            // So writing 'some text' will result in 'some ttext'. Luckily all 'normal' insert\n            // text events are fired with the correct target ranges, only the final 'insertComposition'\n            // isn't, so we can adjust the target range start offset if we are confident this is the\n            // swiftkey insert causing the issue.\n            if (_text && insertPositionHint && type === 'insertCompositionText') {\n              var hintPosition = insertPositionHint.start + insertPositionHint.text.search(/\\S|$/);\n              var diffPosition = _diff.start + _diff.text.search(/\\S|$/);\n              if (diffPosition === hintPosition + 1 && _diff.end === insertPositionHint.start + insertPositionHint.text.length) {\n                _diff.start -= 1;\n                insertPositionHint = null;\n                scheduleFlush();\n              } else {\n                insertPositionHint = false;\n              }\n            } else if (type === 'insertText') {\n              if (insertPositionHint === null) {\n                insertPositionHint = _diff;\n              } else if (insertPositionHint && Range.isCollapsed(targetRange) && insertPositionHint.end + insertPositionHint.text.length === _start2.offset) {\n                insertPositionHint = _objectSpread$6(_objectSpread$6({}, insertPositionHint), {}, {\n                  text: insertPositionHint.text + _text\n                });\n              } else {\n                insertPositionHint = false;\n              }\n            } else {\n              insertPositionHint = false;\n            }\n            if (canStoreDiff) {\n              storeDiff(_start2.path, _diff);\n              return;\n            }\n          }\n          return scheduleAction(() => Editor.insertText(editor, _text), {\n            at: targetRange\n          });\n        }\n    }\n  };\n  var hasPendingAction = () => {\n    return !!EDITOR_TO_PENDING_ACTION.get(editor);\n  };\n  var hasPendingDiffs = () => {\n    var _EDITOR_TO_PENDING_DI4;\n    return !!((_EDITOR_TO_PENDING_DI4 = EDITOR_TO_PENDING_DIFFS.get(editor)) !== null && _EDITOR_TO_PENDING_DI4 !== void 0 && _EDITOR_TO_PENDING_DI4.length);\n  };\n  var hasPendingChanges = () => {\n    return hasPendingAction() || hasPendingDiffs();\n  };\n  var isFlushing = () => {\n    return flushing;\n  };\n  var handleUserSelect = range => {\n    EDITOR_TO_PENDING_SELECTION.set(editor, range);\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId);\n      flushTimeoutId = null;\n    }\n    var {\n      selection\n    } = editor;\n    if (!range) {\n      return;\n    }\n    var pathChanged = !selection || !Path.equals(selection.anchor.path, range.anchor.path);\n    var parentPathChanged = !selection || !Path.equals(selection.anchor.path.slice(0, -1), range.anchor.path.slice(0, -1));\n    if (pathChanged && insertPositionHint || parentPathChanged) {\n      insertPositionHint = false;\n    }\n    if (pathChanged || hasPendingDiffs()) {\n      flushTimeoutId = setTimeout(flush, FLUSH_DELAY);\n    }\n  };\n  var handleInput = () => {\n    if (hasPendingAction() || !hasPendingDiffs()) {\n      flush();\n    }\n  };\n  var handleKeyDown = _ => {\n    // COMPAT: Swiftkey closes the keyboard when typing inside a empty node\n    // directly next to a non-contenteditable element (= the placeholder).\n    // The only event fired soon enough for us to allow hiding the placeholder\n    // without swiftkey picking it up is the keydown event, so we have to hide it\n    // here. See https://github.com/ianstormtaylor/slate/pull/4988#issuecomment-1201050535\n    if (!hasPendingDiffs()) {\n      updatePlaceholderVisibility(true);\n      setTimeout(updatePlaceholderVisibility);\n    }\n  };\n  var scheduleFlush = () => {\n    if (!hasPendingAction()) {\n      actionTimeoutId = setTimeout(flush);\n    }\n  };\n  var handleDomMutations = mutations => {\n    if (hasPendingDiffs() || hasPendingAction()) {\n      return;\n    }\n    if (mutations.some(mutation => isTrackedMutation(editor, mutation, mutations))) {\n      var _EDITOR_TO_FORCE_REND;\n      // Cause a re-render to restore the dom state if we encounter tracked mutations without\n      // a corresponding pending action.\n      (_EDITOR_TO_FORCE_REND = EDITOR_TO_FORCE_RENDER.get(editor)) === null || _EDITOR_TO_FORCE_REND === void 0 || _EDITOR_TO_FORCE_REND();\n    }\n  };\n  return {\n    flush,\n    scheduleFlush,\n    hasPendingDiffs,\n    hasPendingAction,\n    hasPendingChanges,\n    isFlushing,\n    handleUserSelect,\n    handleCompositionEnd,\n    handleCompositionStart,\n    handleDOMBeforeInput,\n    handleKeyDown,\n    handleDomMutations,\n    handleInput\n  };\n}\nfunction useIsMounted() {\n  var isMountedRef = useRef(false);\n  useEffect(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n  return isMountedRef.current;\n}\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\nvar useIsomorphicLayoutEffect = CAN_USE_DOM ? useLayoutEffect : useEffect;\nfunction useMutationObserver(node, callback, options) {\n  var [mutationObserver] = useState(() => new MutationObserver(callback));\n  useIsomorphicLayoutEffect(() => {\n    // Discard mutations caused during render phase. This works due to react calling\n    // useLayoutEffect synchronously after the render phase before the next tick.\n    mutationObserver.takeRecords();\n  });\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined');\n    }\n    mutationObserver.observe(node.current, options);\n    return () => mutationObserver.disconnect();\n  }, [mutationObserver, node, options]);\n}\nvar _excluded$3 = [\"node\"];\nfunction ownKeys$5(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread$5(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys$5(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$5(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nvar MUTATION_OBSERVER_CONFIG$1 = {\n  subtree: true,\n  childList: true,\n  characterData: true\n};\nvar useAndroidInputManager = !IS_ANDROID ? () => null : _ref => {\n  var {\n      node\n    } = _ref,\n    options = _objectWithoutProperties(_ref, _excluded$3);\n  if (!IS_ANDROID) {\n    return null;\n  }\n  var editor = useSlateStatic();\n  var isMounted = useIsMounted();\n  var [inputManager] = useState(() => createAndroidInputManager(_objectSpread$5({\n    editor\n  }, options)));\n  useMutationObserver(node, inputManager.handleDomMutations, MUTATION_OBSERVER_CONFIG$1);\n  EDITOR_TO_SCHEDULE_FLUSH.set(editor, inputManager.scheduleFlush);\n  if (isMounted) {\n    inputManager.flush();\n  }\n  return inputManager;\n};\nvar _excluded$2 = [\"anchor\", \"focus\"],\n  _excluded2$1 = [\"anchor\", \"focus\"];\nvar shallowCompare = (obj1, obj2) => Object.keys(obj1).length === Object.keys(obj2).length && Object.keys(obj1).every(key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]);\nvar isDecorationFlagsEqual = (range, other) => {\n  var rangeOwnProps = _objectWithoutProperties(range, _excluded$2);\n  var otherOwnProps = _objectWithoutProperties(other, _excluded2$1);\n  return range[PLACEHOLDER_SYMBOL] === other[PLACEHOLDER_SYMBOL] && shallowCompare(rangeOwnProps, otherOwnProps);\n};\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\nvar isElementDecorationsEqual = (list, another) => {\n  if (list.length !== another.length) {\n    return false;\n  }\n  for (var i = 0; i < list.length; i++) {\n    var range = list[i];\n    var other = another[i];\n    if (!Range.equals(range, other) || !isDecorationFlagsEqual(range, other)) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\nvar isTextDecorationsEqual = (list, another) => {\n  if (list.length !== another.length) {\n    return false;\n  }\n  for (var i = 0; i < list.length; i++) {\n    var range = list[i];\n    var other = another[i];\n    // compare only offsets because paths doesn't matter for text\n    if (range.anchor.offset !== other.anchor.offset || range.focus.offset !== other.focus.offset || !isDecorationFlagsEqual(range, other)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction ownKeys$4(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread$4(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys$4(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$4(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n/**\n * Leaf content strings.\n */\nvar String$1 = props => {\n  var {\n    isLast,\n    leaf,\n    parent,\n    text\n  } = props;\n  var editor = useSlateStatic();\n  var path = ReactEditor.findPath(editor, text);\n  var parentPath = Path.parent(path);\n  var isMarkPlaceholder = Boolean(leaf[MARK_PLACEHOLDER_SYMBOL]);\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return /*#__PURE__*/React.createElement(ZeroWidthString, {\n      length: Node.string(parent).length\n    });\n  }\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (leaf.text === '' && parent.children[parent.children.length - 1] === text && !editor.isInline(parent) && Editor.string(editor, parentPath) === '') {\n    return /*#__PURE__*/React.createElement(ZeroWidthString, {\n      isLineBreak: true,\n      isMarkPlaceholder: isMarkPlaceholder\n    });\n  }\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return /*#__PURE__*/React.createElement(ZeroWidthString, {\n      isMarkPlaceholder: isMarkPlaceholder\n    });\n  }\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return /*#__PURE__*/React.createElement(TextString, {\n      isTrailing: true,\n      text: leaf.text\n    });\n  }\n  return /*#__PURE__*/React.createElement(TextString, {\n    text: leaf.text\n  });\n};\n/**\n * Leaf strings with text in them.\n */\nvar TextString = props => {\n  var {\n    text,\n    isTrailing = false\n  } = props;\n  var ref = useRef(null);\n  var getTextContent = () => {\n    return \"\".concat(text !== null && text !== void 0 ? text : '').concat(isTrailing ? '\\n' : '');\n  };\n  var [initialText] = useState(getTextContent);\n  // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n  // useLayoutEffect: updating our span before browser paint\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    var textWithTrailing = getTextContent();\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing;\n    }\n    // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  });\n  // We intentionally render a memoized <span> that only receives the initial text content when the component is mounted.\n  // We defer to the layout effect above to update the `textContent` of the span element when needed.\n  return /*#__PURE__*/React.createElement(MemoizedText$1, {\n    ref: ref\n  }, initialText);\n};\nvar MemoizedText$1 = /*#__PURE__*/memo(/*#__PURE__*/forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-slate-string\": true,\n    ref: ref\n  }, props.children);\n}));\n/**\n * Leaf strings without text, render as zero-width strings.\n */\nvar ZeroWidthString = props => {\n  var {\n    length = 0,\n    isLineBreak = false,\n    isMarkPlaceholder = false\n  } = props;\n  var attributes = {\n    'data-slate-zero-width': isLineBreak ? 'n' : 'z',\n    'data-slate-length': length\n  };\n  if (isMarkPlaceholder) {\n    attributes['data-slate-mark-placeholder'] = true;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", _objectSpread$4({}, attributes), !IS_ANDROID || !isLineBreak ? '\\uFEFF' : null, isLineBreak ? /*#__PURE__*/React.createElement(\"br\", null) : null);\n};\nfunction ownKeys$3(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread$3(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys$3(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$3(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n// Delay the placeholder on Android to prevent the keyboard from closing.\n// (https://github.com/ianstormtaylor/slate/pull/5368)\nvar PLACEHOLDER_DELAY = IS_ANDROID ? 300 : 0;\nfunction disconnectPlaceholderResizeObserver(placeholderResizeObserver, releaseObserver) {\n  if (placeholderResizeObserver.current) {\n    placeholderResizeObserver.current.disconnect();\n    if (releaseObserver) {\n      placeholderResizeObserver.current = null;\n    }\n  }\n}\nfunction clearTimeoutRef(timeoutRef) {\n  if (timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = null;\n  }\n}\n/**\n * Individual leaves in a text node with unique formatting.\n */\nvar Leaf = props => {\n  var {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = props => /*#__PURE__*/React.createElement(DefaultLeaf, _objectSpread$3({}, props))\n  } = props;\n  var editor = useSlateStatic();\n  var placeholderResizeObserver = useRef(null);\n  var placeholderRef = useRef(null);\n  var [showPlaceholder, setShowPlaceholder] = useState(false);\n  var showPlaceholderTimeoutRef = useRef(null);\n  var callbackPlaceholderRef = useCallback(placeholderEl => {\n    disconnectPlaceholderResizeObserver(placeholderResizeObserver, placeholderEl == null);\n    if (placeholderEl == null) {\n      var _leaf$onPlaceholderRe;\n      EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor);\n      (_leaf$onPlaceholderRe = leaf.onPlaceholderResize) === null || _leaf$onPlaceholderRe === void 0 || _leaf$onPlaceholderRe.call(leaf, null);\n    } else {\n      EDITOR_TO_PLACEHOLDER_ELEMENT.set(editor, placeholderEl);\n      if (!placeholderResizeObserver.current) {\n        // Create a new observer and observe the placeholder element.\n        var ResizeObserver$1 = window.ResizeObserver || ResizeObserver;\n        placeholderResizeObserver.current = new ResizeObserver$1(() => {\n          var _leaf$onPlaceholderRe2;\n          (_leaf$onPlaceholderRe2 = leaf.onPlaceholderResize) === null || _leaf$onPlaceholderRe2 === void 0 || _leaf$onPlaceholderRe2.call(leaf, placeholderEl);\n        });\n      }\n      placeholderResizeObserver.current.observe(placeholderEl);\n      placeholderRef.current = placeholderEl;\n    }\n  }, [placeholderRef, leaf, editor]);\n  var children = /*#__PURE__*/React.createElement(String$1, {\n    isLast: isLast,\n    leaf: leaf,\n    parent: parent,\n    text: text\n  });\n  var leafIsPlaceholder = Boolean(leaf[PLACEHOLDER_SYMBOL]);\n  useEffect(() => {\n    if (leafIsPlaceholder) {\n      if (!showPlaceholderTimeoutRef.current) {\n        // Delay the placeholder, so it will not render in a selection\n        showPlaceholderTimeoutRef.current = setTimeout(() => {\n          setShowPlaceholder(true);\n          showPlaceholderTimeoutRef.current = null;\n        }, PLACEHOLDER_DELAY);\n      }\n    } else {\n      clearTimeoutRef(showPlaceholderTimeoutRef);\n      setShowPlaceholder(false);\n    }\n    return () => clearTimeoutRef(showPlaceholderTimeoutRef);\n  }, [leafIsPlaceholder, setShowPlaceholder]);\n  if (leafIsPlaceholder && showPlaceholder) {\n    var placeholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          top: 0,\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n          // Fixes https://github.com/udecode/plate/issues/2315\n          WebkitUserModify: IS_WEBKIT ? 'inherit' : undefined\n        },\n        contentEditable: false,\n        ref: callbackPlaceholderRef\n      }\n    };\n    children = /*#__PURE__*/React.createElement(React.Fragment, null, renderPlaceholder(placeholderProps), children);\n  }\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  var attributes = {\n    'data-slate-leaf': true\n  };\n  return renderLeaf({\n    attributes,\n    children,\n    leaf,\n    text\n  });\n};\nvar MemoizedLeaf = /*#__PURE__*/React.memo(Leaf, (prev, next) => {\n  return next.parent === prev.parent && next.isLast === prev.isLast && next.renderLeaf === prev.renderLeaf && next.renderPlaceholder === prev.renderPlaceholder && next.text === prev.text && Text$1.equals(next.leaf, prev.leaf) && next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL];\n});\nvar DefaultLeaf = props => {\n  var {\n    attributes,\n    children\n  } = props;\n  return /*#__PURE__*/React.createElement(\"span\", _objectSpread$3({}, attributes), children);\n};\n\n/**\n * Text.\n */\nvar Text = props => {\n  var {\n    decorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    text\n  } = props;\n  var editor = useSlateStatic();\n  var ref = useRef(null);\n  var leaves = Text$1.decorations(text, decorations);\n  var key = ReactEditor.findKey(editor, text);\n  var children = [];\n  for (var i = 0; i < leaves.length; i++) {\n    var leaf = leaves[i];\n    children.push(/*#__PURE__*/React.createElement(MemoizedLeaf, {\n      isLast: isLast && i === leaves.length - 1,\n      key: \"\".concat(key.id, \"-\").concat(i),\n      renderPlaceholder: renderPlaceholder,\n      leaf: leaf,\n      text: text,\n      parent: parent,\n      renderLeaf: renderLeaf\n    }));\n  }\n  // Update element-related weak maps with the DOM element ref.\n  var callbackRef = useCallback(span => {\n    var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);\n    if (span) {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 || KEY_TO_ELEMENT.set(key, span);\n      NODE_TO_ELEMENT.set(text, span);\n      ELEMENT_TO_NODE.set(span, text);\n    } else {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 || KEY_TO_ELEMENT.delete(key);\n      NODE_TO_ELEMENT.delete(text);\n      if (ref.current) {\n        ELEMENT_TO_NODE.delete(ref.current);\n      }\n    }\n    ref.current = span;\n  }, [ref, editor, key, text]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-slate-node\": \"text\",\n    ref: callbackRef\n  }, children);\n};\nvar MemoizedText = /*#__PURE__*/React.memo(Text, (prev, next) => {\n  return next.parent === prev.parent && next.isLast === prev.isLast && next.renderLeaf === prev.renderLeaf && next.renderPlaceholder === prev.renderPlaceholder && next.text === prev.text && isTextDecorationsEqual(next.decorations, prev.decorations);\n});\nfunction ownKeys$2(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread$2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys$2(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$2(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n/**\n * Element.\n */\nvar Element = props => {\n  var {\n    decorations,\n    element,\n    renderElement = p => /*#__PURE__*/React.createElement(DefaultElement, _objectSpread$2({}, p)),\n    renderPlaceholder,\n    renderLeaf,\n    selection\n  } = props;\n  var editor = useSlateStatic();\n  var readOnly = useReadOnly();\n  var isInline = editor.isInline(element);\n  var key = ReactEditor.findKey(editor, element);\n  var ref = useCallback(ref => {\n    // Update element-related weak maps with the DOM element ref.\n    var KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor);\n    if (ref) {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 || KEY_TO_ELEMENT.set(key, ref);\n      NODE_TO_ELEMENT.set(element, ref);\n      ELEMENT_TO_NODE.set(ref, element);\n    } else {\n      KEY_TO_ELEMENT === null || KEY_TO_ELEMENT === void 0 || KEY_TO_ELEMENT.delete(key);\n      NODE_TO_ELEMENT.delete(element);\n    }\n  }, [editor, key, element]);\n  var children = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection\n  });\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  var attributes = {\n    'data-slate-node': 'element',\n    ref\n  };\n  if (isInline) {\n    attributes['data-slate-inline'] = true;\n  }\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    var text = Node.string(element);\n    var dir = getDirection(text);\n    if (dir === 'rtl') {\n      attributes.dir = dir;\n    }\n  }\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true;\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false;\n    }\n    var Tag = isInline ? 'span' : 'div';\n    var [[_text]] = Node.texts(element);\n    children = /*#__PURE__*/React.createElement(Tag, {\n      \"data-slate-spacer\": true,\n      style: {\n        height: '0',\n        color: 'transparent',\n        outline: 'none',\n        position: 'absolute'\n      }\n    }, /*#__PURE__*/React.createElement(MemoizedText, {\n      renderPlaceholder: renderPlaceholder,\n      decorations: [],\n      isLast: false,\n      parent: element,\n      text: _text\n    }));\n    NODE_TO_INDEX.set(_text, 0);\n    NODE_TO_PARENT.set(_text, element);\n  }\n  return renderElement({\n    attributes,\n    children,\n    element\n  });\n};\nvar MemoizedElement = /*#__PURE__*/React.memo(Element, (prev, next) => {\n  return prev.element === next.element && prev.renderElement === next.renderElement && prev.renderLeaf === next.renderLeaf && prev.renderPlaceholder === next.renderPlaceholder && isElementDecorationsEqual(prev.decorations, next.decorations) && (prev.selection === next.selection || !!prev.selection && !!next.selection && Range.equals(prev.selection, next.selection));\n});\n/**\n * The default element renderer.\n */\nvar DefaultElement = props => {\n  var {\n    attributes,\n    children,\n    element\n  } = props;\n  var editor = useSlateStatic();\n  var Tag = editor.isInline(element) ? 'span' : 'div';\n  return /*#__PURE__*/React.createElement(Tag, _objectSpread$2(_objectSpread$2({}, attributes), {}, {\n    style: {\n      position: 'relative'\n    }\n  }), children);\n};\n\n/**\n * A React context for sharing the `decorate` prop of the editable.\n */\nvar DecorateContext = /*#__PURE__*/createContext(() => []);\n/**\n * Get the current `decorate` prop of the editable.\n */\nvar useDecorate = () => {\n  return useContext(DecorateContext);\n};\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\nvar SelectedContext = /*#__PURE__*/createContext(false);\n/**\n * Get the current `selected` state of an element.\n */\nvar useSelected = () => {\n  return useContext(SelectedContext);\n};\n\n/**\n * Children.\n */\nvar useChildren = props => {\n  var {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection\n  } = props;\n  var decorate = useDecorate();\n  var editor = useSlateStatic();\n  var path = ReactEditor.findPath(editor, node);\n  var children = [];\n  var isLeafBlock = Element$1.isElement(node) && !editor.isInline(node) && Editor.hasInlines(editor, node);\n  for (var i = 0; i < node.children.length; i++) {\n    var p = path.concat(i);\n    var n = node.children[i];\n    var key = ReactEditor.findKey(editor, n);\n    var range = Editor.range(editor, p);\n    var sel = selection && Range.intersection(range, selection);\n    var ds = decorate([n, p]);\n    for (var dec of decorations) {\n      var d = Range.intersection(dec, range);\n      if (d) {\n        ds.push(d);\n      }\n    }\n    if (Element$1.isElement(n)) {\n      children.push(/*#__PURE__*/React.createElement(SelectedContext.Provider, {\n        key: \"provider-\".concat(key.id),\n        value: !!sel\n      }, /*#__PURE__*/React.createElement(MemoizedElement, {\n        decorations: ds,\n        element: n,\n        key: key.id,\n        renderElement: renderElement,\n        renderPlaceholder: renderPlaceholder,\n        renderLeaf: renderLeaf,\n        selection: sel\n      })));\n    } else {\n      children.push(/*#__PURE__*/React.createElement(MemoizedText, {\n        decorations: ds,\n        key: key.id,\n        isLast: isLeafBlock && i === node.children.length - 1,\n        parent: node,\n        renderPlaceholder: renderPlaceholder,\n        renderLeaf: renderLeaf,\n        text: n\n      }));\n    }\n    NODE_TO_INDEX.set(n, i);\n    NODE_TO_PARENT.set(n, node);\n  }\n  return children;\n};\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\nvar ReadOnlyContext = /*#__PURE__*/createContext(false);\n/**\n * Get the current `readOnly` state of the editor.\n */\nvar useReadOnly = () => {\n  return useContext(ReadOnlyContext);\n};\nvar SlateContext = /*#__PURE__*/createContext(null);\n/**\n * Get the current editor object from the React context.\n */\nvar useSlate = () => {\n  var context = useContext(SlateContext);\n  if (!context) {\n    throw new Error(\"The `useSlate` hook must be used inside the <Slate> component's context.\");\n  }\n  var {\n    editor\n  } = context;\n  return editor;\n};\nvar useSlateWithV = () => {\n  var context = useContext(SlateContext);\n  if (!context) {\n    throw new Error(\"The `useSlate` hook must be used inside the <Slate> component's context.\");\n  }\n  return context;\n};\nfunction useTrackUserInput() {\n  var editor = useSlateStatic();\n  var receivedUserInput = useRef(false);\n  var animationFrameIdRef = useRef(0);\n  var onUserInput = useCallback(() => {\n    if (receivedUserInput.current) {\n      return;\n    }\n    receivedUserInput.current = true;\n    var window = ReactEditor.getWindow(editor);\n    window.cancelAnimationFrame(animationFrameIdRef.current);\n    animationFrameIdRef.current = window.requestAnimationFrame(() => {\n      receivedUserInput.current = false;\n    });\n  }, [editor]);\n  useEffect(() => () => cancelAnimationFrame(animationFrameIdRef.current), []);\n  return {\n    receivedUserInput,\n    onUserInput\n  };\n}\nvar TRIPLE_CLICK = 3;\n\n/**\n * Hotkey mappings for each platform.\n */\nvar HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z'\n};\nvar APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t'\n};\nvar WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z']\n};\n/**\n * Create a platform-aware hotkey checker.\n */\nvar create = key => {\n  var generic = HOTKEYS[key];\n  var apple = APPLE_HOTKEYS[key];\n  var windows = WINDOWS_HOTKEYS[key];\n  var isGeneric = generic && isHotkey(generic);\n  var isApple = apple && isHotkey(apple);\n  var isWindows = windows && isHotkey(windows);\n  return event => {\n    if (isGeneric && isGeneric(event)) return true;\n    if (IS_APPLE && isApple && isApple(event)) return true;\n    if (!IS_APPLE && isWindows && isWindows(event)) return true;\n    return false;\n  };\n};\n/**\n * Hotkeys.\n */\nvar Hotkeys = {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo')\n};\nvar createRestoreDomManager = (editor, receivedUserInput) => {\n  var bufferedMutations = [];\n  var clear = () => {\n    bufferedMutations = [];\n  };\n  var registerMutations = mutations => {\n    if (!receivedUserInput.current) {\n      return;\n    }\n    var trackedMutations = mutations.filter(mutation => isTrackedMutation(editor, mutation, mutations));\n    bufferedMutations.push(...trackedMutations);\n  };\n  function restoreDOM() {\n    if (bufferedMutations.length > 0) {\n      bufferedMutations.reverse().forEach(mutation => {\n        if (mutation.type === 'characterData') {\n          // We don't want to restore the DOM for characterData mutations\n          // because this interrupts the composition.\n          return;\n        }\n        mutation.removedNodes.forEach(node => {\n          mutation.target.insertBefore(node, mutation.nextSibling);\n        });\n        mutation.addedNodes.forEach(node => {\n          mutation.target.removeChild(node);\n        });\n      });\n      // Clear buffered mutations to ensure we don't undo them twice\n      clear();\n    }\n  }\n  return {\n    registerMutations,\n    restoreDOM,\n    clear\n  };\n};\nvar MUTATION_OBSERVER_CONFIG = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true\n};\n// We have to use a class component here since we rely on `getSnapshotBeforeUpdate` which has no FC equivalent\n// to run code synchronously immediately before react commits the component update to the DOM.\nclass RestoreDOMComponent extends Component {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"context\", null);\n    _defineProperty(this, \"manager\", null);\n    _defineProperty(this, \"mutationObserver\", null);\n  }\n  observe() {\n    var _this$mutationObserve;\n    var {\n      node\n    } = this.props;\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined');\n    }\n    (_this$mutationObserve = this.mutationObserver) === null || _this$mutationObserve === void 0 || _this$mutationObserve.observe(node.current, MUTATION_OBSERVER_CONFIG);\n  }\n  componentDidMount() {\n    var {\n      receivedUserInput\n    } = this.props;\n    var editor = this.context;\n    this.manager = createRestoreDomManager(editor, receivedUserInput);\n    this.mutationObserver = new MutationObserver(this.manager.registerMutations);\n    this.observe();\n  }\n  getSnapshotBeforeUpdate() {\n    var _this$mutationObserve2, _this$mutationObserve3, _this$manager2;\n    var pendingMutations = (_this$mutationObserve2 = this.mutationObserver) === null || _this$mutationObserve2 === void 0 ? void 0 : _this$mutationObserve2.takeRecords();\n    if (pendingMutations !== null && pendingMutations !== void 0 && pendingMutations.length) {\n      var _this$manager;\n      (_this$manager = this.manager) === null || _this$manager === void 0 || _this$manager.registerMutations(pendingMutations);\n    }\n    (_this$mutationObserve3 = this.mutationObserver) === null || _this$mutationObserve3 === void 0 || _this$mutationObserve3.disconnect();\n    (_this$manager2 = this.manager) === null || _this$manager2 === void 0 || _this$manager2.restoreDOM();\n    return null;\n  }\n  componentDidUpdate() {\n    var _this$manager3;\n    (_this$manager3 = this.manager) === null || _this$manager3 === void 0 || _this$manager3.clear();\n    this.observe();\n  }\n  componentWillUnmount() {\n    var _this$mutationObserve4;\n    (_this$mutationObserve4 = this.mutationObserver) === null || _this$mutationObserve4 === void 0 || _this$mutationObserve4.disconnect();\n  }\n  render() {\n    return this.props.children;\n  }\n}\n_defineProperty(RestoreDOMComponent, \"contextType\", EditorContext);\nvar RestoreDOM = IS_ANDROID ? RestoreDOMComponent : _ref => {\n  var {\n    children\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};\nvar _excluded$1 = [\"autoFocus\", \"decorate\", \"onDOMBeforeInput\", \"placeholder\", \"readOnly\", \"renderElement\", \"renderLeaf\", \"renderPlaceholder\", \"scrollSelectionIntoView\", \"style\", \"as\", \"disableDefaultStyles\"],\n  _excluded2 = [\"text\"];\nfunction ownKeys$1(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread$1(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys$1(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$1(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nvar Children = props => /*#__PURE__*/React.createElement(React.Fragment, null, useChildren(props));\n/**\n * Editable.\n */\nvar Editable = props => {\n  var defaultRenderPlaceholder = useCallback(props => /*#__PURE__*/React.createElement(DefaultPlaceholder, _objectSpread$1({}, props)), []);\n  var {\n      autoFocus,\n      decorate = defaultDecorate,\n      onDOMBeforeInput: propsOnDOMBeforeInput,\n      placeholder,\n      readOnly = false,\n      renderElement,\n      renderLeaf,\n      renderPlaceholder = defaultRenderPlaceholder,\n      scrollSelectionIntoView = defaultScrollSelectionIntoView,\n      style: userStyle = {},\n      as: Component = 'div',\n      disableDefaultStyles = false\n    } = props,\n    attributes = _objectWithoutProperties(props, _excluded$1);\n  var editor = useSlate();\n  // Rerender editor when composition status changed\n  var [isComposing, setIsComposing] = useState(false);\n  var ref = useRef(null);\n  var deferredOperations = useRef([]);\n  var [placeholderHeight, setPlaceholderHeight] = useState();\n  var {\n    onUserInput,\n    receivedUserInput\n  } = useTrackUserInput();\n  var [, forceRender] = useReducer(s => s + 1, 0);\n  EDITOR_TO_FORCE_RENDER.set(editor, forceRender);\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly);\n  // Keep track of some state for the event handler logic.\n  var state = useMemo(() => ({\n    isDraggingInternally: false,\n    isUpdatingSelection: false,\n    latestElement: null,\n    hasMarkPlaceholder: false\n  }), []);\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus();\n    }\n  }, [autoFocus]);\n  /**\n   * The AndroidInputManager object has a cyclical dependency on onDOMSelectionChange\n   *\n   * It is defined as a reference to simplify hook dependencies and clarify that\n   * it needs to be initialized.\n   */\n  var androidInputManagerRef = useRef();\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  var onDOMSelectionChange = useMemo(() => throttle(() => {\n    var androidInputManager = androidInputManagerRef.current;\n    if ((IS_ANDROID || !ReactEditor.isComposing(editor)) && (!state.isUpdatingSelection || androidInputManager !== null && androidInputManager !== void 0 && androidInputManager.isFlushing()) && !state.isDraggingInternally) {\n      var root = ReactEditor.findDocumentOrShadowRoot(editor);\n      var {\n        activeElement\n      } = root;\n      var el = ReactEditor.toDOMNode(editor, editor);\n      var domSelection = root.getSelection();\n      if (activeElement === el) {\n        state.latestElement = activeElement;\n        IS_FOCUSED.set(editor, true);\n      } else {\n        IS_FOCUSED.delete(editor);\n      }\n      if (!domSelection) {\n        return Transforms.deselect(editor);\n      }\n      var {\n        anchorNode,\n        focusNode\n      } = domSelection;\n      var anchorNodeSelectable = ReactEditor.hasEditableTarget(editor, anchorNode) || ReactEditor.isTargetInsideNonReadonlyVoid(editor, anchorNode);\n      var focusNodeSelectable = ReactEditor.hasEditableTarget(editor, focusNode) || ReactEditor.isTargetInsideNonReadonlyVoid(editor, focusNode);\n      if (anchorNodeSelectable && focusNodeSelectable) {\n        var range = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: true\n        });\n        if (range) {\n          if (!ReactEditor.isComposing(editor) && !(androidInputManager !== null && androidInputManager !== void 0 && androidInputManager.hasPendingChanges()) && !(androidInputManager !== null && androidInputManager !== void 0 && androidInputManager.isFlushing())) {\n            Transforms.select(editor, range);\n          } else {\n            androidInputManager === null || androidInputManager === void 0 || androidInputManager.handleUserSelect(range);\n          }\n        }\n      }\n      // Deselect the editor if the dom selection is not selectable in readonly mode\n      if (readOnly && (!anchorNodeSelectable || !focusNodeSelectable)) {\n        Transforms.deselect(editor);\n      }\n    }\n  }, 100), [editor, readOnly, state]);\n  var scheduleOnDOMSelectionChange = useMemo(() => debounce(onDOMSelectionChange, 0), [onDOMSelectionChange]);\n  androidInputManagerRef.current = useAndroidInputManager({\n    node: ref,\n    onDOMSelectionChange,\n    scheduleOnDOMSelectionChange\n  });\n  useIsomorphicLayoutEffect(() => {\n    var _androidInputManagerR, _androidInputManagerR2;\n    // Update element-related weak maps with the DOM element ref.\n    var window;\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window);\n      EDITOR_TO_ELEMENT.set(editor, ref.current);\n      NODE_TO_ELEMENT.set(editor, ref.current);\n      ELEMENT_TO_NODE.set(ref.current, editor);\n    } else {\n      NODE_TO_ELEMENT.delete(editor);\n    }\n    // Make sure the DOM selection state is in sync.\n    var {\n      selection\n    } = editor;\n    var root = ReactEditor.findDocumentOrShadowRoot(editor);\n    var domSelection = root.getSelection();\n    if (!domSelection || !ReactEditor.isFocused(editor) || (_androidInputManagerR = androidInputManagerRef.current) !== null && _androidInputManagerR !== void 0 && _androidInputManagerR.hasPendingAction()) {\n      return;\n    }\n    var setDomSelection = forceChange => {\n      var hasDomSelection = domSelection.type !== 'None';\n      // If the DOM selection is properly unset, we're done.\n      if (!selection && !hasDomSelection) {\n        return;\n      }\n      // Get anchorNode and focusNode\n      var focusNode = domSelection.focusNode;\n      var anchorNode;\n      // COMPAT: In firefox the normal seletion way does not work\n      // (https://github.com/ianstormtaylor/slate/pull/5486#issue-1820720223)\n      if (IS_FIREFOX && domSelection.rangeCount > 1) {\n        var firstRange = domSelection.getRangeAt(0);\n        var lastRange = domSelection.getRangeAt(domSelection.rangeCount - 1);\n        // Right to left\n        if (firstRange.startContainer === focusNode) {\n          anchorNode = lastRange.endContainer;\n        } else {\n          // Left to right\n          anchorNode = firstRange.startContainer;\n        }\n      } else {\n        anchorNode = domSelection.anchorNode;\n      }\n      // verify that the dom selection is in the editor\n      var editorElement = EDITOR_TO_ELEMENT.get(editor);\n      var hasDomSelectionInEditor = false;\n      if (editorElement.contains(anchorNode) && editorElement.contains(focusNode)) {\n        hasDomSelectionInEditor = true;\n      }\n      // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n      if (hasDomSelection && hasDomSelectionInEditor && selection && !forceChange) {\n        var slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n          // domSelection is not necessarily a valid Slate range\n          // (e.g. when clicking on contentEditable:false element)\n          suppressThrow: true\n        });\n        if (slateRange && Range.equals(slateRange, selection)) {\n          var _anchorNode;\n          if (!state.hasMarkPlaceholder) {\n            return;\n          }\n          // Ensure selection is inside the mark placeholder\n          if ((_anchorNode = anchorNode) !== null && _anchorNode !== void 0 && (_anchorNode = _anchorNode.parentElement) !== null && _anchorNode !== void 0 && _anchorNode.hasAttribute('data-slate-mark-placeholder')) {\n            return;\n          }\n        }\n      }\n      // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: true\n        });\n        return;\n      }\n      // Otherwise the DOM selection is out of sync, so update it.\n      state.isUpdatingSelection = true;\n      var newDomRange = selection && ReactEditor.toDOMRange(editor, selection);\n      if (newDomRange) {\n        if (ReactEditor.isComposing(editor) && !IS_ANDROID) {\n          domSelection.collapseToEnd();\n        } else if (Range.isBackward(selection)) {\n          domSelection.setBaseAndExtent(newDomRange.endContainer, newDomRange.endOffset, newDomRange.startContainer, newDomRange.startOffset);\n        } else {\n          domSelection.setBaseAndExtent(newDomRange.startContainer, newDomRange.startOffset, newDomRange.endContainer, newDomRange.endOffset);\n        }\n        scrollSelectionIntoView(editor, newDomRange);\n      } else {\n        domSelection.removeAllRanges();\n      }\n      return newDomRange;\n    };\n    // In firefox if there is more then 1 range and we call setDomSelection we remove the ability to select more cells in a table\n    if (domSelection.rangeCount <= 1) {\n      setDomSelection();\n    }\n    var ensureSelection = ((_androidInputManagerR2 = androidInputManagerRef.current) === null || _androidInputManagerR2 === void 0 ? void 0 : _androidInputManagerR2.isFlushing()) === 'action';\n    if (!IS_ANDROID || !ensureSelection) {\n      setTimeout(() => {\n        state.isUpdatingSelection = false;\n      });\n      return;\n    }\n    var timeoutId = null;\n    var animationFrameId = requestAnimationFrame(() => {\n      if (ensureSelection) {\n        var ensureDomSelection = forceChange => {\n          try {\n            var el = ReactEditor.toDOMNode(editor, editor);\n            el.focus();\n            setDomSelection(forceChange);\n          } catch (e) {\n            // Ignore, dom and state might be out of sync\n          }\n        };\n        // Compat: Android IMEs try to force their selection by manually re-applying it even after we set it.\n        // This essentially would make setting the slate selection during an update meaningless, so we force it\n        // again here. We can't only do it in the setTimeout after the animation frame since that would cause a\n        // visible flicker.\n        ensureDomSelection();\n        timeoutId = setTimeout(() => {\n          // COMPAT: While setting the selection in an animation frame visually correctly sets the selection,\n          // it doesn't update GBoards spellchecker state. We have to manually trigger a selection change after\n          // the animation frame to ensure it displays the correct state.\n          ensureDomSelection(true);\n          state.isUpdatingSelection = false;\n        });\n      }\n    });\n    return () => {\n      cancelAnimationFrame(animationFrameId);\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  });\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  var onDOMBeforeInput = useCallback(event => {\n    onUserInput();\n    if (!readOnly && ReactEditor.hasEditableTarget(editor, event.target) && !isDOMEventHandled(event, propsOnDOMBeforeInput)) {\n      var _EDITOR_TO_USER_SELEC;\n      // COMPAT: BeforeInput events aren't cancelable on android, so we have to handle them differently using the android input manager.\n      if (androidInputManagerRef.current) {\n        return androidInputManagerRef.current.handleDOMBeforeInput(event);\n      }\n      // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n      // triggering a `beforeinput` expecting the change to be applied to the immediately before\n      // set selection.\n      scheduleOnDOMSelectionChange.flush();\n      onDOMSelectionChange.flush();\n      var {\n        selection\n      } = editor;\n      var {\n        inputType: type\n      } = event;\n      var data = event.dataTransfer || event.data || undefined;\n      var isCompositionChange = type === 'insertCompositionText' || type === 'deleteCompositionText';\n      // COMPAT: use composition change events as a hint to where we should insert\n      // composition text if we aren't composing to work around https://github.com/ianstormtaylor/slate/issues/5038\n      if (isCompositionChange && ReactEditor.isComposing(editor)) {\n        return;\n      }\n      var native = false;\n      if (type === 'insertText' && selection && Range.isCollapsed(selection) &&\n      // Only use native character insertion for single characters a-z or space for now.\n      // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n      // causes duplicate inserts.\n      event.data && event.data.length === 1 && /[a-z ]/i.test(event.data) &&\n      // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n      // When there is an inline element, e.g. a link, and you select\n      // right after it (the start of the next node).\n      selection.anchor.offset !== 0) {\n        var _node$parentElement, _window$getComputedSt;\n        native = true;\n        // Skip native if there are marks, as\n        // `insertText` will insert a node, not just text.\n        if (editor.marks) {\n          native = false;\n        }\n        // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n        // Therefore we don't allow native events to insert text at the end of anchor nodes.\n        var {\n          anchor\n        } = selection;\n        var [node, offset] = ReactEditor.toDOMPoint(editor, anchor);\n        var anchorNode = (_node$parentElement = node.parentElement) === null || _node$parentElement === void 0 ? void 0 : _node$parentElement.closest('a');\n        var window = ReactEditor.getWindow(editor);\n        if (native && anchorNode && ReactEditor.hasDOMNode(editor, anchorNode)) {\n          var _lastText$textContent;\n          // Find the last text node inside the anchor.\n          var lastText = window === null || window === void 0 ? void 0 : window.document.createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT).lastChild();\n          if (lastText === node && ((_lastText$textContent = lastText.textContent) === null || _lastText$textContent === void 0 ? void 0 : _lastText$textContent.length) === offset) {\n            native = false;\n          }\n        }\n        // Chrome has issues with the presence of tab characters inside elements with whiteSpace = 'pre'\n        // causing abnormal insert behavior: https://bugs.chromium.org/p/chromium/issues/detail?id=1219139\n        if (native && node.parentElement && (window === null || window === void 0 || (_window$getComputedSt = window.getComputedStyle(node.parentElement)) === null || _window$getComputedSt === void 0 ? void 0 : _window$getComputedSt.whiteSpace) === 'pre') {\n          var block = Editor.above(editor, {\n            at: anchor.path,\n            match: n => Element$1.isElement(n) && Editor.isBlock(editor, n)\n          });\n          if (block && Node.string(block[0]).includes('\\t')) {\n            native = false;\n          }\n        }\n      }\n      // COMPAT: For the deleting forward/backward input types we don't want\n      // to change the selection because it is the range that will be deleted,\n      // and those commands determine that for themselves.\n      if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n        var [targetRange] = event.getTargetRanges();\n        if (targetRange) {\n          var range = ReactEditor.toSlateRange(editor, targetRange, {\n            exactMatch: false,\n            suppressThrow: false\n          });\n          if (!selection || !Range.equals(selection, range)) {\n            native = false;\n            var selectionRef = !isCompositionChange && editor.selection && Editor.rangeRef(editor, editor.selection);\n            Transforms.select(editor, range);\n            if (selectionRef) {\n              EDITOR_TO_USER_SELECTION.set(editor, selectionRef);\n            }\n          }\n        }\n      }\n      // Composition change types occur while a user is composing text and can't be\n      // cancelled. Let them through and wait for the composition to end.\n      if (isCompositionChange) {\n        return;\n      }\n      if (!native) {\n        event.preventDefault();\n      }\n      // COMPAT: If the selection is expanded, even if the command seems like\n      // a delete forward/backward command it should delete the selection.\n      if (selection && Range.isExpanded(selection) && type.startsWith('delete')) {\n        var direction = type.endsWith('Backward') ? 'backward' : 'forward';\n        Editor.deleteFragment(editor, {\n          direction\n        });\n        return;\n      }\n      switch (type) {\n        case 'deleteByComposition':\n        case 'deleteByCut':\n        case 'deleteByDrag':\n          {\n            Editor.deleteFragment(editor);\n            break;\n          }\n        case 'deleteContent':\n        case 'deleteContentForward':\n          {\n            Editor.deleteForward(editor);\n            break;\n          }\n        case 'deleteContentBackward':\n          {\n            Editor.deleteBackward(editor);\n            break;\n          }\n        case 'deleteEntireSoftLine':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'line'\n            });\n            Editor.deleteForward(editor, {\n              unit: 'line'\n            });\n            break;\n          }\n        case 'deleteHardLineBackward':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'block'\n            });\n            break;\n          }\n        case 'deleteSoftLineBackward':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'line'\n            });\n            break;\n          }\n        case 'deleteHardLineForward':\n          {\n            Editor.deleteForward(editor, {\n              unit: 'block'\n            });\n            break;\n          }\n        case 'deleteSoftLineForward':\n          {\n            Editor.deleteForward(editor, {\n              unit: 'line'\n            });\n            break;\n          }\n        case 'deleteWordBackward':\n          {\n            Editor.deleteBackward(editor, {\n              unit: 'word'\n            });\n            break;\n          }\n        case 'deleteWordForward':\n          {\n            Editor.deleteForward(editor, {\n              unit: 'word'\n            });\n            break;\n          }\n        case 'insertLineBreak':\n          Editor.insertSoftBreak(editor);\n          break;\n        case 'insertParagraph':\n          {\n            Editor.insertBreak(editor);\n            break;\n          }\n        case 'insertFromComposition':\n        case 'insertFromDrop':\n        case 'insertFromPaste':\n        case 'insertFromYank':\n        case 'insertReplacementText':\n        case 'insertText':\n          {\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              if (ReactEditor.isComposing(editor)) {\n                setIsComposing(false);\n                IS_COMPOSING.set(editor, false);\n              }\n            }\n            // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n            if ((data === null || data === void 0 ? void 0 : data.constructor.name) === 'DataTransfer') {\n              ReactEditor.insertData(editor, data);\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() => Editor.insertText(editor, data));\n              } else {\n                Editor.insertText(editor, data);\n              }\n            }\n            break;\n          }\n      }\n      // Restore the actual user section if nothing manually set it.\n      var toRestore = (_EDITOR_TO_USER_SELEC = EDITOR_TO_USER_SELECTION.get(editor)) === null || _EDITOR_TO_USER_SELEC === void 0 ? void 0 : _EDITOR_TO_USER_SELEC.unref();\n      EDITOR_TO_USER_SELECTION.delete(editor);\n      if (toRestore && (!editor.selection || !Range.equals(editor.selection, toRestore))) {\n        Transforms.select(editor, toRestore);\n      }\n    }\n  }, [editor, onDOMSelectionChange, onUserInput, propsOnDOMBeforeInput, readOnly, scheduleOnDOMSelectionChange]);\n  var callbackRef = useCallback(node => {\n    if (node == null) {\n      onDOMSelectionChange.cancel();\n      scheduleOnDOMSelectionChange.cancel();\n      EDITOR_TO_ELEMENT.delete(editor);\n      NODE_TO_ELEMENT.delete(editor);\n      if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput);\n      }\n    } else {\n      // Attach a native DOM event handler for `beforeinput` events, because React's\n      // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n      // real `beforeinput` events sadly... (2019/11/04)\n      // https://github.com/facebook/react/issues/11211\n      if (HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        node.addEventListener('beforeinput', onDOMBeforeInput);\n      }\n    }\n    ref.current = node;\n  }, [onDOMSelectionChange, scheduleOnDOMSelectionChange, editor, onDOMBeforeInput]);\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    var window = ReactEditor.getWindow(editor);\n    window.document.addEventListener('selectionchange', scheduleOnDOMSelectionChange);\n    return () => {\n      window.document.removeEventListener('selectionchange', scheduleOnDOMSelectionChange);\n    };\n  }, [scheduleOnDOMSelectionChange]);\n  var decorations = decorate([editor, []]);\n  var showPlaceholder = placeholder && editor.children.length === 1 && Array.from(Node.texts(editor)).length === 1 && Node.string(editor) === '' && !isComposing;\n  var placeHolderResizeHandler = useCallback(placeholderEl => {\n    if (placeholderEl && showPlaceholder) {\n      var _placeholderEl$getBou;\n      setPlaceholderHeight((_placeholderEl$getBou = placeholderEl.getBoundingClientRect()) === null || _placeholderEl$getBou === void 0 ? void 0 : _placeholderEl$getBou.height);\n    } else {\n      setPlaceholderHeight(undefined);\n    }\n  }, [showPlaceholder]);\n  if (showPlaceholder) {\n    var start = Editor.start(editor, []);\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      onPlaceholderResize: placeHolderResizeHandler,\n      anchor: start,\n      focus: start\n    });\n  }\n  var {\n    marks\n  } = editor;\n  state.hasMarkPlaceholder = false;\n  if (editor.selection && Range.isCollapsed(editor.selection) && marks) {\n    var {\n      anchor\n    } = editor.selection;\n    var leaf = Node.leaf(editor, anchor.path);\n    var rest = _objectWithoutProperties(leaf, _excluded2);\n    // While marks isn't a 'complete' text, we can still use loose Text.equals\n    // here which only compares marks anyway.\n    if (!Text$1.equals(leaf, marks, {\n      loose: true\n    })) {\n      state.hasMarkPlaceholder = true;\n      var unset = Object.fromEntries(Object.keys(rest).map(mark => [mark, null]));\n      decorations.push(_objectSpread$1(_objectSpread$1(_objectSpread$1({\n        [MARK_PLACEHOLDER_SYMBOL]: true\n      }, unset), marks), {}, {\n        anchor,\n        focus: anchor\n      }));\n    }\n  }\n  // Update EDITOR_TO_MARK_PLACEHOLDER_MARKS in setTimeout useEffect to ensure we don't set it\n  // before we receive the composition end event.\n  useEffect(() => {\n    setTimeout(() => {\n      var {\n        selection\n      } = editor;\n      if (selection) {\n        var {\n          anchor: _anchor\n        } = selection;\n        var _text = Node.leaf(editor, _anchor.path);\n        // While marks isn't a 'complete' text, we can still use loose Text.equals\n        // here which only compares marks anyway.\n        if (marks && !Text$1.equals(_text, marks, {\n          loose: true\n        })) {\n          EDITOR_TO_PENDING_INSERTION_MARKS.set(editor, marks);\n          return;\n        }\n      }\n      EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor);\n    });\n  });\n  return /*#__PURE__*/React.createElement(ReadOnlyContext.Provider, {\n    value: readOnly\n  }, /*#__PURE__*/React.createElement(DecorateContext.Provider, {\n    value: decorate\n  }, /*#__PURE__*/React.createElement(RestoreDOM, {\n    node: ref,\n    receivedUserInput: receivedUserInput\n  }, /*#__PURE__*/React.createElement(Component, _objectSpread$1(_objectSpread$1({\n    role: readOnly ? undefined : 'textbox',\n    \"aria-multiline\": readOnly ? undefined : true\n  }, attributes), {}, {\n    // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n    // have to use hacks to make these replacement-based features work.\n    // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n    // mismatch warning app moves to browser. Pass-through consumer props when\n    // not CAN_USE_DOM (SSR) and default to falsy value\n    spellCheck: HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM ? attributes.spellCheck : false,\n    autoCorrect: HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM ? attributes.autoCorrect : 'false',\n    autoCapitalize: HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM ? attributes.autoCapitalize : 'false',\n    \"data-slate-editor\": true,\n    \"data-slate-node\": \"value\",\n    // explicitly set this\n    contentEditable: !readOnly,\n    // in some cases, a decoration needs access to the range / selection to decorate a text node,\n    // then you will select the whole text node when you select part the of text\n    // this magic zIndex=\"-1\" will fix it\n    zindex: -1,\n    suppressContentEditableWarning: true,\n    ref: callbackRef,\n    style: _objectSpread$1(_objectSpread$1({}, disableDefaultStyles ? {} : _objectSpread$1({\n      // Allow positioning relative to the editable element.\n      position: 'relative',\n      // Preserve adjacent whitespace and new lines.\n      whiteSpace: 'pre-wrap',\n      // Allow words to break if they are too long.\n      wordWrap: 'break-word'\n    }, placeholderHeight ? {\n      minHeight: placeholderHeight\n    } : {})), userStyle),\n    onBeforeInput: useCallback(event => {\n      // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n      // fall back to React's leaky polyfill instead just for it. It\n      // only works for the `insertText` input type.\n      if (!HAS_BEFORE_INPUT_SUPPORT && !readOnly && !isEventHandled(event, attributes.onBeforeInput) && ReactEditor.hasSelectableTarget(editor, event.target)) {\n        event.preventDefault();\n        if (!ReactEditor.isComposing(editor)) {\n          var _text2 = event.data;\n          Editor.insertText(editor, _text2);\n        }\n      }\n    }, [attributes.onBeforeInput, editor, readOnly]),\n    onInput: useCallback(event => {\n      if (isEventHandled(event, attributes.onInput)) {\n        return;\n      }\n      if (androidInputManagerRef.current) {\n        androidInputManagerRef.current.handleInput();\n        return;\n      }\n      // Flush native operations, as native events will have propogated\n      // and we can correctly compare DOM text values in components\n      // to stop rendering, so that browser functions like autocorrect\n      // and spellcheck work as expected.\n      for (var op of deferredOperations.current) {\n        op();\n      }\n      deferredOperations.current = [];\n    }, [attributes.onInput]),\n    onBlur: useCallback(event => {\n      if (readOnly || state.isUpdatingSelection || !ReactEditor.hasSelectableTarget(editor, event.target) || isEventHandled(event, attributes.onBlur)) {\n        return;\n      }\n      // COMPAT: If the current `activeElement` is still the previous\n      // one, this is due to the window being blurred when the tab\n      // itself becomes unfocused, so we want to abort early to allow to\n      // editor to stay focused when the tab becomes focused again.\n      var root = ReactEditor.findDocumentOrShadowRoot(editor);\n      if (state.latestElement === root.activeElement) {\n        return;\n      }\n      var {\n        relatedTarget\n      } = event;\n      var el = ReactEditor.toDOMNode(editor, editor);\n      // COMPAT: The event should be ignored if the focus is returning\n      // to the editor from an embedded editable element (eg. an <input>\n      // element inside a void node).\n      if (relatedTarget === el) {\n        return;\n      }\n      // COMPAT: The event should be ignored if the focus is moving from\n      // the editor to inside a void node's spacer element.\n      if (isDOMElement(relatedTarget) && relatedTarget.hasAttribute('data-slate-spacer')) {\n        return;\n      }\n      // COMPAT: The event should be ignored if the focus is moving to a\n      // non- editable section of an element that isn't a void node (eg.\n      // a list item of the check list example).\n      if (relatedTarget != null && isDOMNode(relatedTarget) && ReactEditor.hasDOMNode(editor, relatedTarget)) {\n        var node = ReactEditor.toSlateNode(editor, relatedTarget);\n        if (Element$1.isElement(node) && !editor.isVoid(node)) {\n          return;\n        }\n      }\n      // COMPAT: Safari doesn't always remove the selection even if the content-\n      // editable element no longer has focus. Refer to:\n      // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n      if (IS_WEBKIT) {\n        var domSelection = root.getSelection();\n        domSelection === null || domSelection === void 0 || domSelection.removeAllRanges();\n      }\n      IS_FOCUSED.delete(editor);\n    }, [readOnly, state.isUpdatingSelection, state.latestElement, editor, attributes.onBlur]),\n    onClick: useCallback(event => {\n      if (ReactEditor.hasTarget(editor, event.target) && !isEventHandled(event, attributes.onClick) && isDOMNode(event.target)) {\n        var node = ReactEditor.toSlateNode(editor, event.target);\n        var path = ReactEditor.findPath(editor, node);\n        // At this time, the Slate document may be arbitrarily different,\n        // because onClick handlers can change the document before we get here.\n        // Therefore we must check that this path actually exists,\n        // and that it still refers to the same node.\n        if (!Editor.hasPath(editor, path) || Node.get(editor, path) !== node) {\n          return;\n        }\n        if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n          var blockPath = path;\n          if (!(Element$1.isElement(node) && Editor.isBlock(editor, node))) {\n            var _block$;\n            var block = Editor.above(editor, {\n              match: n => Element$1.isElement(n) && Editor.isBlock(editor, n),\n              at: path\n            });\n            blockPath = (_block$ = block === null || block === void 0 ? void 0 : block[1]) !== null && _block$ !== void 0 ? _block$ : path.slice(0, 1);\n          }\n          var range = Editor.range(editor, blockPath);\n          Transforms.select(editor, range);\n          return;\n        }\n        if (readOnly) {\n          return;\n        }\n        var _start = Editor.start(editor, path);\n        var end = Editor.end(editor, path);\n        var startVoid = Editor.void(editor, {\n          at: _start\n        });\n        var endVoid = Editor.void(editor, {\n          at: end\n        });\n        if (startVoid && endVoid && Path.equals(startVoid[1], endVoid[1])) {\n          var _range = Editor.range(editor, _start);\n          Transforms.select(editor, _range);\n        }\n      }\n    }, [editor, attributes.onClick, readOnly]),\n    onCompositionEnd: useCallback(event => {\n      if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n        var _androidInputManagerR3;\n        if (ReactEditor.isComposing(editor)) {\n          Promise.resolve().then(() => {\n            setIsComposing(false);\n            IS_COMPOSING.set(editor, false);\n          });\n        }\n        (_androidInputManagerR3 = androidInputManagerRef.current) === null || _androidInputManagerR3 === void 0 || _androidInputManagerR3.handleCompositionEnd(event);\n        if (isEventHandled(event, attributes.onCompositionEnd) || IS_ANDROID) {\n          return;\n        }\n        // COMPAT: In Chrome, `beforeinput` events for compositions\n        // aren't correct and never fire the \"insertFromComposition\"\n        // type that we need. So instead, insert whenever a composition\n        // ends since it will already have been committed to the DOM.\n        if (!IS_WEBKIT && !IS_FIREFOX_LEGACY && !IS_IOS && !IS_WECHATBROWSER && !IS_UC_MOBILE && event.data) {\n          var placeholderMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor);\n          EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor);\n          // Ensure we insert text with the marks the user was actually seeing\n          if (placeholderMarks !== undefined) {\n            EDITOR_TO_USER_MARKS.set(editor, editor.marks);\n            editor.marks = placeholderMarks;\n          }\n          Editor.insertText(editor, event.data);\n          var userMarks = EDITOR_TO_USER_MARKS.get(editor);\n          EDITOR_TO_USER_MARKS.delete(editor);\n          if (userMarks !== undefined) {\n            editor.marks = userMarks;\n          }\n        }\n      }\n    }, [attributes.onCompositionEnd, editor]),\n    onCompositionUpdate: useCallback(event => {\n      if (ReactEditor.hasSelectableTarget(editor, event.target) && !isEventHandled(event, attributes.onCompositionUpdate)) {\n        if (!ReactEditor.isComposing(editor)) {\n          setIsComposing(true);\n          IS_COMPOSING.set(editor, true);\n        }\n      }\n    }, [attributes.onCompositionUpdate, editor]),\n    onCompositionStart: useCallback(event => {\n      if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n        var _androidInputManagerR4;\n        (_androidInputManagerR4 = androidInputManagerRef.current) === null || _androidInputManagerR4 === void 0 || _androidInputManagerR4.handleCompositionStart(event);\n        if (isEventHandled(event, attributes.onCompositionStart) || IS_ANDROID) {\n          return;\n        }\n        setIsComposing(true);\n        var {\n          selection\n        } = editor;\n        if (selection && Range.isExpanded(selection)) {\n          Editor.deleteFragment(editor);\n          return;\n        }\n      }\n    }, [attributes.onCompositionStart, editor]),\n    onCopy: useCallback(event => {\n      if (ReactEditor.hasSelectableTarget(editor, event.target) && !isEventHandled(event, attributes.onCopy) && !isDOMEventTargetInput(event)) {\n        event.preventDefault();\n        ReactEditor.setFragmentData(editor, event.clipboardData, 'copy');\n      }\n    }, [attributes.onCopy, editor]),\n    onCut: useCallback(event => {\n      if (!readOnly && ReactEditor.hasSelectableTarget(editor, event.target) && !isEventHandled(event, attributes.onCut) && !isDOMEventTargetInput(event)) {\n        event.preventDefault();\n        ReactEditor.setFragmentData(editor, event.clipboardData, 'cut');\n        var {\n          selection\n        } = editor;\n        if (selection) {\n          if (Range.isExpanded(selection)) {\n            Editor.deleteFragment(editor);\n          } else {\n            var node = Node.parent(editor, selection.anchor.path);\n            if (Editor.isVoid(editor, node)) {\n              Transforms.delete(editor);\n            }\n          }\n        }\n      }\n    }, [readOnly, editor, attributes.onCut]),\n    onDragOver: useCallback(event => {\n      if (ReactEditor.hasTarget(editor, event.target) && !isEventHandled(event, attributes.onDragOver)) {\n        // Only when the target is void, call `preventDefault` to signal\n        // that drops are allowed. Editable content is droppable by\n        // default, and calling `preventDefault` hides the cursor.\n        var node = ReactEditor.toSlateNode(editor, event.target);\n        if (Element$1.isElement(node) && Editor.isVoid(editor, node)) {\n          event.preventDefault();\n        }\n      }\n    }, [attributes.onDragOver, editor]),\n    onDragStart: useCallback(event => {\n      if (!readOnly && ReactEditor.hasTarget(editor, event.target) && !isEventHandled(event, attributes.onDragStart)) {\n        var node = ReactEditor.toSlateNode(editor, event.target);\n        var path = ReactEditor.findPath(editor, node);\n        var voidMatch = Element$1.isElement(node) && Editor.isVoid(editor, node) || Editor.void(editor, {\n          at: path,\n          voids: true\n        });\n        // If starting a drag on a void node, make sure it is selected\n        // so that it shows up in the selection's fragment.\n        if (voidMatch) {\n          var range = Editor.range(editor, path);\n          Transforms.select(editor, range);\n        }\n        state.isDraggingInternally = true;\n        ReactEditor.setFragmentData(editor, event.dataTransfer, 'drag');\n      }\n    }, [readOnly, editor, attributes.onDragStart, state]),\n    onDrop: useCallback(event => {\n      if (!readOnly && ReactEditor.hasTarget(editor, event.target) && !isEventHandled(event, attributes.onDrop)) {\n        event.preventDefault();\n        // Keep a reference to the dragged range before updating selection\n        var draggedRange = editor.selection;\n        // Find the range where the drop happened\n        var range = ReactEditor.findEventRange(editor, event);\n        var data = event.dataTransfer;\n        Transforms.select(editor, range);\n        if (state.isDraggingInternally) {\n          if (draggedRange && !Range.equals(draggedRange, range) && !Editor.void(editor, {\n            at: range,\n            voids: true\n          })) {\n            Transforms.delete(editor, {\n              at: draggedRange\n            });\n          }\n        }\n        ReactEditor.insertData(editor, data);\n        // When dragging from another source into the editor, it's possible\n        // that the current editor does not have focus.\n        if (!ReactEditor.isFocused(editor)) {\n          ReactEditor.focus(editor);\n        }\n      }\n      state.isDraggingInternally = false;\n    }, [readOnly, editor, attributes.onDrop, state]),\n    onDragEnd: useCallback(event => {\n      if (!readOnly && state.isDraggingInternally && attributes.onDragEnd && ReactEditor.hasTarget(editor, event.target)) {\n        attributes.onDragEnd(event);\n      }\n      // When dropping on a different droppable element than the current editor,\n      // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n      // Note: `onDragEnd` is only called when `onDrop` is not called\n      state.isDraggingInternally = false;\n    }, [readOnly, state, attributes, editor]),\n    onFocus: useCallback(event => {\n      if (!readOnly && !state.isUpdatingSelection && ReactEditor.hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onFocus)) {\n        var el = ReactEditor.toDOMNode(editor, editor);\n        var root = ReactEditor.findDocumentOrShadowRoot(editor);\n        state.latestElement = root.activeElement;\n        // COMPAT: If the editor has nested editable elements, the focus\n        // can go to them. In Firefox, this must be prevented because it\n        // results in issues with keyboard navigation. (2017/03/30)\n        if (IS_FIREFOX && event.target !== el) {\n          el.focus();\n          return;\n        }\n        IS_FOCUSED.set(editor, true);\n      }\n    }, [readOnly, state, editor, attributes.onFocus]),\n    onKeyDown: useCallback(event => {\n      if (!readOnly && ReactEditor.hasEditableTarget(editor, event.target)) {\n        var _androidInputManagerR5;\n        (_androidInputManagerR5 = androidInputManagerRef.current) === null || _androidInputManagerR5 === void 0 || _androidInputManagerR5.handleKeyDown(event);\n        var {\n          nativeEvent\n        } = event;\n        // COMPAT: The composition end event isn't fired reliably in all browsers,\n        // so we sometimes might end up stuck in a composition state even though we\n        // aren't composing any more.\n        if (ReactEditor.isComposing(editor) && nativeEvent.isComposing === false) {\n          IS_COMPOSING.set(editor, false);\n          setIsComposing(false);\n        }\n        if (isEventHandled(event, attributes.onKeyDown) || ReactEditor.isComposing(editor)) {\n          return;\n        }\n        var {\n          selection\n        } = editor;\n        var element = editor.children[selection !== null ? selection.focus.path[0] : 0];\n        var isRTL = getDirection(Node.string(element)) === 'rtl';\n        // COMPAT: Since we prevent the default behavior on\n        // `beforeinput` events, the browser doesn't think there's ever\n        // any history stack to undo or redo, so we have to manage these\n        // hotkeys ourselves. (2019/11/06)\n        if (Hotkeys.isRedo(nativeEvent)) {\n          event.preventDefault();\n          var maybeHistoryEditor = editor;\n          if (typeof maybeHistoryEditor.redo === 'function') {\n            maybeHistoryEditor.redo();\n          }\n          return;\n        }\n        if (Hotkeys.isUndo(nativeEvent)) {\n          event.preventDefault();\n          var _maybeHistoryEditor = editor;\n          if (typeof _maybeHistoryEditor.undo === 'function') {\n            _maybeHistoryEditor.undo();\n          }\n          return;\n        }\n        // COMPAT: Certain browsers don't handle the selection updates\n        // properly. In Chrome, the selection isn't properly extended.\n        // And in Firefox, the selection isn't properly collapsed.\n        // (2017/10/17)\n        if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line',\n            reverse: true\n          });\n          return;\n        }\n        if (Hotkeys.isMoveLineForward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line'\n          });\n          return;\n        }\n        if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line',\n            edge: 'focus',\n            reverse: true\n          });\n          return;\n        }\n        if (Hotkeys.isExtendLineForward(nativeEvent)) {\n          event.preventDefault();\n          Transforms.move(editor, {\n            unit: 'line',\n            edge: 'focus'\n          });\n          return;\n        }\n        // COMPAT: If a void node is selected, or a zero-width text node\n        // adjacent to an inline is selected, we need to handle these\n        // hotkeys manually because browsers won't be able to skip over\n        // the void node with the zero-width space not being an empty\n        // string.\n        if (Hotkeys.isMoveBackward(nativeEvent)) {\n          event.preventDefault();\n          if (selection && Range.isCollapsed(selection)) {\n            Transforms.move(editor, {\n              reverse: !isRTL\n            });\n          } else {\n            Transforms.collapse(editor, {\n              edge: isRTL ? 'end' : 'start'\n            });\n          }\n          return;\n        }\n        if (Hotkeys.isMoveForward(nativeEvent)) {\n          event.preventDefault();\n          if (selection && Range.isCollapsed(selection)) {\n            Transforms.move(editor, {\n              reverse: isRTL\n            });\n          } else {\n            Transforms.collapse(editor, {\n              edge: isRTL ? 'start' : 'end'\n            });\n          }\n          return;\n        }\n        if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n          event.preventDefault();\n          if (selection && Range.isExpanded(selection)) {\n            Transforms.collapse(editor, {\n              edge: 'focus'\n            });\n          }\n          Transforms.move(editor, {\n            unit: 'word',\n            reverse: !isRTL\n          });\n          return;\n        }\n        if (Hotkeys.isMoveWordForward(nativeEvent)) {\n          event.preventDefault();\n          if (selection && Range.isExpanded(selection)) {\n            Transforms.collapse(editor, {\n              edge: 'focus'\n            });\n          }\n          Transforms.move(editor, {\n            unit: 'word',\n            reverse: isRTL\n          });\n          return;\n        }\n        // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n        // fall back to guessing at the input intention for hotkeys.\n        // COMPAT: In iOS, some of these hotkeys are handled in the\n        if (!HAS_BEFORE_INPUT_SUPPORT) {\n          // We don't have a core behavior for these, but they change the\n          // DOM if we don't prevent them, so we have to.\n          if (Hotkeys.isBold(nativeEvent) || Hotkeys.isItalic(nativeEvent) || Hotkeys.isTransposeCharacter(nativeEvent)) {\n            event.preventDefault();\n            return;\n          }\n          if (Hotkeys.isSoftBreak(nativeEvent)) {\n            event.preventDefault();\n            Editor.insertSoftBreak(editor);\n            return;\n          }\n          if (Hotkeys.isSplitBlock(nativeEvent)) {\n            event.preventDefault();\n            Editor.insertBreak(editor);\n            return;\n          }\n          if (Hotkeys.isDeleteBackward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'backward'\n              });\n            } else {\n              Editor.deleteBackward(editor);\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteForward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'forward'\n              });\n            } else {\n              Editor.deleteForward(editor);\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'backward'\n              });\n            } else {\n              Editor.deleteBackward(editor, {\n                unit: 'line'\n              });\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'forward'\n              });\n            } else {\n              Editor.deleteForward(editor, {\n                unit: 'line'\n              });\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'backward'\n              });\n            } else {\n              Editor.deleteBackward(editor, {\n                unit: 'word'\n              });\n            }\n            return;\n          }\n          if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n            event.preventDefault();\n            if (selection && Range.isExpanded(selection)) {\n              Editor.deleteFragment(editor, {\n                direction: 'forward'\n              });\n            } else {\n              Editor.deleteForward(editor, {\n                unit: 'word'\n              });\n            }\n            return;\n          }\n        } else {\n          if (IS_CHROME || IS_WEBKIT) {\n            // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n            // an event when deleting backwards in a selected void inline node\n            if (selection && (Hotkeys.isDeleteBackward(nativeEvent) || Hotkeys.isDeleteForward(nativeEvent)) && Range.isCollapsed(selection)) {\n              var currentNode = Node.parent(editor, selection.anchor.path);\n              if (Element$1.isElement(currentNode) && Editor.isVoid(editor, currentNode) && (Editor.isInline(editor, currentNode) || Editor.isBlock(editor, currentNode))) {\n                event.preventDefault();\n                Editor.deleteBackward(editor, {\n                  unit: 'block'\n                });\n                return;\n              }\n            }\n          }\n        }\n      }\n    }, [readOnly, editor, attributes.onKeyDown]),\n    onPaste: useCallback(event => {\n      if (!readOnly && ReactEditor.hasEditableTarget(editor, event.target) && !isEventHandled(event, attributes.onPaste)) {\n        // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n        // fall back to React's `onPaste` here instead.\n        // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n        // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n        // COMPAT: Safari InputEvents generated by pasting won't include\n        // application/x-slate-fragment items, so use the\n        // ClipboardEvent here. (2023/03/15)\n        if (!HAS_BEFORE_INPUT_SUPPORT || isPlainTextOnlyPaste(event.nativeEvent) || IS_WEBKIT) {\n          event.preventDefault();\n          ReactEditor.insertData(editor, event.clipboardData);\n        }\n      }\n    }, [readOnly, editor, attributes.onPaste])\n  }), /*#__PURE__*/React.createElement(Children, {\n    decorations: decorations,\n    node: editor,\n    renderElement: renderElement,\n    renderPlaceholder: renderPlaceholder,\n    renderLeaf: renderLeaf,\n    selection: editor.selection\n  })))));\n};\n/**\n * The default placeholder element\n */\nvar DefaultPlaceholder = _ref => {\n  var {\n    attributes,\n    children\n  } = _ref;\n  return (/*#__PURE__*/\n    // COMPAT: Artificially add a line-break to the end on the placeholder element\n    // to prevent Android IMEs to pick up its content in autocorrect and to auto-capitalize the first letter\n    React.createElement(\"span\", _objectSpread$1({}, attributes), children, IS_ANDROID && /*#__PURE__*/React.createElement(\"br\", null))\n  );\n};\n/**\n * A default memoized decorate function.\n */\nvar defaultDecorate = () => [];\n/**\n * A default implement to scroll dom range into view.\n */\nvar defaultScrollSelectionIntoView = (editor, domRange) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (domRange.getBoundingClientRect && (!editor.selection || editor.selection && Range.isCollapsed(editor.selection))) {\n    var leafEl = domRange.startContainer.parentElement;\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange);\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed'\n    });\n    // @ts-expect-error an unorthodox delete D:\n    delete leafEl.getBoundingClientRect;\n  }\n};\n/**\n * Check if an event is overrided by a handler.\n */\nvar isEventHandled = (event, handler) => {\n  if (!handler) {\n    return false;\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  var shouldTreatEventAsHandled = handler(event);\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled;\n  }\n  return event.isDefaultPrevented() || event.isPropagationStopped();\n};\n/**\n * Check if the event's target is an input element\n */\nvar isDOMEventTargetInput = event => {\n  return isDOMNode(event.target) && (event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement);\n};\n/**\n * Check if a DOM event is overrided by a handler.\n */\nvar isDOMEventHandled = (event, handler) => {\n  if (!handler) {\n    return false;\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  var shouldTreatEventAsHandled = handler(event);\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled;\n  }\n  return event.defaultPrevented;\n};\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\nvar FocusedContext = /*#__PURE__*/createContext(false);\n/**\n * Get the current `focused` state of the editor.\n */\nvar useFocused = () => {\n  return useContext(FocusedContext);\n};\nfunction isError(error) {\n  return error instanceof Error;\n}\n/**\n * A React context for sharing the editor selector context in a way to control rerenders\n */\nvar SlateSelectorContext = /*#__PURE__*/createContext({});\nvar refEquality = (a, b) => a === b;\n/**\n * use redux style selectors to prevent rerendering on every keystroke.\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\n *\n * Example:\n * ```\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\n * ```\n */\nfunction useSlateSelector(selector) {\n  var equalityFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : refEquality;\n  var [, forceRender] = useReducer(s => s + 1, 0);\n  var context = useContext(SlateSelectorContext);\n  if (!context) {\n    throw new Error(\"The `useSlateSelector` hook must be used inside the <Slate> component's context.\");\n  }\n  var {\n    getSlate,\n    addEventListener\n  } = context;\n  var latestSubscriptionCallbackError = useRef();\n  var latestSelector = useRef(() => null);\n  var latestSelectedState = useRef(null);\n  var selectedState;\n  try {\n    if (selector !== latestSelector.current || latestSubscriptionCallbackError.current) {\n      selectedState = selector(getSlate());\n    } else {\n      selectedState = latestSelectedState.current;\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += \"\\nThe error may be correlated with this previous error:\\n\".concat(latestSubscriptionCallbackError.current.stack, \"\\n\\n\");\n    }\n    throw err;\n  }\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector;\n    latestSelectedState.current = selectedState;\n    latestSubscriptionCallbackError.current = undefined;\n  });\n  useIsomorphicLayoutEffect(() => {\n    function checkForUpdates() {\n      try {\n        var newSelectedState = latestSelector.current(getSlate());\n        if (equalityFn(newSelectedState, latestSelectedState.current)) {\n          return;\n        }\n        latestSelectedState.current = newSelectedState;\n      } catch (err) {\n        // we ignore all errors here, since when the component\n        // is re-rendered, the selectors are called again, and\n        // will throw again, if neither props nor store state\n        // changed\n        if (err instanceof Error) {\n          latestSubscriptionCallbackError.current = err;\n        } else {\n          latestSubscriptionCallbackError.current = new Error(String(err));\n        }\n      }\n      forceRender();\n    }\n    var unsubscribe = addEventListener(checkForUpdates);\n    checkForUpdates();\n    return () => unsubscribe();\n  },\n  // don't rerender on equalityFn change since we want to be able to define it inline\n  [addEventListener, getSlate]);\n  return selectedState;\n}\n/**\n * Create selector context with editor updating on every editor change\n */\nfunction useSelectorContext(editor) {\n  var eventListeners = useRef([]).current;\n  var slateRef = useRef({\n    editor\n  }).current;\n  var onChange = useCallback(editor => {\n    slateRef.editor = editor;\n    eventListeners.forEach(listener => listener(editor));\n  }, [eventListeners, slateRef]);\n  var selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: callback => {\n        eventListeners.push(callback);\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1);\n        };\n      }\n    };\n  }, [eventListeners, slateRef]);\n  return {\n    selectorContext,\n    onChange\n  };\n}\nvar _excluded = [\"editor\", \"children\", \"onChange\", \"onSelectionChange\", \"onValueChange\", \"initialValue\"];\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\nvar Slate = props => {\n  var {\n      editor,\n      children,\n      onChange,\n      onSelectionChange,\n      onValueChange,\n      initialValue\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  var [context, setContext] = React.useState(() => {\n    if (!Node.isNodeList(initialValue)) {\n      throw new Error(\"[Slate] initialValue is invalid! Expected a list of elements but got: \".concat(Scrubber.stringify(initialValue)));\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\"[Slate] editor is invalid! You passed: \".concat(Scrubber.stringify(editor)));\n    }\n    editor.children = initialValue;\n    Object.assign(editor, rest);\n    return {\n      v: 0,\n      editor\n    };\n  });\n  var {\n    selectorContext,\n    onChange: handleSelectorChange\n  } = useSelectorContext(editor);\n  var onContextChange = useCallback(options => {\n    var _options$operation;\n    if (onChange) {\n      onChange(editor.children);\n    }\n    switch (options === null || options === void 0 || (_options$operation = options.operation) === null || _options$operation === void 0 ? void 0 : _options$operation.type) {\n      case 'set_selection':\n        onSelectionChange === null || onSelectionChange === void 0 || onSelectionChange(editor.selection);\n        break;\n      default:\n        onValueChange === null || onValueChange === void 0 || onValueChange(editor.children);\n    }\n    setContext(prevContext => ({\n      v: prevContext.v + 1,\n      editor\n    }));\n    handleSelectorChange(editor);\n  }, [editor, handleSelectorChange, onChange, onSelectionChange, onValueChange]);\n  useEffect(() => {\n    EDITOR_TO_ON_CHANGE.set(editor, onContextChange);\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {});\n    };\n  }, [editor, onContextChange]);\n  var [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor));\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor));\n  }, [editor]);\n  useIsomorphicLayoutEffect(() => {\n    var fn = () => setIsFocused(ReactEditor.isFocused(editor));\n    if (REACT_MAJOR_VERSION >= 17) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn);\n      document.addEventListener('focusout', fn);\n      return () => {\n        document.removeEventListener('focusin', fn);\n        document.removeEventListener('focusout', fn);\n      };\n    } else {\n      document.addEventListener('focus', fn, true);\n      document.addEventListener('blur', fn, true);\n      return () => {\n        document.removeEventListener('focus', fn, true);\n        document.removeEventListener('blur', fn, true);\n      };\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(SlateSelectorContext.Provider, {\n    value: selectorContext\n  }, /*#__PURE__*/React.createElement(SlateContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(EditorContext.Provider, {\n    value: context.editor\n  }, /*#__PURE__*/React.createElement(FocusedContext.Provider, {\n    value: isFocused\n  }, children))));\n};\n\n/**\n * Get the current editor object from the React context.\n * @deprecated Use useSlateStatic instead.\n */\nvar useEditor = () => {\n  var editor = useContext(EditorContext);\n  if (!editor) {\n    throw new Error(\"The `useEditor` hook must be used inside the <Slate> component's context.\");\n  }\n  return editor;\n};\n\n/**\n * Get the current slate selection.\n * Only triggers a rerender when the selection actually changes\n */\nvar useSlateSelection = () => {\n  return useSlateSelector(editor => editor.selection, isSelectionEqual);\n};\nvar isSelectionEqual = (a, b) => {\n  if (!a && !b) return true;\n  if (!a || !b) return false;\n  return Range.equals(a, b);\n};\n\n/**\n * Utilities for single-line deletion\n */\nvar doRectsIntersect = (rect, compareRect) => {\n  var middle = (compareRect.top + compareRect.bottom) / 2;\n  return rect.top <= middle && rect.bottom >= middle;\n};\nvar areRangesSameLine = (editor, range1, range2) => {\n  var rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect();\n  var rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect();\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1);\n};\n/**\n * A helper utility that returns the end portion of a `Range`\n * which is located on a single line.\n *\n * @param {Editor} editor The editor object to compare against\n * @param {Range} parentRange The parent range to compare against\n * @returns {Range} A valid portion of the parentRange which is one a single line\n */\nvar findCurrentLineRange = (editor, parentRange) => {\n  var parentRangeBoundary = Editor.range(editor, Range.end(parentRange));\n  var positions = Array.from(Editor.positions(editor, {\n    at: parentRange\n  }));\n  var left = 0;\n  var right = positions.length;\n  var middle = Math.floor(right / 2);\n  if (areRangesSameLine(editor, Editor.range(editor, positions[left]), parentRangeBoundary)) {\n    return Editor.range(editor, positions[left], parentRangeBoundary);\n  }\n  if (positions.length < 2) {\n    return Editor.range(editor, positions[positions.length - 1], parentRangeBoundary);\n  }\n  while (middle !== positions.length && middle !== left) {\n    if (areRangesSameLine(editor, Editor.range(editor, positions[middle]), parentRangeBoundary)) {\n      right = middle;\n    } else {\n      left = middle;\n    }\n    middle = Math.floor((left + right) / 2);\n  }\n  return Editor.range(editor, positions[right], parentRangeBoundary);\n};\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\nvar withReact = function withReact(editor) {\n  var clipboardFormatKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x-slate-fragment';\n  var e = editor;\n  var {\n    apply,\n    onChange,\n    deleteBackward,\n    addMark,\n    removeMark\n  } = e;\n  // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap());\n  e.addMark = (key, value) => {\n    var _EDITOR_TO_SCHEDULE_F, _EDITOR_TO_PENDING_DI;\n    (_EDITOR_TO_SCHEDULE_F = EDITOR_TO_SCHEDULE_FLUSH.get(e)) === null || _EDITOR_TO_SCHEDULE_F === void 0 || _EDITOR_TO_SCHEDULE_F();\n    if (!EDITOR_TO_PENDING_INSERTION_MARKS.get(e) && (_EDITOR_TO_PENDING_DI = EDITOR_TO_PENDING_DIFFS.get(e)) !== null && _EDITOR_TO_PENDING_DI !== void 0 && _EDITOR_TO_PENDING_DI.length) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null);\n    }\n    EDITOR_TO_USER_MARKS.delete(e);\n    addMark(key, value);\n  };\n  e.removeMark = key => {\n    var _EDITOR_TO_PENDING_DI2;\n    if (!EDITOR_TO_PENDING_INSERTION_MARKS.get(e) && (_EDITOR_TO_PENDING_DI2 = EDITOR_TO_PENDING_DIFFS.get(e)) !== null && _EDITOR_TO_PENDING_DI2 !== void 0 && _EDITOR_TO_PENDING_DI2.length) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null);\n    }\n    EDITOR_TO_USER_MARKS.delete(e);\n    removeMark(key);\n  };\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit);\n    }\n    if (e.selection && Range.isCollapsed(e.selection)) {\n      var parentBlockEntry = Editor.above(e, {\n        match: n => Element$1.isElement(n) && Editor.isBlock(e, n),\n        at: e.selection\n      });\n      if (parentBlockEntry) {\n        var [, parentBlockPath] = parentBlockEntry;\n        var parentElementRange = Editor.range(e, parentBlockPath, e.selection.anchor);\n        var currentLineRange = findCurrentLineRange(e, parentElementRange);\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(e, {\n            at: currentLineRange\n          });\n        }\n      }\n    }\n  };\n  // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n  e.apply = op => {\n    var matches = [];\n    var pathRefMatches = [];\n    var pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(e);\n    if (pendingDiffs !== null && pendingDiffs !== void 0 && pendingDiffs.length) {\n      var transformed = pendingDiffs.map(textDiff => transformTextDiff(textDiff, op)).filter(Boolean);\n      EDITOR_TO_PENDING_DIFFS.set(e, transformed);\n    }\n    var pendingSelection = EDITOR_TO_PENDING_SELECTION.get(e);\n    if (pendingSelection) {\n      EDITOR_TO_PENDING_SELECTION.set(e, transformPendingRange(e, pendingSelection, op));\n    }\n    var pendingAction = EDITOR_TO_PENDING_ACTION.get(e);\n    if (pendingAction !== null && pendingAction !== void 0 && pendingAction.at) {\n      var at = Point.isPoint(pendingAction === null || pendingAction === void 0 ? void 0 : pendingAction.at) ? transformPendingPoint(e, pendingAction.at, op) : transformPendingRange(e, pendingAction.at, op);\n      EDITOR_TO_PENDING_ACTION.set(e, at ? _objectSpread(_objectSpread({}, pendingAction), {}, {\n        at\n      }) : null);\n    }\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node':\n        {\n          matches.push(...getMatches(e, op.path));\n          break;\n        }\n      case 'set_selection':\n        {\n          var _EDITOR_TO_USER_SELEC;\n          // Selection was manually set, don't restore the user selection after the change.\n          (_EDITOR_TO_USER_SELEC = EDITOR_TO_USER_SELECTION.get(e)) === null || _EDITOR_TO_USER_SELEC === void 0 || _EDITOR_TO_USER_SELEC.unref();\n          EDITOR_TO_USER_SELECTION.delete(e);\n          break;\n        }\n      case 'insert_node':\n      case 'remove_node':\n        {\n          matches.push(...getMatches(e, Path.parent(op.path)));\n          break;\n        }\n      case 'merge_node':\n        {\n          var prevPath = Path.previous(op.path);\n          matches.push(...getMatches(e, prevPath));\n          break;\n        }\n      case 'move_node':\n        {\n          var commonPath = Path.common(Path.parent(op.path), Path.parent(op.newPath));\n          matches.push(...getMatches(e, commonPath));\n          var changedPath;\n          if (Path.isBefore(op.path, op.newPath)) {\n            matches.push(...getMatches(e, Path.parent(op.path)));\n            changedPath = op.newPath;\n          } else {\n            matches.push(...getMatches(e, Path.parent(op.newPath)));\n            changedPath = op.path;\n          }\n          var changedNode = Node.get(editor, Path.parent(changedPath));\n          var changedNodeKey = ReactEditor.findKey(e, changedNode);\n          var changedPathRef = Editor.pathRef(e, Path.parent(changedPath));\n          pathRefMatches.push([changedPathRef, changedNodeKey]);\n          break;\n        }\n    }\n    apply(op);\n    for (var [path, key] of matches) {\n      var [node] = Editor.node(e, path);\n      NODE_TO_KEY.set(node, key);\n    }\n    for (var [pathRef, _key] of pathRefMatches) {\n      if (pathRef.current) {\n        var [_node] = Editor.node(e, pathRef.current);\n        NODE_TO_KEY.set(_node, _key);\n      }\n    }\n  };\n  e.setFragmentData = data => {\n    var {\n      selection\n    } = e;\n    if (!selection) {\n      return;\n    }\n    var [start, end] = Range.edges(selection);\n    var startVoid = Editor.void(e, {\n      at: start.path\n    });\n    var endVoid = Editor.void(e, {\n      at: end.path\n    });\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return;\n    }\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    var domRange = ReactEditor.toDOMRange(e, selection);\n    var contents = domRange.cloneContents();\n    var attach = contents.childNodes[0];\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node;\n      }\n    });\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      var [voidNode] = endVoid;\n      var r = domRange.cloneRange();\n      var domNode = ReactEditor.toDOMNode(e, voidNode);\n      r.setEndAfter(domNode);\n      contents = r.cloneContents();\n    }\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]');\n    }\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(zw => {\n      var isNewline = zw.getAttribute('data-slate-zero-width') === 'n';\n      zw.textContent = isNewline ? '\\n' : '';\n    });\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      var span = attach.ownerDocument.createElement('span');\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre';\n      span.appendChild(attach);\n      contents.appendChild(span);\n      attach = span;\n    }\n    var fragment = e.getFragment();\n    var string = JSON.stringify(fragment);\n    var encoded = window.btoa(encodeURIComponent(string));\n    attach.setAttribute('data-slate-fragment', encoded);\n    data.setData(\"application/\".concat(clipboardFormatKey), encoded);\n    // Add the content to a <div> so that we can get its inner HTML.\n    var div = contents.ownerDocument.createElement('div');\n    div.appendChild(contents);\n    div.setAttribute('hidden', 'true');\n    contents.ownerDocument.body.appendChild(div);\n    data.setData('text/html', div.innerHTML);\n    data.setData('text/plain', getPlainText(div));\n    contents.ownerDocument.body.removeChild(div);\n    return data;\n  };\n  e.insertData = data => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data);\n    }\n  };\n  e.insertFragmentData = data => {\n    /**\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\n     */\n    var fragment = data.getData(\"application/\".concat(clipboardFormatKey)) || getSlateFragmentAttribute(data);\n    if (fragment) {\n      var decoded = decodeURIComponent(window.atob(fragment));\n      var parsed = JSON.parse(decoded);\n      e.insertFragment(parsed);\n      return true;\n    }\n    return false;\n  };\n  e.insertTextData = data => {\n    var text = data.getData('text/plain');\n    if (text) {\n      var lines = text.split(/\\r\\n|\\r|\\n/);\n      var split = false;\n      for (var line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, {\n            always: true\n          });\n        }\n        e.insertText(line);\n        split = true;\n      }\n      return true;\n    }\n    return false;\n  };\n  e.onChange = options => {\n    // COMPAT: React < 18 doesn't batch `setState` hook calls, which means\n    // that the children and selection can get out of sync for one render\n    // pass. So we have to use this unstable API to ensure it batches them.\n    // (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    var maybeBatchUpdates = REACT_MAJOR_VERSION < 18 ? ReactDOM.unstable_batchedUpdates : callback => callback();\n    maybeBatchUpdates(() => {\n      var onContextChange = EDITOR_TO_ON_CHANGE.get(e);\n      if (onContextChange) {\n        onContextChange(options);\n      }\n      onChange(options);\n    });\n  };\n  return e;\n};\nvar getMatches = (e, path) => {\n  var matches = [];\n  for (var [n, p] of Editor.levels(e, {\n    at: path\n  })) {\n    var key = ReactEditor.findKey(e, n);\n    matches.push([p, key]);\n  }\n  return matches;\n};\nexport { DefaultElement, DefaultLeaf, DefaultPlaceholder, Editable, ReactEditor, Slate, useEditor, useFocused, useReadOnly, useSelected, useSlate, useSlateSelection, useSlateSelector, useSlateStatic, useSlateWithV, withReact };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_objectWithoutProperties","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_typeof","o","Symbol","iterator","constructor","_toPrimitive","input","hint","prim","toPrimitive","undefined","res","TypeError","String","Number","_toPropertyKey","arg","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","EditorContext","createContext","useSlateStatic","editor","useContext","Error","REACT_MAJOR_VERSION","parseInt","React","version","split","IS_IOS","navigator","window","test","userAgent","MSStream","IS_APPLE","IS_ANDROID","IS_FIREFOX","IS_WEBKIT","IS_EDGE_LEGACY","IS_CHROME","IS_CHROME_LEGACY","IS_ANDROID_CHROME_LEGACY","IS_FIREFOX_LEGACY","IS_UC_MOBILE","IS_WECHATBROWSER","CAN_USE_DOM","document","createElement","HAS_BEFORE_INPUT_SUPPORT","globalThis","InputEvent","getTargetRanges","NODE_TO_INDEX","WeakMap","NODE_TO_PARENT","EDITOR_TO_WINDOW","EDITOR_TO_ELEMENT","EDITOR_TO_PLACEHOLDER_ELEMENT","ELEMENT_TO_NODE","NODE_TO_ELEMENT","NODE_TO_KEY","EDITOR_TO_KEY_TO_ELEMENT","IS_READ_ONLY","IS_FOCUSED","IS_COMPOSING","EDITOR_TO_USER_SELECTION","EDITOR_TO_ON_CHANGE","EDITOR_TO_SCHEDULE_FLUSH","EDITOR_TO_PENDING_INSERTION_MARKS","EDITOR_TO_USER_MARKS","EDITOR_TO_PENDING_DIFFS","EDITOR_TO_PENDING_ACTION","EDITOR_TO_PENDING_SELECTION","EDITOR_TO_FORCE_RENDER","PLACEHOLDER_SYMBOL","MARK_PLACEHOLDER_SYMBOL","DOMText","Text","getDefaultView","ownerDocument","defaultView","isDOMComment","isDOMNode","nodeType","isDOMElement","Node","isDOMSelection","anchorNode","Selection","isDOMText","isPlainTextOnlyPaste","event","clipboardData","getData","types","normalizeDOMPoint","domPoint","node","offset","childNodes","isLast","index","getEditableChildAndIndex","getEditableChild","textContent","hasShadowRoot","parent","parentNode","toString","direction","child","triedForward","triedBackward","getAttribute","getPlainText","domNode","text","nodeValue","childNode","Array","from","display","getComputedStyle","getPropertyValue","tagName","catchSlateFragment","getSlateFragmentAttribute","dataTransfer","htmlData","fragment","match","isTrackedMutation","mutation","batch","matches","ReactEditor","getWindow","contains","hasDOMNode","editable","parentMutation","find","_ref","addedNodes","removedNodes","_node","n","Key","id","concat","androidPendingDiffs","get","androidScheduleFlush","_EDITOR_TO_SCHEDULE_F","blur","el","toDOMNode","root","findDocumentOrShadowRoot","set","activeElement","deselect","selection","domSelection","getSelection","rangeCount","removeAllRanges","Transforms","getRootNode","Document","ShadowRoot","findEventRange","nativeEvent","clientX","x","clientY","y","toSlateNode","path","findPath","Element$1","isElement","Editor","isVoid","rect","getBoundingClientRect","isPrev","isInline","left","width","top","height","edge","point","before","after","_range","range","domRange","caretRangeFromPoint","position","caretPositionFromPoint","createRange","setStart","offsetNode","setEnd","toSlateRange","exactMatch","suppressThrow","findKey","isEditor","unshift","Scrubber","stringify","focus","options","arguments","retries","operations","setTimeout","toDOMRange","addRange","select","start","onChange","preventScroll","editorEl","targetEl","parentElement","err","message","includes","closest","isContentEditable","hasEditableTarget","hasRange","anchor","hasPath","hasSelectableTarget","isTargetInsideNonReadonlyVoid","hasTarget","insertData","data","insertFragmentData","insertTextData","isComposing","isFocused","isReadOnly","slateNode","setFragmentData","originEvent","KEY_TO_ELEMENT","toDOMPoint","void","at","selector","texts","querySelectorAll","attr","trueLength","end","nextText","hasAttribute","_nextText$textContent","domText","startsWith","Math","min","max","isBackward","Range","domAnchor","domFocus","isCollapsed","startNode","startOffset","endNode","endOffset","startEl","isStartAtZeroWidth","endEl","isEndAtZeroWidth","domEl","toSlatePoint","nearestNode","nearestOffset","textNode","_domNode$textContent","_domNode$textContent2","potentialVoidNode","voidNode","leafNode","contents","cloneContents","removals","slice","forEach","textContext","removeChild","leafNodes","current","endsWith","_slateNode","_path","_offset","querySelector","_focusNode$textConten","startContainer","anchorOffset","focusNode","focusOffset","firstRange","getRangeAt","lastRange","HTMLTableRowElement","getLastChildren","element","childElementCount","children","firstNodeRow","lastNodeRow","firstNode","lastNode","HTMLElement","innerHTML","endContainer","collapsed","_anchorNode$textConte","isExpanded","isForward","mode","unhangRange","voids","verifyDiffState","textDiff","diff","Text$1","isText","nextPath","Path","next","nextNode","applyStringDiff","_len","diffs","_key","reduce","longestCommonPrefixLength","str","another","charAt","longestCommonSuffixLength","normalizeStringDiff","targetText","removedText","prefixLength","suffixLength","normalized","mergeStringDiffs","a","b","overlap","applied","sliceEnd","targetRange","normalizePoint","leaf","parentBlock","above","isBlock","entry","isDescendant","normalizeRange","transformPendingPoint","op","pendingDiffs","equals","Point","transform","affinity","_anchor","_transformed","transformed","type","transformPendingRange","transformTextDiff","newPath","RESOLVE_DELAY","FLUSH_DELAY","debug","isDataTransfer","name","createAndroidInputManager","scheduleOnDOMSelectionChange","onDOMSelectionChange","flushing","compositionEndTimeoutId","flushTimeoutId","actionTimeoutId","idCounter","insertPositionHint","applyPendingSelection","pendingSelection","delete","performAction","action","isPoint","_targetRange","run","flush","clearTimeout","hasPendingDiffs","hasPendingAction","selectionRef","rangeRef","marks","scheduleSelectionChange","_EDITOR_TO_PENDING_DI","_EDITOR_TO_PENDING_DI2","pendingMarks","insertText","deleteFragment","filter","_ref2","cancel","unref","userMarks","handleCompositionEnd","_event","handleCompositionStart","updatePlaceholderVisibility","forceHide","placeholderElement","style","removeProperty","storeDiff","_EDITOR_TO_PENDING_DI3","idx","findIndex","change","push","merged","splice","_objectSpread$6","scheduleAction","handleDOMBeforeInput","_targetRange2","inputType","nativeTargetRange","canStoreDiff","_start","_end","edges","_leaf","relevantPendingDiffs","handleUserSelect","targetNode","deleteForward","_nativeTargetRange","nativeCollapsed","deleteBackward","unit","insertSoftBreak","insertBreak","_text","replace","parts","line","_start2","_end2","_diff","hintPosition","search","diffPosition","scheduleFlush","_EDITOR_TO_PENDING_DI4","hasPendingChanges","isFlushing","pathChanged","parentPathChanged","handleInput","handleKeyDown","_","handleDomMutations","mutations","some","_EDITOR_TO_FORCE_REND","useIsMounted","isMountedRef","useRef","useEffect","useIsomorphicLayoutEffect","useLayoutEffect","useMutationObserver","callback","mutationObserver","useState","MutationObserver","takeRecords","observe","disconnect","MUTATION_OBSERVER_CONFIG$1","subtree","childList","characterData","useAndroidInputManager","_excluded$3","isMounted","inputManager","_objectSpread$5","shallowCompare","obj1","obj2","every","hasOwnProperty","isDecorationFlagsEqual","other","rangeOwnProps","_excluded$2","otherOwnProps","_excluded2$1","isElementDecorationsEqual","list","isTextDecorationsEqual","String$1","props","parentPath","isMarkPlaceholder","Boolean","ZeroWidthString","string","isLineBreak","TextString","isTrailing","ref","getTextContent","initialText","textWithTrailing","MemoizedText$1","memo","forwardRef","attributes","_objectSpread$4","PLACEHOLDER_DELAY","disconnectPlaceholderResizeObserver","placeholderResizeObserver","releaseObserver","clearTimeoutRef","timeoutRef","Leaf","renderPlaceholder","renderLeaf","DefaultLeaf","_objectSpread$3","placeholderRef","showPlaceholder","setShowPlaceholder","showPlaceholderTimeoutRef","callbackPlaceholderRef","useCallback","placeholderEl","_leaf$onPlaceholderRe","onPlaceholderResize","ResizeObserver$1","ResizeObserver","_leaf$onPlaceholderRe2","leafIsPlaceholder","placeholderProps","placeholder","pointerEvents","maxWidth","opacity","userSelect","textDecoration","WebkitUserModify","contentEditable","Fragment","MemoizedLeaf","prev","decorations","leaves","callbackRef","span","MemoizedText","Element","renderElement","p","DefaultElement","_objectSpread$2","readOnly","useReadOnly","useChildren","hasInlines","dir","getDirection","Tag","color","outline","MemoizedElement","DecorateContext","useDecorate","SelectedContext","useSelected","decorate","isLeafBlock","sel","intersection","ds","dec","d","Provider","ReadOnlyContext","SlateContext","useSlate","context","useSlateWithV","useTrackUserInput","receivedUserInput","animationFrameIdRef","onUserInput","cancelAnimationFrame","requestAnimationFrame","TRIPLE_CLICK","HOTKEYS","bold","compose","moveBackward","moveForward","moveWordBackward","moveWordForward","extendBackward","extendForward","italic","splitBlock","undo","APPLE_HOTKEYS","moveLineBackward","moveLineForward","deleteLineBackward","deleteLineForward","deleteWordBackward","deleteWordForward","extendLineBackward","extendLineForward","redo","transposeCharacter","WINDOWS_HOTKEYS","create","generic","apple","windows","isGeneric","isHotkey","isApple","isWindows","Hotkeys","isBold","isCompose","isMoveBackward","isMoveForward","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","isExtendBackward","isExtendForward","isExtendLineBackward","isExtendLineForward","isItalic","isMoveLineBackward","isMoveLineForward","isMoveWordBackward","isMoveWordForward","isRedo","isSoftBreak","isSplitBlock","isTransposeCharacter","isUndo","createRestoreDomManager","bufferedMutations","clear","registerMutations","trackedMutations","restoreDOM","reverse","insertBefore","nextSibling","MUTATION_OBSERVER_CONFIG","characterDataOldValue","RestoreDOMComponent","Component","_this$mutationObserve","componentDidMount","manager","getSnapshotBeforeUpdate","_this$mutationObserve2","_this$mutationObserve3","_this$manager2","pendingMutations","_this$manager","componentDidUpdate","_this$manager3","componentWillUnmount","_this$mutationObserve4","render","RestoreDOM","Children","Editable","defaultRenderPlaceholder","DefaultPlaceholder","_objectSpread$1","autoFocus","defaultDecorate","onDOMBeforeInput","propsOnDOMBeforeInput","scrollSelectionIntoView","defaultScrollSelectionIntoView","userStyle","as","disableDefaultStyles","_excluded$1","setIsComposing","deferredOperations","placeholderHeight","setPlaceholderHeight","forceRender","useReducer","s","state","useMemo","isDraggingInternally","isUpdatingSelection","latestElement","hasMarkPlaceholder","androidInputManagerRef","throttle","androidInputManager","anchorNodeSelectable","focusNodeSelectable","debounce","_androidInputManagerR","_androidInputManagerR2","setDomSelection","forceChange","hasDomSelection","editorElement","hasDomSelectionInEditor","slateRange","_anchorNode","newDomRange","collapseToEnd","setBaseAndExtent","ensureSelection","timeoutId","animationFrameId","ensureDomSelection","e","isDOMEventHandled","_EDITOR_TO_USER_SELEC","isCompositionChange","native","_node$parentElement","_window$getComputedSt","_lastText$textContent","lastText","createTreeWalker","NodeFilter","SHOW_TEXT","lastChild","whiteSpace","block","preventDefault","toRestore","removeEventListener","addEventListener","placeHolderResizeHandler","_placeholderEl$getBou","rest","_excluded2","loose","unset","fromEntries","map","mark","role","spellCheck","autoCorrect","autoCapitalize","zindex","suppressContentEditableWarning","wordWrap","minHeight","onBeforeInput","isEventHandled","_text2","onInput","onBlur","relatedTarget","onClick","detail","blockPath","_block$","startVoid","endVoid","onCompositionEnd","_androidInputManagerR3","Promise","resolve","then","placeholderMarks","onCompositionUpdate","onCompositionStart","_androidInputManagerR4","onCopy","isDOMEventTargetInput","onCut","onDragOver","onDragStart","voidMatch","onDrop","draggedRange","onDragEnd","onFocus","onKeyDown","_androidInputManagerR5","isRTL","maybeHistoryEditor","_maybeHistoryEditor","move","collapse","currentNode","onPaste","leafEl","bind","scrollIntoView","scrollMode","handler","shouldTreatEventAsHandled","isDefaultPrevented","isPropagationStopped","HTMLInputElement","HTMLTextAreaElement","defaultPrevented","FocusedContext","useFocused","isError","error","SlateSelectorContext","refEquality","useSlateSelector","equalityFn","getSlate","latestSubscriptionCallbackError","latestSelector","latestSelectedState","selectedState","stack","checkForUpdates","newSelectedState","unsubscribe","useSelectorContext","eventListeners","slateRef","listener","selectorContext","Slate","onSelectionChange","onValueChange","initialValue","_excluded","setContext","isNodeList","assign","v","handleSelectorChange","onContextChange","_options$operation","operation","prevContext","setIsFocused","fn","useEditor","useSlateSelection","isSelectionEqual","doRectsIntersect","compareRect","middle","bottom","areRangesSameLine","range1","range2","rect1","rect2","findCurrentLineRange","parentRange","parentRangeBoundary","positions","right","floor","withReact","clipboardFormatKey","apply","addMark","removeMark","parentBlockEntry","parentBlockPath","parentElementRange","currentLineRange","pathRefMatches","pendingAction","_objectSpread","getMatches","prevPath","previous","commonPath","common","changedPath","isBefore","changedNode","changedNodeKey","changedPathRef","pathRef","attach","trim","r","cloneRange","setEndAfter","zw","isNewline","appendChild","getFragment","JSON","encoded","btoa","encodeURIComponent","setAttribute","setData","div","body","decoded","decodeURIComponent","atob","parsed","parse","insertFragment","lines","splitNodes","always","maybeBatchUpdates","ReactDOM","unstable_batchedUpdates","levels"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","/Users/tuvyakhatter/Desktop/pipecat_voicebot/.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","/Users/tuvyakhatter/Desktop/pipecat_voicebot/.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/typeof.js","/Users/tuvyakhatter/Desktop/pipecat_voicebot/.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","/Users/tuvyakhatter/Desktop/pipecat_voicebot/.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","/Users/tuvyakhatter/Desktop/pipecat_voicebot/.yarn/berry/cache/@babel-runtime-npm-7.23.2-d013d6cf7e-10.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-slate-static.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/utils/environment.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/utils/weak-maps.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/utils/dom.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/utils/key.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/plugin/react-editor.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/utils/diff-text.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/android-input-manager/android-input-manager.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-is-mounted.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-isomorphic-layout-effect.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-mutation-observer.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/android-input-manager/use-android-input-manager.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/utils/range-list.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/components/string.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/components/leaf.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/components/text.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/components/element.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-decorate.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-selected.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-children.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-read-only.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-slate.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-track-user-input.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/utils/constants.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/utils/hotkeys.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/components/restore-dom/restore-dom-manager.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/components/restore-dom/restore-dom.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/components/editable.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-focused.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-slate-selector.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/components/slate.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-editor.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/hooks/use-slate-selection.tsx","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/utils/lines.ts","/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/slate-react/src/plugin/with-react.ts"],"sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import React from 'react'\n\nexport const REACT_MAJOR_VERSION = parseInt(React.version.split('.')[0], 10)\n\nexport const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_ANDROID =\n  typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_WEBKIT =\n  typeof navigator !== 'undefined' &&\n  /AppleWebKit(?!.*Chrome)/i.test(navigator.userAgent)\n\n// \"modern\" Edge was released at 79.x\nexport const IS_EDGE_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_CHROME =\n  typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent)\n\n// Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\nexport const IS_CHROME_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_ANDROID_CHROME_LEGACY =\n  IS_ANDROID &&\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-5]?\\d)(?:\\.)/i.test(navigator.userAgent)\n\n// Firefox did not support `beforeInput` until `v87`.\nexport const IS_FIREFOX_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(\n    navigator.userAgent\n  )\n\n// UC mobile browser\nexport const IS_UC_MOBILE =\n  typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent)\n\n// Wechat browser (not including mac wechat)\nexport const IS_WECHATBROWSER =\n  typeof navigator !== 'undefined' &&\n  /.*Wechat/.test(navigator.userAgent) &&\n  !/.*MacWechat/.test(navigator.userAgent) // avoid lookbehind (buggy in safari < 16.4)\n\n// Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const CAN_USE_DOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nexport const HAS_BEFORE_INPUT_SUPPORT =\n  (!IS_CHROME_LEGACY || !IS_ANDROID_CHROME_LEGACY) &&\n  !IS_EDGE_LEGACY &&\n  // globalThis is undefined in older browsers\n  typeof globalThis !== 'undefined' &&\n  globalThis.InputEvent &&\n  // @ts-ignore The `getTargetRanges` property isn't recognized.\n  typeof globalThis.InputEvent.prototype.getTargetRanges === 'function'\n","import { Ancestor, Editor, Node, Operation, Range, RangeRef, Text } from 'slate'\nimport { Action } from '../hooks/android-input-manager/android-input-manager'\nimport { TextDiff } from './diff-text'\nimport { Key } from './key'\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\n\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\nexport const EDITOR_TO_WINDOW: WeakMap<Editor, Window> = new WeakMap()\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER_ELEMENT: WeakMap<Editor, HTMLElement> =\n  new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\nexport const EDITOR_TO_KEY_TO_ELEMENT: WeakMap<\n  Editor,\n  WeakMap<Key, HTMLElement>\n> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_COMPOSING: WeakMap<Editor, boolean> = new WeakMap()\n\nexport const EDITOR_TO_USER_SELECTION: WeakMap<Editor, RangeRef | null> =\n  new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<\n  Editor,\n  (options?: { operation?: Operation }) => void\n>()\n\n/**\n * Weak maps for saving pending state on composition stage.\n */\n\nexport const EDITOR_TO_SCHEDULE_FLUSH: WeakMap<Editor, () => void> =\n  new WeakMap()\n\nexport const EDITOR_TO_PENDING_INSERTION_MARKS: WeakMap<\n  Editor,\n  Partial<Text> | null\n> = new WeakMap()\n\nexport const EDITOR_TO_USER_MARKS: WeakMap<Editor, Partial<Text> | null> =\n  new WeakMap()\n\n/**\n * Android input handling specific weak-maps\n */\n\nexport const EDITOR_TO_PENDING_DIFFS: WeakMap<Editor, TextDiff[]> =\n  new WeakMap()\n\nexport const EDITOR_TO_PENDING_ACTION: WeakMap<Editor, Action | null> =\n  new WeakMap()\n\nexport const EDITOR_TO_PENDING_SELECTION: WeakMap<Editor, Range | null> =\n  new WeakMap()\n\nexport const EDITOR_TO_FORCE_RENDER: WeakMap<Editor, () => void> = new WeakMap()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = Symbol('placeholder') as unknown as string\nexport const MARK_PLACEHOLDER_SYMBOL = Symbol(\n  'mark-placeholder'\n) as unknown as string\n","/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\nimport { ReactEditor } from '../plugin/react-editor'\n\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\ndeclare global {\n  interface Window {\n    Selection: (typeof Selection)['constructor']\n    DataTransfer: (typeof DataTransfer)['constructor']\n    Node: (typeof Node)['constructor']\n  }\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Returns the host window of a DOM node\n */\n\nexport const getDefaultView = (value: any): Window | null => {\n  return (\n    (value && value.ownerDocument && value.ownerDocument.defaultView) || null\n  )\n}\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  const window = getDefaultView(value)\n  return !!window && value instanceof window.Node\n}\n\n/**\n * Check if a value is a DOM selection.\n */\n\nexport const isDOMSelection = (value: any): value is DOMSelection => {\n  const window = value && value.anchorNode && getDefaultView(value.anchorNode)\n  return !!window && value instanceof window.Selection\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\n\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\n  return (\n    event.clipboardData &&\n    event.clipboardData.getData('text/plain') !== '' &&\n    event.clipboardData.types.length === 1\n  )\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    let isLast = offset === node.childNodes.length\n    let index = isLast ? offset - 1 : offset\n    ;[node, index] = getEditableChildAndIndex(\n      node,\n      index,\n      isLast ? 'backward' : 'forward'\n    )\n    // If the editable child found is in front of input offset, we instead seek to its end\n    isLast = index < offset\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward')\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Determines whether the active element is nested within a shadowRoot\n */\n\nexport const hasShadowRoot = (node: Node | null) => {\n  let parent = node && node.parentNode\n  while (parent) {\n    if (parent.toString() === '[object ShadowRoot]') {\n      return true\n    }\n    parent = parent.parentNode\n  }\n  return false\n}\n\n/**\n * Get the nearest editable child and index at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChildAndIndex = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): [DOMNode, number] => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    index = i\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return [child, index]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const [child] = getEditableChildAndIndex(parent, index, direction)\n  return child\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\n\nexport const getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n\n/**\n * Get x-slate-fragment attribute from data-slate-fragment\n */\nconst catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m\nexport const getSlateFragmentAttribute = (\n  dataTransfer: DataTransfer\n): string | void => {\n  const htmlData = dataTransfer.getData('text/html')\n  const [, fragment] = htmlData.match(catchSlateFragment) || []\n  return fragment\n}\n\n/**\n * Get the x-slate-fragment attribute that exist in text/html data\n * and append it to the DataTransfer object\n */\nexport const getClipboardData = (\n  dataTransfer: DataTransfer,\n  clipboardFormatKey = 'x-slate-fragment'\n): DataTransfer => {\n  if (!dataTransfer.getData(`application/${clipboardFormatKey}`)) {\n    const fragment = getSlateFragmentAttribute(dataTransfer)\n    if (fragment) {\n      const clipboardData = new DataTransfer()\n      dataTransfer.types.forEach(type => {\n        clipboardData.setData(type, dataTransfer.getData(type))\n      })\n      clipboardData.setData(`application/${clipboardFormatKey}`, fragment)\n      return clipboardData\n    }\n  }\n  return dataTransfer\n}\n\n/**\n * Check whether a mutation originates from a editable element inside the editor.\n */\n\nexport const isTrackedMutation = (\n  editor: ReactEditor,\n  mutation: MutationRecord,\n  batch: MutationRecord[]\n): boolean => {\n  const { target } = mutation\n  if (isDOMElement(target) && target.matches('[contentEditable=\"false\"]')) {\n    return false\n  }\n\n  const { document } = ReactEditor.getWindow(editor)\n  if (document.contains(target)) {\n    return ReactEditor.hasDOMNode(editor, target, { editable: true })\n  }\n\n  const parentMutation = batch.find(({ addedNodes, removedNodes }) => {\n    for (const node of addedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n\n    for (const node of removedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n  })\n\n  if (!parentMutation || parentMutation === mutation) {\n    return false\n  }\n\n  // Target add/remove is tracked. Track the mutation if we track the parent mutation.\n  return isTrackedMutation(editor, parentMutation, batch)\n}\n","/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n","import {\n  BaseEditor,\n  Editor,\n  Element,\n  Node,\n  Path,\n  Point,\n  Range,\n  Scrubber,\n  Transforms,\n} from 'slate'\nimport { TextDiff } from '../utils/diff-text'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  DOMText,\n  hasShadowRoot,\n  isDOMElement,\n  isDOMNode,\n  isDOMSelection,\n  normalizeDOMPoint,\n} from '../utils/dom'\nimport { IS_ANDROID, IS_CHROME, IS_FIREFOX } from '../utils/environment'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n} from '../utils/weak-maps'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends BaseEditor {\n  hasEditableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n  hasSelectableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n  hasTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n  insertData: (data: DataTransfer) => void\n  insertFragmentData: (data: DataTransfer) => boolean\n  insertTextData: (data: DataTransfer) => boolean\n  isTargetInsideNonReadonlyVoid: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n  setFragmentData: (\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n}\n\nexport interface ReactEditorInterface {\n  /**\n   * Experimental and android specific: Get pending diffs\n   */\n  androidPendingDiffs: (editor: Editor) => TextDiff[] | undefined\n\n  /**\n   * Experimental and android specific: Flush all pending diffs and cancel composition at the next possible time.\n   */\n  androidScheduleFlush: (editor: Editor) => void\n\n  /**\n   * Blur the editor.\n   */\n  blur: (editor: ReactEditor) => void\n\n  /**\n   * Deselect the editor.\n   */\n  deselect: (editor: ReactEditor) => void\n\n  /**\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\n   */\n  findDocumentOrShadowRoot: (editor: ReactEditor) => Document | ShadowRoot\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n  findEventRange: (editor: ReactEditor, event: any) => Range\n\n  /**\n   * Find a key for a Slate node.\n   */\n  findKey: (editor: ReactEditor, node: Node) => Key\n\n  /**\n   * Find the path of Slate node.\n   */\n  findPath: (editor: ReactEditor, node: Node) => Path\n\n  /**\n   * Focus the editor.\n   */\n  focus: (editor: ReactEditor, options?: { retries: number }) => void\n\n  /**\n   * Return the host window of the current editor.\n   */\n  getWindow: (editor: ReactEditor) => Window\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n  hasDOMNode: (\n    editor: ReactEditor,\n    target: DOMNode,\n    options?: { editable?: boolean }\n  ) => boolean\n\n  /**\n   * Check if the target is editable and in the editor.\n   */\n  hasEditableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n\n  /**\n   *\n   */\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n\n  /**\n   * Check if the target can be selectable\n   */\n  hasSelectableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n\n  /**\n   * Check if the target is in the editor.\n   */\n  hasTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n  insertData: (editor: ReactEditor, data: DataTransfer) => void\n\n  /**\n   * Insert fragment data from a `DataTransfer` into the editor.\n   */\n  insertFragmentData: (editor: ReactEditor, data: DataTransfer) => boolean\n\n  /**\n   * Insert text data from a `DataTransfer` into the editor.\n   */\n  insertTextData: (editor: ReactEditor, data: DataTransfer) => boolean\n\n  /**\n   * Check if the user is currently composing inside the editor.\n   */\n  isComposing: (editor: ReactEditor) => boolean\n\n  /**\n   * Check if the editor is focused.\n   */\n  isFocused: (editor: ReactEditor) => boolean\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n  isReadOnly: (editor: ReactEditor) => boolean\n\n  /**\n   * Check if the target is inside void and in an non-readonly editor.\n   */\n  isTargetInsideNonReadonlyVoid: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n\n  /**\n   * Sets data from the currently selected fragment on a `DataTransfer`.\n   */\n  setFragmentData: (\n    editor: ReactEditor,\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n  toDOMNode: (editor: ReactEditor, node: Node) => HTMLElement\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n  toDOMPoint: (editor: ReactEditor, point: Point) => DOMPoint\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\n   *\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\n   */\n  toDOMRange: (editor: ReactEditor, range: Range) => DOMRange\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n  toSlateNode: (editor: ReactEditor, domNode: DOMNode) => Node\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n  toSlatePoint: <T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ) => T extends true ? Point | null : Point\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n  toSlateRange: <T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ) => T extends true ? Range | null : Range\n}\n\n// eslint-disable-next-line no-redeclare\nexport const ReactEditor: ReactEditorInterface = {\n  androidPendingDiffs: editor => EDITOR_TO_PENDING_DIFFS.get(editor),\n\n  androidScheduleFlush: editor => {\n    EDITOR_TO_SCHEDULE_FLUSH.get(editor)?.()\n  },\n\n  blur: editor => {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (root.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  deselect: editor => {\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  findDocumentOrShadowRoot: editor => {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = el.getRootNode()\n\n    if (\n      (root instanceof Document || root instanceof ShadowRoot) &&\n      root.getSelection != null\n    ) {\n      return root\n    }\n\n    return el.ownerDocument\n  },\n\n  findEventRange: (editor, event) => {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = ReactEditor.toSlateNode(editor, event.target)\n    const path = ReactEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Element.isElement(node) && Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = ReactEditor.getWindow(editor)\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false,\n    })\n    return range\n  },\n\n  findKey: (editor, node) => {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  findPath: (editor, node) => {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${Scrubber.stringify(node)}`\n    )\n  },\n\n  focus: (editor, options = { retries: 5 }) => {\n    // Return if already focused\n    if (IS_FOCUSED.get(editor)) {\n      return\n    }\n\n    // Retry setting focus if the editor has pending operations.\n    // The DOM (selection) is unstable while changes are applied.\n    // Retry until retries are exhausted or editor is focused.\n    if (options.retries <= 0) {\n      throw new Error(\n        'Could not set focus, editor seems stuck with pending operations'\n      )\n    }\n    if (editor.operations.length > 0) {\n      setTimeout(() => {\n        ReactEditor.focus(editor, { retries: options.retries - 1 })\n      }, 10)\n      return\n    }\n\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    if (root.activeElement !== el) {\n      // Ensure that the DOM selection state is set to the editor's selection\n      if (editor.selection && root instanceof Document) {\n        const domSelection = root.getSelection()\n        const domRange = ReactEditor.toDOMRange(editor, editor.selection)\n        domSelection?.removeAllRanges()\n        domSelection?.addRange(domRange)\n      }\n      // Create a new selection in the top of the document if missing\n      if (!editor.selection) {\n        Transforms.select(editor, Editor.start(editor, []))\n        editor.onChange()\n      }\n      // IS_FOCUSED should be set before calling el.focus() to ensure that\n      // FocusedContext is updated to the correct value\n      IS_FOCUSED.set(editor, true)\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  getWindow: editor => {\n    const window = EDITOR_TO_WINDOW.get(editor)\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor')\n    }\n    return window\n  },\n\n  hasDOMNode: (editor, target, options = {}) => {\n    const { editable = false } = options\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\n    let targetEl\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = (\n        isDOMElement(target) ? target : target.parentElement\n      ) as HTMLElement\n    } catch (err) {\n      if (\n        err instanceof Error &&\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!targetEl) {\n      return false\n    }\n\n    return (\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\n      (!editable || targetEl.isContentEditable\n        ? true\n        : (typeof targetEl.isContentEditable === 'boolean' && // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n            // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n            targetEl.closest('[contenteditable=\"false\"]') === editorEl) ||\n          !!targetEl.getAttribute('data-slate-zero-width'))\n    )\n  },\n\n  hasEditableTarget: (editor, target): target is DOMNode =>\n    isDOMNode(target) &&\n    ReactEditor.hasDOMNode(editor, target, { editable: true }),\n\n  hasRange: (editor, range) => {\n    const { anchor, focus } = range\n    return (\n      Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path)\n    )\n  },\n\n  hasSelectableTarget: (editor, target) =>\n    ReactEditor.hasEditableTarget(editor, target) ||\n    ReactEditor.isTargetInsideNonReadonlyVoid(editor, target),\n\n  hasTarget: (editor, target): target is DOMNode =>\n    isDOMNode(target) && ReactEditor.hasDOMNode(editor, target),\n\n  insertData: (editor, data) => {\n    editor.insertData(data)\n  },\n\n  insertFragmentData: (editor, data) => editor.insertFragmentData(data),\n\n  insertTextData: (editor, data) => editor.insertTextData(data),\n\n  isComposing: editor => {\n    return !!IS_COMPOSING.get(editor)\n  },\n\n  isFocused: editor => !!IS_FOCUSED.get(editor),\n\n  isReadOnly: editor => !!IS_READ_ONLY.get(editor),\n\n  isTargetInsideNonReadonlyVoid: (editor, target) => {\n    if (IS_READ_ONLY.get(editor)) return false\n\n    const slateNode =\n      ReactEditor.hasTarget(editor, target) &&\n      ReactEditor.toSlateNode(editor, target)\n    return Element.isElement(slateNode) && Editor.isVoid(editor, slateNode)\n  },\n\n  setFragmentData: (editor, data, originEvent) =>\n    editor.setFragmentData(data, originEvent),\n\n  toDOMNode: (editor, node) => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT?.get(ReactEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${Scrubber.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  toDOMPoint: (editor, point) => {\n    const [node] = Editor.node(editor, point.path)\n    const el = ReactEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (let i = 0; i < texts.length; i++) {\n      const text = texts[i]\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      // Prefer putting the selection inside the mark placeholder to ensure\n      // composed text is displayed with the correct marks.\n      const nextText = texts[i + 1]\n      if (\n        point.offset === end &&\n        nextText?.hasAttribute('data-slate-mark-placeholder')\n      ) {\n        const domText = nextText.childNodes[0]\n\n        domPoint = [\n          // COMPAT: If we don't explicity set the dom point to be on the actual\n          // dom text element, chrome will put the selection behind the actual dom\n          // text element, causing domRange.getBoundingClientRect() calls on a collapsed\n          // selection to return incorrect zero values (https://bugs.chromium.org/p/chromium/issues/detail?id=435438)\n          // which will cause issues when scrolling to it.\n          domText instanceof DOMText ? domText : nextText,\n          nextText.textContent?.startsWith('\\uFEFF') ? 1 : 0,\n        ]\n        break\n      }\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${Scrubber.stringify(\n          point\n        )}`\n      )\n    }\n\n    return domPoint\n  },\n\n  toDOMRange: (editor, range) => {\n    const { anchor, focus } = range\n    const isBackward = Range.isBackward(range)\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : ReactEditor.toDOMPoint(editor, focus)\n\n    const window = ReactEditor.getWindow(editor)\n    const domRange = window.document.createRange()\n    const [startNode, startOffset] = isBackward ? domFocus : domAnchor\n    const [endNode, endOffset] = isBackward ? domAnchor : domFocus\n\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    const startEl = (\n      isDOMElement(startNode) ? startNode : startNode.parentElement\n    ) as HTMLElement\n    const isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width')\n    const endEl = (\n      isDOMElement(endNode) ? endNode : endNode.parentElement\n    ) as HTMLElement\n    const isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width')\n\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset)\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset)\n    return domRange\n  },\n\n  toSlateNode: (editor, domNode) => {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  toSlatePoint: <T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ): T extends true ? Point | null : Point => {\n    const { exactMatch, suppressThrow } = options\n    const [nearestNode, nearestOffset] = exactMatch\n      ? domPoint\n      : normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const editorEl = ReactEditor.toDOMNode(editor, editor)\n      const potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n      const voidNode =\n        potentialVoidNode && editorEl.contains(potentialVoidNode)\n          ? potentialVoidNode\n          : null\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')\n\n        if (textNode) {\n          const window = ReactEditor.getWindow(editor)\n          const range = window.document.createRange()\n          range.setStart(textNode, 0)\n          range.setEnd(nearestNode, nearestOffset)\n\n          const contents = range.cloneContents()\n          const removals = [\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[data-slate-zero-width]')\n            ),\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[contenteditable=false]')\n            ),\n          ]\n\n          removals.forEach(el => {\n            // COMPAT: While composing at the start of a text node, some keyboards put\n            // the text content inside the zero width space.\n            if (\n              IS_ANDROID &&\n              !exactMatch &&\n              el.hasAttribute('data-slate-zero-width') &&\n              el.textContent.length > 0 &&\n              el.textContext !== '\\uFEFF'\n            ) {\n              if (el.textContent.startsWith('\\uFEFF')) {\n                el.textContent = el.textContent.slice(1)\n              }\n\n              return\n            }\n\n            el!.parentNode!.removeChild(el)\n          })\n\n          // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-react\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n          offset = contents.textContent!.length\n          domNode = textNode\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent and taking the\n        // first one that isn't inside a nested editor.\n        const leafNodes = voidNode.querySelectorAll('[data-slate-leaf]')\n        for (let index = 0; index < leafNodes.length; index++) {\n          const current = leafNodes[index]\n          if (ReactEditor.hasDOMNode(editor, current)) {\n            leafNode = current\n            break\n          }\n        }\n\n        // COMPAT: In read-only editors the leaf is not rendered.\n        if (!leafNode) {\n          offset = 1\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n          domNode = leafNode\n          offset = domNode.textContent!.length\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent!.length\n          })\n        }\n      }\n\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        // COMPAT: Android IMEs might remove the zero width space while composing,\n        // and we don't add it for line-breaks.\n        IS_ANDROID &&\n        domNode.getAttribute('data-slate-zero-width') === 'z' &&\n        domNode.textContent?.startsWith('\\uFEFF') &&\n        // COMPAT: If the parent node is a Slate zero-width space, editor is\n        // because the text node should have no characters. However, during IME\n        // composition the ASCII characters will be prepended to the zero-width\n        // space, so subtract 1 from the offset to account for the zero-width\n        // space character.\n        (parentNode.hasAttribute('data-slate-zero-width') ||\n          // COMPAT: In Firefox, `range.cloneContents()` returns an extra trailing '\\n'\n          // when the document ends with a new-line character. This results in the offset\n          // length being off by one, so we need to subtract one to account for this.\n          (IS_FIREFOX && domNode.textContent?.endsWith('\\n\\n')))\n      ) {\n        offset--\n      }\n    }\n\n    if (IS_ANDROID && !textNode && !exactMatch) {\n      const node = parentNode.hasAttribute('data-slate-node')\n        ? parentNode\n        : parentNode.closest('[data-slate-node]')\n\n      if (node && ReactEditor.hasDOMNode(editor, node, { editable: true })) {\n        const slateNode = ReactEditor.toSlateNode(editor, node)\n        let { path, offset } = Editor.start(\n          editor,\n          ReactEditor.findPath(editor, slateNode)\n        )\n\n        if (!node.querySelector('[data-slate-leaf]')) {\n          offset = nearestOffset\n        }\n\n        return { path, offset } as T extends true ? Point | null : Point\n      }\n    }\n\n    if (!textNode) {\n      if (suppressThrow) {\n        return null as T extends true ? Point | null : Point\n      }\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\n    const path = ReactEditor.findPath(editor, slateNode)\n    return { path, offset } as T extends true ? Point | null : Point\n  },\n\n  toSlateRange: <T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ): T extends true ? Range | null : Range => {\n    const { exactMatch, suppressThrow } = options\n    const el = isDOMSelection(domRange)\n      ? domRange.anchorNode\n      : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        // COMPAT: In firefox the normal seletion way does not work\n        // (https://github.com/ianstormtaylor/slate/pull/5486#issue-1820720223)\n        if (IS_FIREFOX && domRange.rangeCount > 1) {\n          focusNode = domRange.focusNode // Focus node works fine\n          const firstRange = domRange.getRangeAt(0)\n          const lastRange = domRange.getRangeAt(domRange.rangeCount - 1)\n\n          // Here we are in the contenteditable mode of a table in firefox\n          if (\n            focusNode instanceof HTMLTableRowElement &&\n            firstRange.startContainer instanceof HTMLTableRowElement &&\n            lastRange.startContainer instanceof HTMLTableRowElement\n          ) {\n            // HTMLElement, becouse Element is a slate element\n            function getLastChildren(element: HTMLElement): HTMLElement {\n              if (element.childElementCount > 0) {\n                return getLastChildren(<HTMLElement>element.children[0])\n              } else {\n                return element\n              }\n            }\n\n            const firstNodeRow = <HTMLTableRowElement>firstRange.startContainer\n            const lastNodeRow = <HTMLTableRowElement>lastRange.startContainer\n\n            // This should never fail as \"The HTMLElement interface represents any HTML element.\"\n            const firstNode = getLastChildren(\n              <HTMLElement>firstNodeRow.children[firstRange.startOffset]\n            )\n            const lastNode = getLastChildren(\n              <HTMLElement>lastNodeRow.children[lastRange.startOffset]\n            )\n\n            // Zero, as we allways take the right one as the anchor point\n            focusOffset = 0\n\n            if (lastNode.childNodes.length > 0) {\n              anchorNode = lastNode.childNodes[0]\n            } else {\n              anchorNode = lastNode\n            }\n\n            if (firstNode.childNodes.length > 0) {\n              focusNode = firstNode.childNodes[0]\n            } else {\n              focusNode = firstNode\n            }\n\n            if (lastNode instanceof HTMLElement) {\n              anchorOffset = (<HTMLElement>lastNode).innerHTML.length\n            } else {\n              // Fallback option\n              anchorOffset = 0\n            }\n          } else {\n            // This is the read only mode of a firefox table\n            // Right to left\n            if (firstRange.startContainer === focusNode) {\n              anchorNode = lastRange.endContainer\n              anchorOffset = lastRange.endOffset\n              focusOffset = firstRange.startOffset\n            } else {\n              // Left to right\n              anchorNode = firstRange.startContainer\n              anchorOffset = firstRange.endOffset\n              focusOffset = lastRange.startOffset\n            }\n          }\n        } else {\n          anchorNode = domRange.anchorNode\n          anchorOffset = domRange.anchorOffset\n          focusNode = domRange.focusNode\n          focusOffset = domRange.focusOffset\n        }\n\n        // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n        // IsCollapsed might not work in firefox, but this will\n        if ((IS_CHROME && hasShadowRoot(anchorNode)) || IS_FIREFOX) {\n          isCollapsed =\n            domRange.anchorNode === domRange.focusNode &&\n            domRange.anchorOffset === domRange.focusOffset\n        } else {\n          isCollapsed = domRange.isCollapsed\n        }\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    // COMPAT: Firefox sometimes includes an extra \\n (rendered by TextString\n    // when isTrailing is true) in the focusOffset, resulting in an invalid\n    // Slate point. (2023/11/01)\n    if (\n      IS_FIREFOX &&\n      focusNode.textContent?.endsWith('\\n\\n') &&\n      focusOffset === focusNode.textContent.length\n    ) {\n      focusOffset--\n    }\n\n    // COMPAT: Triple-clicking a word in chrome will sometimes place the focus\n    // inside a `contenteditable=\"false\"` DOM node following the word, which\n    // will cause `toSlatePoint` to throw an error. (2023/03/07)\n    if (\n      'getAttribute' in focusNode &&\n      (focusNode as HTMLElement).getAttribute('contenteditable') === 'false' &&\n      (focusNode as HTMLElement).getAttribute('data-slate-void') !== 'true'\n    ) {\n      focusNode = anchorNode\n      focusOffset = anchorNode.textContent?.length || 0\n    }\n\n    const anchor = ReactEditor.toSlatePoint(\n      editor,\n      [anchorNode, anchorOffset],\n      {\n        exactMatch,\n        suppressThrow,\n      }\n    )\n    if (!anchor) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    const focus = isCollapsed\n      ? anchor\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n          exactMatch,\n          suppressThrow,\n        })\n    if (!focus) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    let range: Range = { anchor: anchor as Point, focus: focus as Point }\n    // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n    if (\n      Range.isExpanded(range) &&\n      Range.isForward(range) &&\n      isDOMElement(focusNode) &&\n      Editor.void(editor, { at: range.focus, mode: 'highest' })\n    ) {\n      range = Editor.unhangRange(editor, range, { voids: true })\n    }\n\n    return range as unknown as T extends true ? Range | null : Range\n  },\n}\n","import {\n  Editor,\n  Node,\n  Operation,\n  Path,\n  Point,\n  Range,\n  Text,\n  Element,\n} from 'slate'\nimport { EDITOR_TO_PENDING_DIFFS } from './weak-maps'\n\nexport type StringDiff = {\n  start: number\n  end: number\n  text: string\n}\n\nexport type TextDiff = {\n  id: number\n  path: Path\n  diff: StringDiff\n}\n\n/**\n * Check whether a text diff was applied in a way we can perform the pending action on /\n * recover the pending selection.\n */\nexport function verifyDiffState(editor: Editor, textDiff: TextDiff): boolean {\n  const { path, diff } = textDiff\n  if (!Editor.hasPath(editor, path)) {\n    return false\n  }\n\n  const node = Node.get(editor, path)\n  if (!Text.isText(node)) {\n    return false\n  }\n\n  if (diff.start !== node.text.length || diff.text.length === 0) {\n    return (\n      node.text.slice(diff.start, diff.start + diff.text.length) === diff.text\n    )\n  }\n\n  const nextPath = Path.next(path)\n  if (!Editor.hasPath(editor, nextPath)) {\n    return false\n  }\n\n  const nextNode = Node.get(editor, nextPath)\n  return Text.isText(nextNode) && nextNode.text.startsWith(diff.text)\n}\n\nexport function applyStringDiff(text: string, ...diffs: StringDiff[]) {\n  return diffs.reduce(\n    (text, diff) =>\n      text.slice(0, diff.start) + diff.text + text.slice(diff.end),\n    text\n  )\n}\n\nfunction longestCommonPrefixLength(str: string, another: string) {\n  const length = Math.min(str.length, another.length)\n\n  for (let i = 0; i < length; i++) {\n    if (str.charAt(i) !== another.charAt(i)) {\n      return i\n    }\n  }\n\n  return length\n}\n\nfunction longestCommonSuffixLength(\n  str: string,\n  another: string,\n  max: number\n): number {\n  const length = Math.min(str.length, another.length, max)\n\n  for (let i = 0; i < length; i++) {\n    if (\n      str.charAt(str.length - i - 1) !== another.charAt(another.length - i - 1)\n    ) {\n      return i\n    }\n  }\n\n  return length\n}\n\n/**\n * Remove redundant changes from the diff so that it spans the minimal possible range\n */\nexport function normalizeStringDiff(targetText: string, diff: StringDiff) {\n  const { start, end, text } = diff\n  const removedText = targetText.slice(start, end)\n\n  const prefixLength = longestCommonPrefixLength(removedText, text)\n  const max = Math.min(\n    removedText.length - prefixLength,\n    text.length - prefixLength\n  )\n  const suffixLength = longestCommonSuffixLength(removedText, text, max)\n\n  const normalized: StringDiff = {\n    start: start + prefixLength,\n    end: end - suffixLength,\n    text: text.slice(prefixLength, text.length - suffixLength),\n  }\n\n  if (normalized.start === normalized.end && normalized.text.length === 0) {\n    return null\n  }\n\n  return normalized\n}\n\n/**\n * Return a string diff that is equivalent to applying b after a spanning the range of\n * both changes\n */\nexport function mergeStringDiffs(\n  targetText: string,\n  a: StringDiff,\n  b: StringDiff\n): StringDiff | null {\n  const start = Math.min(a.start, b.start)\n  const overlap = Math.max(\n    0,\n    Math.min(a.start + a.text.length, b.end) - b.start\n  )\n\n  const applied = applyStringDiff(targetText, a, b)\n  const sliceEnd = Math.max(\n    b.start + b.text.length,\n    a.start +\n      a.text.length +\n      (a.start + a.text.length > b.start ? b.text.length : 0) -\n      overlap\n  )\n\n  const text = applied.slice(start, sliceEnd)\n  const end = Math.max(a.end, b.end - a.text.length + (a.end - a.start))\n  return normalizeStringDiff(targetText, { start, end, text })\n}\n\n/**\n * Get the slate range the text diff spans.\n */\nexport function targetRange(textDiff: TextDiff): Range {\n  const { path, diff } = textDiff\n  return {\n    anchor: { path, offset: diff.start },\n    focus: { path, offset: diff.end },\n  }\n}\n\n/**\n * Normalize a 'pending point' a.k.a a point based on the dom state before applying\n * the pending diffs. Since the pending diffs might have been inserted with different\n * marks we have to 'walk' the offset from the starting position to ensure we still\n * have a valid point inside the document\n */\nexport function normalizePoint(editor: Editor, point: Point): Point | null {\n  let { path, offset } = point\n  if (!Editor.hasPath(editor, path)) {\n    return null\n  }\n\n  let leaf = Node.get(editor, path)\n  if (!Text.isText(leaf)) {\n    return null\n  }\n\n  const parentBlock = Editor.above(editor, {\n    match: n => Element.isElement(n) && Editor.isBlock(editor, n),\n    at: path,\n  })\n\n  if (!parentBlock) {\n    return null\n  }\n\n  while (offset > leaf.text.length) {\n    const entry = Editor.next(editor, { at: path, match: Text.isText })\n    if (!entry || !Path.isDescendant(entry[1], parentBlock[1])) {\n      return null\n    }\n\n    offset -= leaf.text.length\n    leaf = entry[0]\n    path = entry[1]\n  }\n\n  return { path, offset }\n}\n\n/**\n * Normalize a 'pending selection' to ensure it's valid in the current document state.\n */\nexport function normalizeRange(editor: Editor, range: Range): Range | null {\n  const anchor = normalizePoint(editor, range.anchor)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = normalizePoint(editor, range.focus)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformPendingPoint(\n  editor: Editor,\n  point: Point,\n  op: Operation\n): Point | null {\n  const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n  const textDiff = pendingDiffs?.find(({ path }) =>\n    Path.equals(path, point.path)\n  )\n\n  if (!textDiff || point.offset <= textDiff.diff.start) {\n    return Point.transform(point, op, { affinity: 'backward' })\n  }\n\n  const { diff } = textDiff\n  // Point references location inside the diff => transform the point based on the location\n  // the diff will be applied to and add the offset inside the diff.\n  if (point.offset <= diff.start + diff.text.length) {\n    const anchor = { path: point.path, offset: diff.start }\n    const transformed = Point.transform(anchor, op, {\n      affinity: 'backward',\n    })\n\n    if (!transformed) {\n      return null\n    }\n\n    return {\n      path: transformed.path,\n      offset: transformed.offset + point.offset - diff.start,\n    }\n  }\n\n  // Point references location after the diff\n  const anchor = {\n    path: point.path,\n    offset: point.offset - diff.text.length + diff.end - diff.start,\n  }\n  const transformed = Point.transform(anchor, op, {\n    affinity: 'backward',\n  })\n  if (!transformed) {\n    return null\n  }\n\n  if (\n    op.type === 'split_node' &&\n    Path.equals(op.path, point.path) &&\n    anchor.offset < op.position &&\n    diff.start < op.position\n  ) {\n    return transformed\n  }\n\n  return {\n    path: transformed.path,\n    offset: transformed.offset + diff.text.length - diff.end + diff.start,\n  }\n}\n\nexport function transformPendingRange(\n  editor: Editor,\n  range: Range,\n  op: Operation\n): Range | null {\n  const anchor = transformPendingPoint(editor, range.anchor, op)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = transformPendingPoint(editor, range.focus, op)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformTextDiff(\n  textDiff: TextDiff,\n  op: Operation\n): TextDiff | null {\n  const { path, diff, id } = textDiff\n\n  switch (op.type) {\n    case 'insert_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset <= diff.start) {\n        return {\n          diff: {\n            start: op.text.length + diff.start,\n            end: op.text.length + diff.end,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end + op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'remove_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset + op.text.length <= diff.start) {\n        return {\n          diff: {\n            start: diff.start - op.text.length,\n            end: diff.end - op.text.length,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end - op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'split_node': {\n      if (!Path.equals(op.path, path) || op.position >= diff.end) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op, { affinity: 'backward' })!,\n        }\n      }\n\n      if (op.position > diff.start) {\n        return {\n          diff: {\n            start: diff.start,\n            end: Math.min(op.position, diff.end),\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start - op.position,\n          end: diff.end - op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op, { affinity: 'forward' })!,\n      }\n    }\n    case 'merge_node': {\n      if (!Path.equals(op.path, path)) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op)!,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start + op.position,\n          end: diff.end + op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op)!,\n      }\n    }\n  }\n\n  const newPath = Path.transform(path, op)\n  if (!newPath) {\n    return null\n  }\n\n  return {\n    diff,\n    path: newPath,\n    id,\n  }\n}\n","import { DebouncedFunc } from 'lodash'\nimport { Editor, Node, Path, Point, Range, Text, Transforms } from 'slate'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport {\n  applyStringDiff,\n  mergeStringDiffs,\n  normalizePoint,\n  normalizeRange,\n  normalizeStringDiff,\n  StringDiff,\n  targetRange,\n  TextDiff,\n  verifyDiffState,\n} from '../../utils/diff-text'\nimport { isDOMSelection, isTrackedMutation } from '../../utils/dom'\nimport {\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_USER_MARKS,\n  IS_COMPOSING,\n} from '../../utils/weak-maps'\n\nexport type Action = { at?: Point | Range; run: () => void }\n\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\nconst RESOLVE_DELAY = 25\n\n// Time with no user interaction before the current user action is considered as done.\nconst FLUSH_DELAY = 200\n\n// Replace with `const debug = console.log` to debug\nconst debug = (..._: unknown[]) => {}\n\n// Type guard to check if a value is a DataTransfer\nconst isDataTransfer = (value: any): value is DataTransfer =>\n  value?.constructor.name === 'DataTransfer'\n\nexport type CreateAndroidInputManagerOptions = {\n  editor: ReactEditor\n\n  scheduleOnDOMSelectionChange: DebouncedFunc<() => void>\n  onDOMSelectionChange: DebouncedFunc<() => void>\n}\n\nexport type AndroidInputManager = {\n  flush: () => void\n  scheduleFlush: () => void\n\n  hasPendingDiffs: () => boolean\n  hasPendingAction: () => boolean\n  hasPendingChanges: () => boolean\n  isFlushing: () => boolean | 'action'\n\n  handleUserSelect: (range: Range | null) => void\n  handleCompositionEnd: (event: React.CompositionEvent<HTMLDivElement>) => void\n  handleCompositionStart: (\n    event: React.CompositionEvent<HTMLDivElement>\n  ) => void\n  handleDOMBeforeInput: (event: InputEvent) => void\n  handleKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void\n\n  handleDomMutations: (mutations: MutationRecord[]) => void\n  handleInput: () => void\n}\n\nexport function createAndroidInputManager({\n  editor,\n  scheduleOnDOMSelectionChange,\n  onDOMSelectionChange,\n}: CreateAndroidInputManagerOptions): AndroidInputManager {\n  let flushing: 'action' | boolean = false\n  let compositionEndTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let flushTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let actionTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  let idCounter = 0\n  let insertPositionHint: StringDiff | null | false = false\n\n  const applyPendingSelection = () => {\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(editor)\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n\n    if (pendingSelection) {\n      const { selection } = editor\n      const normalized = normalizeRange(editor, pendingSelection)\n\n      debug('apply pending selection', pendingSelection, normalized)\n\n      if (normalized && (!selection || !Range.equals(normalized, selection))) {\n        Transforms.select(editor, normalized)\n      }\n    }\n  }\n\n  const performAction = () => {\n    const action = EDITOR_TO_PENDING_ACTION.get(editor)\n    EDITOR_TO_PENDING_ACTION.delete(editor)\n    if (!action) {\n      return\n    }\n\n    if (action.at) {\n      const target = Point.isPoint(action.at)\n        ? normalizePoint(editor, action.at)\n        : normalizeRange(editor, action.at)\n\n      if (!target) {\n        return\n      }\n\n      const targetRange = Editor.range(editor, target)\n      if (!editor.selection || !Range.equals(editor.selection, targetRange)) {\n        Transforms.select(editor, target)\n      }\n    }\n\n    action.run()\n  }\n\n  const flush = () => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    if (actionTimeoutId) {\n      clearTimeout(actionTimeoutId)\n      actionTimeoutId = null\n    }\n\n    if (!hasPendingDiffs() && !hasPendingAction()) {\n      applyPendingSelection()\n      return\n    }\n\n    if (!flushing) {\n      flushing = true\n      setTimeout(() => (flushing = false))\n    }\n\n    if (hasPendingAction()) {\n      flushing = 'action'\n    }\n\n    const selectionRef =\n      editor.selection &&\n      Editor.rangeRef(editor, editor.selection, { affinity: 'forward' })\n    EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n\n    debug(\n      'flush',\n      EDITOR_TO_PENDING_ACTION.get(editor),\n      EDITOR_TO_PENDING_DIFFS.get(editor)\n    )\n\n    let scheduleSelectionChange = hasPendingDiffs()\n\n    let diff: TextDiff | undefined\n    while ((diff = EDITOR_TO_PENDING_DIFFS.get(editor)?.[0])) {\n      const pendingMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n\n      if (pendingMarks !== undefined) {\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n        editor.marks = pendingMarks\n      }\n\n      if (pendingMarks && insertPositionHint === false) {\n        insertPositionHint = null\n        debug('insert after mark placeholder')\n      }\n\n      const range = targetRange(diff)\n      if (!editor.selection || !Range.equals(editor.selection, range)) {\n        Transforms.select(editor, range)\n      }\n\n      if (diff.diff.text) {\n        Editor.insertText(editor, diff.diff.text)\n      } else {\n        Editor.deleteFragment(editor)\n      }\n\n      // Remove diff only after we have applied it to account for it when transforming\n      // pending ranges.\n      EDITOR_TO_PENDING_DIFFS.set(\n        editor,\n        EDITOR_TO_PENDING_DIFFS.get(editor)?.filter(\n          ({ id }) => id !== diff!.id\n        )!\n      )\n\n      if (!verifyDiffState(editor, diff)) {\n        debug('invalid diff state')\n        scheduleSelectionChange = false\n        EDITOR_TO_PENDING_ACTION.delete(editor)\n        EDITOR_TO_USER_MARKS.delete(editor)\n        flushing = 'action'\n\n        // Ensure we don't restore the pending user (dom) selection\n        // since the document and dom state do not match.\n        EDITOR_TO_PENDING_SELECTION.delete(editor)\n        scheduleOnDOMSelectionChange.cancel()\n        onDOMSelectionChange.cancel()\n        selectionRef?.unref()\n      }\n    }\n\n    const selection = selectionRef?.unref()\n    if (\n      selection &&\n      !EDITOR_TO_PENDING_SELECTION.get(editor) &&\n      (!editor.selection || !Range.equals(selection, editor.selection))\n    ) {\n      Transforms.select(editor, selection)\n    }\n\n    if (hasPendingAction()) {\n      performAction()\n      return\n    }\n\n    // COMPAT: The selectionChange event is fired after the action is performed,\n    // so we have to manually schedule it to ensure we don't 'throw away' the selection\n    // while rendering if we have pending changes.\n    if (scheduleSelectionChange) {\n      debug('scheduleOnDOMSelectionChange pending changes')\n      scheduleOnDOMSelectionChange()\n    }\n\n    scheduleOnDOMSelectionChange.flush()\n    onDOMSelectionChange.flush()\n\n    applyPendingSelection()\n\n    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n    EDITOR_TO_USER_MARKS.delete(editor)\n    if (userMarks !== undefined) {\n      editor.marks = userMarks\n      editor.onChange()\n    }\n  }\n\n  const handleCompositionEnd = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n    }\n\n    compositionEndTimeoutId = setTimeout(() => {\n      IS_COMPOSING.set(editor, false)\n      flush()\n    }, RESOLVE_DELAY)\n  }\n\n  const handleCompositionStart = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    debug('composition start')\n\n    IS_COMPOSING.set(editor, true)\n\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n      compositionEndTimeoutId = null\n    }\n  }\n\n  const updatePlaceholderVisibility = (forceHide = false) => {\n    const placeholderElement = EDITOR_TO_PLACEHOLDER_ELEMENT.get(editor)\n    if (!placeholderElement) {\n      return\n    }\n\n    if (hasPendingDiffs() || forceHide) {\n      placeholderElement.style.display = 'none'\n      return\n    }\n\n    placeholderElement.style.removeProperty('display')\n  }\n\n  const storeDiff = (path: Path, diff: StringDiff) => {\n    debug('storeDiff', path, diff)\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor) ?? []\n    EDITOR_TO_PENDING_DIFFS.set(editor, pendingDiffs)\n\n    const target = Node.leaf(editor, path)\n    const idx = pendingDiffs.findIndex(change => Path.equals(change.path, path))\n    if (idx < 0) {\n      const normalized = normalizeStringDiff(target.text, diff)\n      if (normalized) {\n        pendingDiffs.push({ path, diff, id: idCounter++ })\n      }\n\n      updatePlaceholderVisibility()\n      return\n    }\n\n    const merged = mergeStringDiffs(target.text, pendingDiffs[idx].diff, diff)\n    if (!merged) {\n      pendingDiffs.splice(idx, 1)\n      updatePlaceholderVisibility()\n      return\n    }\n\n    pendingDiffs[idx] = {\n      ...pendingDiffs[idx],\n      diff: merged,\n    }\n  }\n\n  const scheduleAction = (\n    run: () => void,\n    { at }: { at?: Point | Range } = {}\n  ): void => {\n    insertPositionHint = false\n    debug('scheduleAction', { at, run })\n\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n    scheduleOnDOMSelectionChange.cancel()\n    onDOMSelectionChange.cancel()\n\n    if (hasPendingAction()) {\n      flush()\n    }\n\n    EDITOR_TO_PENDING_ACTION.set(editor, { at, run })\n\n    // COMPAT: When deleting before a non-contenteditable element chrome only fires a beforeinput,\n    // (no input) and doesn't perform any dom mutations. Without a flush timeout we would never flush\n    // in this case and thus never actually perform the action.\n    actionTimeoutId = setTimeout(flush)\n  }\n\n  const handleDOMBeforeInput = (event: InputEvent): void => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { inputType: type } = event\n    let targetRange: Range | null = null\n    const data: DataTransfer | string | undefined =\n      (event as any).dataTransfer || event.data || undefined\n\n    if (\n      insertPositionHint !== false &&\n      type !== 'insertText' &&\n      type !== 'insertCompositionText'\n    ) {\n      insertPositionHint = false\n    }\n\n    let [nativeTargetRange] = (event as any).getTargetRanges()\n    if (nativeTargetRange) {\n      targetRange = ReactEditor.toSlateRange(editor, nativeTargetRange, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    // COMPAT: SelectionChange event is fired after the action is performed, so we\n    // have to manually get the selection here to ensure it's up-to-date.\n    const window = ReactEditor.getWindow(editor)\n    const domSelection = window.getSelection()\n    if (!targetRange && domSelection) {\n      nativeTargetRange = domSelection\n      targetRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    targetRange = targetRange ?? editor.selection\n    if (!targetRange) {\n      return\n    }\n\n    // By default, the input manager tries to store text diffs so that we can\n    // defer flushing them at a later point in time. We don't want to flush\n    // for every input event as this can be expensive. However, there are some\n    // scenarios where we cannot safely store the text diff and must instead\n    // schedule an action to let Slate normalize the editor state.\n    let canStoreDiff = true\n\n    if (type.startsWith('delete')) {\n      if (Range.isExpanded(targetRange)) {\n        const [start, end] = Range.edges(targetRange)\n        const leaf = Node.leaf(editor, start.path)\n\n        if (leaf.text.length === start.offset && end.offset === 0) {\n          const next = Editor.next(editor, {\n            at: start.path,\n            match: Text.isText,\n          })\n          if (next && Path.equals(next[1], end.path)) {\n            targetRange = { anchor: end, focus: end }\n          }\n        }\n      }\n\n      const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n      const [start, end] = Range.edges(targetRange)\n      const [leaf, path] = Editor.leaf(editor, start.path)\n\n      const diff = {\n        text: '',\n        start: start.offset,\n        end: end.offset,\n      }\n      const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n      const relevantPendingDiffs = pendingDiffs?.find(change =>\n        Path.equals(change.path, path)\n      )\n      const diffs = relevantPendingDiffs\n        ? [relevantPendingDiffs.diff, diff]\n        : [diff]\n      const text = applyStringDiff(leaf.text, ...diffs)\n\n      if (text.length === 0) {\n        // Text leaf will be removed, so we need to schedule an\n        // action to remove it so that Slate can normalize instead\n        // of storing as a diff\n        canStoreDiff = false\n      }\n\n      if (Range.isExpanded(targetRange)) {\n        if (\n          canStoreDiff &&\n          Path.equals(targetRange.anchor.path, targetRange.focus.path)\n        ) {\n          const point = { path: targetRange.anchor.path, offset: start.offset }\n          const range = Editor.range(editor, point, point)\n          handleUserSelect(range)\n\n          return storeDiff(targetRange.anchor.path, {\n            text: '',\n            end: end.offset,\n            start: start.offset,\n          })\n        }\n\n        return scheduleAction(\n          () => Editor.deleteFragment(editor, { direction }),\n          { at: targetRange }\n        )\n      }\n    }\n\n    switch (type) {\n      case 'deleteByComposition':\n      case 'deleteByCut':\n      case 'deleteByDrag': {\n        return scheduleAction(() => Editor.deleteFragment(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContent':\n      case 'deleteContentForward': {\n        const { anchor } = targetRange\n        if (canStoreDiff && Range.isCollapsed(targetRange)) {\n          const targetNode = Node.leaf(editor, anchor.path)\n\n          if (anchor.offset < targetNode.text.length) {\n            return storeDiff(anchor.path, {\n              text: '',\n              start: anchor.offset,\n              end: anchor.offset + 1,\n            })\n          }\n        }\n\n        return scheduleAction(() => Editor.deleteForward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContentBackward': {\n        const { anchor } = targetRange\n\n        // If we have a mismatch between the native and slate selection being collapsed\n        // we are most likely deleting a zero-width placeholder and thus should perform it\n        // as an action to ensure correct behavior (mostly happens with mark placeholders)\n        const nativeCollapsed = isDOMSelection(nativeTargetRange)\n          ? nativeTargetRange.isCollapsed\n          : !!nativeTargetRange?.collapsed\n\n        if (\n          canStoreDiff &&\n          nativeCollapsed &&\n          Range.isCollapsed(targetRange) &&\n          anchor.offset > 0\n        ) {\n          return storeDiff(anchor.path, {\n            text: '',\n            start: anchor.offset - 1,\n            end: anchor.offset,\n          })\n        }\n\n        return scheduleAction(() => Editor.deleteBackward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteEntireSoftLine': {\n        return scheduleAction(\n          () => {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n          },\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'insertLineBreak': {\n        return scheduleAction(() => Editor.insertSoftBreak(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'insertParagraph': {\n        return scheduleAction(() => Editor.insertBreak(editor), {\n          at: targetRange,\n        })\n      }\n      case 'insertCompositionText':\n      case 'deleteCompositionText':\n      case 'insertFromComposition':\n      case 'insertFromDrop':\n      case 'insertFromPaste':\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText': {\n        if (isDataTransfer(data)) {\n          return scheduleAction(() => ReactEditor.insertData(editor, data), {\n            at: targetRange,\n          })\n        }\n\n        let text = data ?? ''\n\n        // COMPAT: If we are writing inside a placeholder, the ime inserts the text inside\n        // the placeholder itself and thus includes the zero-width space inside edit events.\n        if (EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)) {\n          text = text.replace('\\uFEFF', '')\n        }\n\n        // Pastes from the Android clipboard will generate `insertText` events.\n        // If the copied text contains any newlines, Android will append an\n        // extra newline to the end of the copied text.\n        if (type === 'insertText' && /.*\\n.*\\n$/.test(text)) {\n          text = text.slice(0, -1)\n        }\n\n        // If the text includes a newline, split it at newlines and paste each component\n        // string, with soft breaks in between each.\n        if (text.includes('\\n')) {\n          return scheduleAction(\n            () => {\n              const parts = text.split('\\n')\n              parts.forEach((line, i) => {\n                if (line) {\n                  Editor.insertText(editor, line)\n                }\n                if (i !== parts.length - 1) {\n                  Editor.insertSoftBreak(editor)\n                }\n              })\n            },\n            {\n              at: targetRange,\n            }\n          )\n        }\n\n        if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n          const [start, end] = Range.edges(targetRange)\n\n          const diff = {\n            start: start.offset,\n            end: end.offset,\n            text,\n          }\n\n          // COMPAT: Swiftkey has a weird bug where the target range of the 2nd word\n          // inserted after a mark placeholder is inserted with an anchor offset off by 1.\n          // So writing 'some text' will result in 'some ttext'. Luckily all 'normal' insert\n          // text events are fired with the correct target ranges, only the final 'insertComposition'\n          // isn't, so we can adjust the target range start offset if we are confident this is the\n          // swiftkey insert causing the issue.\n          if (text && insertPositionHint && type === 'insertCompositionText') {\n            const hintPosition =\n              insertPositionHint.start + insertPositionHint.text.search(/\\S|$/)\n            const diffPosition = diff.start + diff.text.search(/\\S|$/)\n\n            if (\n              diffPosition === hintPosition + 1 &&\n              diff.end ===\n                insertPositionHint.start + insertPositionHint.text.length\n            ) {\n              debug('adjusting swiftKey insert position using hint')\n              diff.start -= 1\n              insertPositionHint = null\n              scheduleFlush()\n            } else {\n              insertPositionHint = false\n            }\n          } else if (type === 'insertText') {\n            if (insertPositionHint === null) {\n              insertPositionHint = diff\n            } else if (\n              insertPositionHint &&\n              Range.isCollapsed(targetRange) &&\n              insertPositionHint.end + insertPositionHint.text.length ===\n                start.offset\n            ) {\n              insertPositionHint = {\n                ...insertPositionHint,\n                text: insertPositionHint.text + text,\n              }\n            } else {\n              insertPositionHint = false\n            }\n          } else {\n            insertPositionHint = false\n          }\n\n          if (canStoreDiff) {\n            storeDiff(start.path, diff)\n            return\n          }\n        }\n\n        return scheduleAction(() => Editor.insertText(editor, text), {\n          at: targetRange,\n        })\n      }\n    }\n  }\n\n  const hasPendingAction = () => {\n    return !!EDITOR_TO_PENDING_ACTION.get(editor)\n  }\n\n  const hasPendingDiffs = () => {\n    return !!EDITOR_TO_PENDING_DIFFS.get(editor)?.length\n  }\n\n  const hasPendingChanges = () => {\n    return hasPendingAction() || hasPendingDiffs()\n  }\n\n  const isFlushing = () => {\n    return flushing\n  }\n\n  const handleUserSelect = (range: Range | null) => {\n    EDITOR_TO_PENDING_SELECTION.set(editor, range)\n\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { selection } = editor\n    if (!range) {\n      return\n    }\n\n    const pathChanged =\n      !selection || !Path.equals(selection.anchor.path, range.anchor.path)\n    const parentPathChanged =\n      !selection ||\n      !Path.equals(\n        selection.anchor.path.slice(0, -1),\n        range.anchor.path.slice(0, -1)\n      )\n\n    if ((pathChanged && insertPositionHint) || parentPathChanged) {\n      insertPositionHint = false\n    }\n\n    if (pathChanged || hasPendingDiffs()) {\n      flushTimeoutId = setTimeout(flush, FLUSH_DELAY)\n    }\n  }\n\n  const handleInput = () => {\n    if (hasPendingAction() || !hasPendingDiffs()) {\n      debug('flush input')\n      flush()\n    }\n  }\n\n  const handleKeyDown = (_: React.KeyboardEvent) => {\n    // COMPAT: Swiftkey closes the keyboard when typing inside a empty node\n    // directly next to a non-contenteditable element (= the placeholder).\n    // The only event fired soon enough for us to allow hiding the placeholder\n    // without swiftkey picking it up is the keydown event, so we have to hide it\n    // here. See https://github.com/ianstormtaylor/slate/pull/4988#issuecomment-1201050535\n    if (!hasPendingDiffs()) {\n      updatePlaceholderVisibility(true)\n      setTimeout(updatePlaceholderVisibility)\n    }\n  }\n\n  const scheduleFlush = () => {\n    if (!hasPendingAction()) {\n      actionTimeoutId = setTimeout(flush)\n    }\n  }\n\n  const handleDomMutations = (mutations: MutationRecord[]) => {\n    if (hasPendingDiffs() || hasPendingAction()) {\n      return\n    }\n\n    if (\n      mutations.some(mutation => isTrackedMutation(editor, mutation, mutations))\n    ) {\n      // Cause a re-render to restore the dom state if we encounter tracked mutations without\n      // a corresponding pending action.\n      EDITOR_TO_FORCE_RENDER.get(editor)?.()\n    }\n  }\n\n  return {\n    flush,\n    scheduleFlush,\n\n    hasPendingDiffs,\n    hasPendingAction,\n    hasPendingChanges,\n\n    isFlushing,\n\n    handleUserSelect,\n    handleCompositionEnd,\n    handleCompositionStart,\n    handleDOMBeforeInput,\n    handleKeyDown,\n\n    handleDomMutations,\n    handleInput,\n  }\n}\n","import { useEffect, useRef } from 'react'\n\nexport function useIsMounted() {\n  const isMountedRef = useRef(false)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    return () => {\n      isMountedRef.current = false\n    }\n  }, [])\n\n  return isMountedRef.current\n}\n","import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from '../utils/environment'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n","import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Discard mutations caused during render phase. This works due to react calling\n    // useLayoutEffect synchronously after the render phase before the next tick.\n    mutationObserver.takeRecords()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    mutationObserver.observe(node.current, options)\n    return () => mutationObserver.disconnect()\n  }, [mutationObserver, node, options])\n}\n","import { RefObject, useState } from 'react'\nimport { useSlateStatic } from '../use-slate-static'\nimport { IS_ANDROID } from '../../utils/environment'\nimport { EDITOR_TO_SCHEDULE_FLUSH } from '../../utils/weak-maps'\nimport {\n  createAndroidInputManager,\n  CreateAndroidInputManagerOptions,\n} from './android-input-manager'\nimport { useIsMounted } from '../use-is-mounted'\nimport { useMutationObserver } from '../use-mutation-observer'\n\ntype UseAndroidInputManagerOptions = {\n  node: RefObject<HTMLElement>\n} & Omit<\n  CreateAndroidInputManagerOptions,\n  'editor' | 'onUserInput' | 'receivedUserInput'\n>\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n}\n\nexport const useAndroidInputManager = !IS_ANDROID\n  ? () => null\n  : ({ node, ...options }: UseAndroidInputManagerOptions) => {\n      if (!IS_ANDROID) {\n        return null\n      }\n\n      const editor = useSlateStatic()\n      const isMounted = useIsMounted()\n\n      const [inputManager] = useState(() =>\n        createAndroidInputManager({\n          editor,\n          ...options,\n        })\n      )\n\n      useMutationObserver(\n        node,\n        inputManager.handleDomMutations,\n        MUTATION_OBSERVER_CONFIG\n      )\n\n      EDITOR_TO_SCHEDULE_FLUSH.set(editor, inputManager.scheduleFlush)\n      if (isMounted) {\n        inputManager.flush()\n      }\n\n      return inputManager\n    }\n","import { Range } from 'slate'\nimport { PLACEHOLDER_SYMBOL } from './weak-maps'\n\nexport const shallowCompare = (\n  obj1: { [key: string]: unknown },\n  obj2: { [key: string]: unknown }\n) =>\n  Object.keys(obj1).length === Object.keys(obj2).length &&\n  Object.keys(obj1).every(\n    key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]\n  )\n\nconst isDecorationFlagsEqual = (range: Range, other: Range) => {\n  const { anchor: rangeAnchor, focus: rangeFocus, ...rangeOwnProps } = range\n  const { anchor: otherAnchor, focus: otherFocus, ...otherOwnProps } = other\n\n  return (\n    range[PLACEHOLDER_SYMBOL] === other[PLACEHOLDER_SYMBOL] &&\n    shallowCompare(rangeOwnProps, otherOwnProps)\n  )\n}\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isElementDecorationsEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    if (!Range.equals(range, other) || !isDecorationFlagsEqual(range, other)) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isTextDecorationsEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    // compare only offsets because paths doesn't matter for text\n    if (\n      range.anchor.offset !== other.anchor.offset ||\n      range.focus.offset !== other.focus.offset ||\n      !isDecorationFlagsEqual(range, other)\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n","import React, { forwardRef, memo, useRef, useState } from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { IS_ANDROID } from '../utils/environment'\nimport { MARK_PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n  const isMarkPlaceholder = Boolean(leaf[MARK_PLACEHOLDER_SYMBOL])\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n  const ref = useRef<HTMLSpanElement>(null)\n  const getTextContent = () => {\n    return `${text ?? ''}${isTrailing ? '\\n' : ''}`\n  }\n  const [initialText] = useState(getTextContent)\n\n  // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n\n  // useLayoutEffect: updating our span before browser paint\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    const textWithTrailing = getTextContent()\n\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing\n    }\n\n    // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  })\n\n  // We intentionally render a memoized <span> that only receives the initial text content when the component is mounted.\n  // We defer to the layout effect above to update the `textContent` of the span element when needed.\n  return <MemoizedText ref={ref}>{initialText}</MemoizedText>\n}\n\nconst MemoizedText = memo(\n  forwardRef<HTMLSpanElement, { children: string }>((props, ref) => {\n    return (\n      <span data-slate-string ref={ref}>\n        {props.children}\n      </span>\n    )\n  })\n)\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nexport const ZeroWidthString = (props: {\n  length?: number\n  isLineBreak?: boolean\n  isMarkPlaceholder?: boolean\n}) => {\n  const { length = 0, isLineBreak = false, isMarkPlaceholder = false } = props\n\n  const attributes: {\n    'data-slate-zero-width': string\n    'data-slate-length': number\n    'data-slate-mark-placeholder'?: boolean\n  } = {\n    'data-slate-zero-width': isLineBreak ? 'n' : 'z',\n    'data-slate-length': length,\n  }\n\n  if (isMarkPlaceholder) {\n    attributes['data-slate-mark-placeholder'] = true\n  }\n\n  return (\n    <span {...attributes}>\n      {!IS_ANDROID || !isLineBreak ? '\\uFEFF' : null}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n","import React, {\n  useRef,\n  useCallback,\n  MutableRefObject,\n  useState,\n  useEffect,\n} from 'react'\nimport { JSX } from 'react'\nimport { Element, Text } from 'slate'\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer'\nimport String from './string'\nimport {\n  PLACEHOLDER_SYMBOL,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n} from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useSlateStatic } from '../hooks/use-slate-static'\nimport { IS_WEBKIT, IS_ANDROID } from '../utils/environment'\n\n// Delay the placeholder on Android to prevent the keyboard from closing.\n// (https://github.com/ianstormtaylor/slate/pull/5368)\nconst PLACEHOLDER_DELAY = IS_ANDROID ? 300 : 0\n\nfunction disconnectPlaceholderResizeObserver(\n  placeholderResizeObserver: MutableRefObject<ResizeObserver | null>,\n  releaseObserver: boolean\n) {\n  if (placeholderResizeObserver.current) {\n    placeholderResizeObserver.current.disconnect()\n    if (releaseObserver) {\n      placeholderResizeObserver.current = null\n    }\n  }\n}\n\ntype TimerId = ReturnType<typeof setTimeout> | null\n\nfunction clearTimeoutRef(timeoutRef: MutableRefObject<TimerId>) {\n  if (timeoutRef.current) {\n    clearTimeout(timeoutRef.current)\n    timeoutRef.current = null\n  }\n}\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  const editor = useSlateStatic()\n  const placeholderResizeObserver = useRef<ResizeObserver | null>(null)\n  const placeholderRef = useRef<HTMLElement | null>(null)\n  const [showPlaceholder, setShowPlaceholder] = useState(false)\n  const showPlaceholderTimeoutRef = useRef<TimerId>(null)\n\n  const callbackPlaceholderRef = useCallback(\n    (placeholderEl: HTMLElement | null) => {\n      disconnectPlaceholderResizeObserver(\n        placeholderResizeObserver,\n        placeholderEl == null\n      )\n\n      if (placeholderEl == null) {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor)\n        leaf.onPlaceholderResize?.(null)\n      } else {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.set(editor, placeholderEl)\n\n        if (!placeholderResizeObserver.current) {\n          // Create a new observer and observe the placeholder element.\n          const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill\n          placeholderResizeObserver.current = new ResizeObserver(() => {\n            leaf.onPlaceholderResize?.(placeholderEl)\n          })\n        }\n        placeholderResizeObserver.current.observe(placeholderEl)\n        placeholderRef.current = placeholderEl\n      }\n    },\n    [placeholderRef, leaf, editor]\n  )\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  const leafIsPlaceholder = Boolean(leaf[PLACEHOLDER_SYMBOL])\n  useEffect(() => {\n    if (leafIsPlaceholder) {\n      if (!showPlaceholderTimeoutRef.current) {\n        // Delay the placeholder, so it will not render in a selection\n        showPlaceholderTimeoutRef.current = setTimeout(() => {\n          setShowPlaceholder(true)\n          showPlaceholderTimeoutRef.current = null\n        }, PLACEHOLDER_DELAY)\n      }\n    } else {\n      clearTimeoutRef(showPlaceholderTimeoutRef)\n      setShowPlaceholder(false)\n    }\n    return () => clearTimeoutRef(showPlaceholderTimeoutRef)\n  }, [leafIsPlaceholder, setShowPlaceholder])\n\n  if (leafIsPlaceholder && showPlaceholder) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          top: 0,\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n          // Fixes https://github.com/udecode/plate/issues/2315\n          WebkitUserModify: IS_WEBKIT ? 'inherit' : undefined,\n        },\n        contentEditable: false,\n        ref: callbackPlaceholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {renderPlaceholder(placeholderProps)}\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n","import React, { useCallback, useRef } from 'react'\nimport { Element, Range, Text as SlateText } from 'slate'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { isTextDecorationsEqual } from '../utils/range-list'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport Leaf from './leaf'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: Range[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const { decorations, isLast, parent, renderPlaceholder, renderLeaf, text } =\n    props\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement | null>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  const callbackRef = useCallback(\n    (span: HTMLSpanElement | null) => {\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (span) {\n        KEY_TO_ELEMENT?.set(key, span)\n        NODE_TO_ELEMENT.set(text, span)\n        ELEMENT_TO_NODE.set(span, text)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(text)\n        if (ref.current) {\n          ELEMENT_TO_NODE.delete(ref.current)\n        }\n      }\n      ref.current = span\n    },\n    [ref, editor, key, text]\n  )\n  return (\n    <span data-slate-node=\"text\" ref={callbackRef}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    isTextDecorationsEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport default MemoizedText\n","import getDirection from 'direction'\nimport React, { useCallback } from 'react'\nimport { JSX } from 'react'\nimport { Editor, Element as SlateElement, Node, Range } from 'slate'\nimport { ReactEditor, useReadOnly, useSlateStatic } from '..'\nimport useChildren from '../hooks/use-children'\nimport { isElementDecorationsEqual } from '../utils/range-list'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n  NODE_TO_INDEX,\n  NODE_TO_PARENT,\n} from '../utils/weak-maps'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from './editable'\n\nimport Text from './text'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: Range[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n  const ref = useCallback(\n    (ref: HTMLElement | null) => {\n      // Update element-related weak maps with the DOM element ref.\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (ref) {\n        KEY_TO_ELEMENT?.set(key, ref)\n        NODE_TO_ELEMENT.set(element, ref)\n        ELEMENT_TO_NODE.set(ref, element)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(element)\n      }\n    },\n    [editor, key, element]\n  )\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  return renderElement({ attributes, children, element })\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    prev.renderPlaceholder === next.renderPlaceholder &&\n    isElementDecorationsEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n","import { createContext, useContext } from 'react'\nimport { Range, NodeEntry } from 'slate'\n\n/**\n * A React context for sharing the `decorate` prop of the editable.\n */\n\nexport const DecorateContext = createContext<(entry: NodeEntry) => Range[]>(\n  () => []\n)\n\n/**\n * Get the current `decorate` prop of the editable.\n */\n\nexport const useDecorate = (): ((entry: NodeEntry) => Range[]) => {\n  return useContext(DecorateContext)\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n","import React from 'react'\nimport { Ancestor, Descendant, Editor, Element, Range } from 'slate'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from '../components/editable'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\nimport { useDecorate } from './use-decorate'\nimport { SelectedContext } from './use-selected'\nimport { useSlateStatic } from './use-slate-static'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: Range[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const decorate = useDecorate()\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n    const ds = decorate([n, p])\n\n    for (const dec of decorations) {\n      const d = Range.intersection(dec, range)\n\n      if (d) {\n        ds.push(d)\n      }\n    }\n\n    if (Element.isElement(n)) {\n      children.push(\n        <SelectedContext.Provider key={`provider-${key.id}`} value={!!sel}>\n          <ElementComponent\n            decorations={ds}\n            element={n}\n            key={key.id}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={sel}\n          />\n        </SelectedContext.Provider>\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderPlaceholder={renderPlaceholder}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return children\n}\n\nexport default useChildren\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n","import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport interface SlateContextValue {\n  v: number\n  editor: ReactEditor\n}\n\nexport const SlateContext = createContext<{\n  v: number\n  editor: ReactEditor\n} | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = (): Editor => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  const { editor } = context\n  return editor\n}\n\nexport const useSlateWithV = () => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return context\n}\n","import { useCallback, useEffect, useRef } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useSlateStatic } from './use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameIdRef = useRef<number>(0)\n\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current) {\n      return\n    }\n\n    receivedUserInput.current = true\n\n    const window = ReactEditor.getWindow(editor)\n    window.cancelAnimationFrame(animationFrameIdRef.current)\n\n    animationFrameIdRef.current = window.requestAnimationFrame(() => {\n      receivedUserInput.current = false\n    })\n  }, [editor])\n\n  useEffect(() => () => cancelAnimationFrame(animationFrameIdRef.current), [])\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n","export const TRIPLE_CLICK = 3\n","import { isHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[<keyof typeof HOTKEYS>key]\n  const apple = APPLE_HOTKEYS[<keyof typeof APPLE_HOTKEYS>key]\n  const windows = WINDOWS_HOTKEYS[<keyof typeof WINDOWS_HOTKEYS>key]\n  const isGeneric = generic && isHotkey(generic)\n  const isApple = apple && isHotkey(apple)\n  const isWindows = windows && isHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n","import { RefObject } from 'react'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport { isTrackedMutation } from '../../utils/dom'\n\nexport type RestoreDOMManager = {\n  registerMutations: (mutations: MutationRecord[]) => void\n  restoreDOM: () => void\n  clear: () => void\n}\n\nexport const createRestoreDomManager = (\n  editor: ReactEditor,\n  receivedUserInput: RefObject<boolean>\n): RestoreDOMManager => {\n  let bufferedMutations: MutationRecord[] = []\n\n  const clear = () => {\n    bufferedMutations = []\n  }\n\n  const registerMutations = (mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    const trackedMutations = mutations.filter(mutation =>\n      isTrackedMutation(editor, mutation, mutations)\n    )\n\n    bufferedMutations.push(...trackedMutations)\n  }\n\n  function restoreDOM() {\n    if (bufferedMutations.length > 0) {\n      bufferedMutations.reverse().forEach(mutation => {\n        if (mutation.type === 'characterData') {\n          // We don't want to restore the DOM for characterData mutations\n          // because this interrupts the composition.\n          return\n        }\n\n        mutation.removedNodes.forEach(node => {\n          mutation.target.insertBefore(node, mutation.nextSibling)\n        })\n\n        mutation.addedNodes.forEach(node => {\n          mutation.target.removeChild(node)\n        })\n      })\n\n      // Clear buffered mutations to ensure we don't undo them twice\n      clear()\n    }\n  }\n\n  return {\n    registerMutations,\n    restoreDOM,\n    clear,\n  }\n}\n","import React, {\n  Component,\n  ComponentType,\n  ContextType,\n  ReactNode,\n  RefObject,\n} from 'react'\nimport { EditorContext } from '../../hooks/use-slate-static'\nimport { IS_ANDROID } from '../../utils/environment'\nimport {\n  createRestoreDomManager,\n  RestoreDOMManager,\n} from './restore-dom-manager'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n}\n\ntype RestoreDOMProps = {\n  children?: ReactNode\n  receivedUserInput: RefObject<boolean>\n  node: RefObject<HTMLDivElement>\n}\n\n// We have to use a class component here since we rely on `getSnapshotBeforeUpdate` which has no FC equivalent\n// to run code synchronously immediately before react commits the component update to the DOM.\nclass RestoreDOMComponent extends Component<RestoreDOMProps> {\n  static contextType = EditorContext\n  context: ContextType<typeof EditorContext> = null\n\n  private manager: RestoreDOMManager | null = null\n  private mutationObserver: MutationObserver | null = null\n\n  observe() {\n    const { node } = this.props\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    this.mutationObserver?.observe(node.current, MUTATION_OBSERVER_CONFIG)\n  }\n\n  componentDidMount() {\n    const { receivedUserInput } = this.props\n    const editor = this.context!\n\n    this.manager = createRestoreDomManager(editor, receivedUserInput)\n    this.mutationObserver = new MutationObserver(this.manager.registerMutations)\n\n    this.observe()\n  }\n\n  getSnapshotBeforeUpdate() {\n    const pendingMutations = this.mutationObserver?.takeRecords()\n    if (pendingMutations?.length) {\n      this.manager?.registerMutations(pendingMutations)\n    }\n\n    this.mutationObserver?.disconnect()\n    this.manager?.restoreDOM()\n\n    return null\n  }\n\n  componentDidUpdate() {\n    this.manager?.clear()\n    this.observe()\n  }\n\n  componentWillUnmount() {\n    this.mutationObserver?.disconnect()\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport const RestoreDOM: ComponentType<RestoreDOMProps> = IS_ANDROID\n  ? RestoreDOMComponent\n  : ({ children }) => <>{children}</>\n","import getDirection from 'direction'\nimport debounce from 'lodash/debounce'\nimport throttle from 'lodash/throttle'\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react'\nimport { JSX } from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {\n  Editor,\n  Element,\n  Node,\n  NodeEntry,\n  Path,\n  Range,\n  Text,\n  Transforms,\n} from 'slate'\nimport { useAndroidInputManager } from '../hooks/android-input-manager/use-android-input-manager'\nimport useChildren from '../hooks/use-children'\nimport { DecorateContext } from '../hooks/use-decorate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { useTrackUserInput } from '../hooks/use-track-user-input'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { TRIPLE_CLICK } from '../utils/constants'\nimport {\n  DOMElement,\n  DOMRange,\n  DOMText,\n  getDefaultView,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n} from '../utils/dom'\nimport {\n  CAN_USE_DOM,\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_ANDROID,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_IOS,\n  IS_WEBKIT,\n  IS_UC_MOBILE,\n  IS_WECHATBROWSER,\n} from '../utils/environment'\nimport Hotkeys from '../utils/hotkeys'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  MARK_PLACEHOLDER_SYMBOL,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n} from '../utils/weak-maps'\nimport { RestoreDOM } from './restore-dom/restore-dom'\nimport { AndroidInputManager } from '../hooks/android-input-manager/android-input-manager'\n\ntype DeferredOperation = () => void\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => Range[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n  disableDefaultStyles?: boolean\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = (props: EditableProps) => {\n  const defaultRenderPlaceholder = useCallback(\n    (props: RenderPlaceholderProps) => <DefaultPlaceholder {...props} />,\n    []\n  )\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = defaultRenderPlaceholder,\n    scrollSelectionIntoView = defaultScrollSelectionIntoView,\n    style: userStyle = {},\n    as: Component = 'div',\n    disableDefaultStyles = false,\n    ...attributes\n  } = props\n  const editor = useSlate()\n  // Rerender editor when composition status changed\n  const [isComposing, setIsComposing] = useState(false)\n  const ref = useRef<HTMLDivElement | null>(null)\n  const deferredOperations = useRef<DeferredOperation[]>([])\n  const [placeholderHeight, setPlaceholderHeight] = useState<\n    number | undefined\n  >()\n\n  const { onUserInput, receivedUserInput } = useTrackUserInput()\n\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  EDITOR_TO_FORCE_RENDER.set(editor, forceRender)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isDraggingInternally: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n      hasMarkPlaceholder: false,\n    }),\n    []\n  )\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  /**\n   * The AndroidInputManager object has a cyclical dependency on onDOMSelectionChange\n   *\n   * It is defined as a reference to simplify hook dependencies and clarify that\n   * it needs to be initialized.\n   */\n  const androidInputManagerRef = useRef<\n    AndroidInputManager | null | undefined\n  >()\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useMemo(\n    () =>\n      throttle(() => {\n        const androidInputManager = androidInputManagerRef.current\n        if (\n          (IS_ANDROID || !ReactEditor.isComposing(editor)) &&\n          (!state.isUpdatingSelection || androidInputManager?.isFlushing()) &&\n          !state.isDraggingInternally\n        ) {\n          const root = ReactEditor.findDocumentOrShadowRoot(editor)\n          const { activeElement } = root\n          const el = ReactEditor.toDOMNode(editor, editor)\n          const domSelection = root.getSelection()\n\n          if (activeElement === el) {\n            state.latestElement = activeElement\n            IS_FOCUSED.set(editor, true)\n          } else {\n            IS_FOCUSED.delete(editor)\n          }\n\n          if (!domSelection) {\n            return Transforms.deselect(editor)\n          }\n\n          const { anchorNode, focusNode } = domSelection\n\n          const anchorNodeSelectable =\n            ReactEditor.hasEditableTarget(editor, anchorNode) ||\n            ReactEditor.isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n          const focusNodeSelectable =\n            ReactEditor.hasEditableTarget(editor, focusNode) ||\n            ReactEditor.isTargetInsideNonReadonlyVoid(editor, focusNode)\n\n          if (anchorNodeSelectable && focusNodeSelectable) {\n            const range = ReactEditor.toSlateRange(editor, domSelection, {\n              exactMatch: false,\n              suppressThrow: true,\n            })\n\n            if (range) {\n              if (\n                !ReactEditor.isComposing(editor) &&\n                !androidInputManager?.hasPendingChanges() &&\n                !androidInputManager?.isFlushing()\n              ) {\n                Transforms.select(editor, range)\n              } else {\n                androidInputManager?.handleUserSelect(range)\n              }\n            }\n          }\n\n          // Deselect the editor if the dom selection is not selectable in readonly mode\n          if (readOnly && (!anchorNodeSelectable || !focusNodeSelectable)) {\n            Transforms.deselect(editor)\n          }\n        }\n      }, 100),\n    [editor, readOnly, state]\n  )\n\n  const scheduleOnDOMSelectionChange = useMemo(\n    () => debounce(onDOMSelectionChange, 0),\n    [onDOMSelectionChange]\n  )\n\n  androidInputManagerRef.current = useAndroidInputManager({\n    node: ref,\n    onDOMSelectionChange,\n    scheduleOnDOMSelectionChange,\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    // Make sure the DOM selection state is in sync.\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (\n      !domSelection ||\n      !ReactEditor.isFocused(editor) ||\n      androidInputManagerRef.current?.hasPendingAction()\n    ) {\n      return\n    }\n\n    const setDomSelection = (forceChange?: boolean) => {\n      const hasDomSelection = domSelection.type !== 'None'\n\n      // If the DOM selection is properly unset, we're done.\n      if (!selection && !hasDomSelection) {\n        return\n      }\n\n      // Get anchorNode and focusNode\n      const focusNode = domSelection.focusNode\n      let anchorNode\n\n      // COMPAT: In firefox the normal seletion way does not work\n      // (https://github.com/ianstormtaylor/slate/pull/5486#issue-1820720223)\n      if (IS_FIREFOX && domSelection.rangeCount > 1) {\n        const firstRange = domSelection.getRangeAt(0)\n        const lastRange = domSelection.getRangeAt(domSelection.rangeCount - 1)\n\n        // Right to left\n        if (firstRange.startContainer === focusNode) {\n          anchorNode = lastRange.endContainer\n        } else {\n          // Left to right\n          anchorNode = firstRange.startContainer\n        }\n      } else {\n        anchorNode = domSelection.anchorNode\n      }\n\n      // verify that the dom selection is in the editor\n      const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n      let hasDomSelectionInEditor = false\n      if (\n        editorElement.contains(anchorNode) &&\n        editorElement.contains(focusNode)\n      ) {\n        hasDomSelectionInEditor = true\n      }\n\n      // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n      if (\n        hasDomSelection &&\n        hasDomSelectionInEditor &&\n        selection &&\n        !forceChange\n      ) {\n        const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n\n          // domSelection is not necessarily a valid Slate range\n          // (e.g. when clicking on contentEditable:false element)\n          suppressThrow: true,\n        })\n\n        if (slateRange && Range.equals(slateRange, selection)) {\n          if (!state.hasMarkPlaceholder) {\n            return\n          }\n\n          // Ensure selection is inside the mark placeholder\n          if (\n            anchorNode?.parentElement?.hasAttribute(\n              'data-slate-mark-placeholder'\n            )\n          ) {\n            return\n          }\n        }\n      }\n\n      // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: true,\n        })\n        return\n      }\n\n      // Otherwise the DOM selection is out of sync, so update it.\n      state.isUpdatingSelection = true\n\n      const newDomRange: DOMRange | null =\n        selection && ReactEditor.toDOMRange(editor, selection)\n\n      if (newDomRange) {\n        if (ReactEditor.isComposing(editor) && !IS_ANDROID) {\n          domSelection.collapseToEnd()\n        } else if (Range.isBackward(selection!)) {\n          domSelection.setBaseAndExtent(\n            newDomRange.endContainer,\n            newDomRange.endOffset,\n            newDomRange.startContainer,\n            newDomRange.startOffset\n          )\n        } else {\n          domSelection.setBaseAndExtent(\n            newDomRange.startContainer,\n            newDomRange.startOffset,\n            newDomRange.endContainer,\n            newDomRange.endOffset\n          )\n        }\n        scrollSelectionIntoView(editor, newDomRange)\n      } else {\n        domSelection.removeAllRanges()\n      }\n\n      return newDomRange\n    }\n\n    // In firefox if there is more then 1 range and we call setDomSelection we remove the ability to select more cells in a table\n    if (domSelection.rangeCount <= 1) {\n      setDomSelection()\n    }\n\n    const ensureSelection =\n      androidInputManagerRef.current?.isFlushing() === 'action'\n\n    if (!IS_ANDROID || !ensureSelection) {\n      setTimeout(() => {\n        state.isUpdatingSelection = false\n      })\n      return\n    }\n\n    let timeoutId: ReturnType<typeof setTimeout> | null = null\n    const animationFrameId = requestAnimationFrame(() => {\n      if (ensureSelection) {\n        const ensureDomSelection = (forceChange?: boolean) => {\n          try {\n            const el = ReactEditor.toDOMNode(editor, editor)\n            el.focus()\n\n            setDomSelection(forceChange)\n          } catch (e) {\n            // Ignore, dom and state might be out of sync\n          }\n        }\n\n        // Compat: Android IMEs try to force their selection by manually re-applying it even after we set it.\n        // This essentially would make setting the slate selection during an update meaningless, so we force it\n        // again here. We can't only do it in the setTimeout after the animation frame since that would cause a\n        // visible flicker.\n        ensureDomSelection()\n\n        timeoutId = setTimeout(() => {\n          // COMPAT: While setting the selection in an animation frame visually correctly sets the selection,\n          // it doesn't update GBoards spellchecker state. We have to manually trigger a selection change after\n          // the animation frame to ensure it displays the correct state.\n          ensureDomSelection(true)\n          state.isUpdatingSelection = false\n        })\n      }\n    })\n\n    return () => {\n      cancelAnimationFrame(animationFrameId)\n      if (timeoutId) {\n        clearTimeout(timeoutId)\n      }\n    }\n  })\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      onUserInput()\n\n      if (\n        !readOnly &&\n        ReactEditor.hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        // COMPAT: BeforeInput events aren't cancelable on android, so we have to handle them differently using the android input manager.\n        if (androidInputManagerRef.current) {\n          return androidInputManagerRef.current.handleDOMBeforeInput(event)\n        }\n\n        // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n        // triggering a `beforeinput` expecting the change to be applied to the immediately before\n        // set selection.\n        scheduleOnDOMSelectionChange.flush()\n        onDOMSelectionChange.flush()\n\n        const { selection } = editor\n        const { inputType: type } = event\n        const data = (event as any).dataTransfer || event.data || undefined\n\n        const isCompositionChange =\n          type === 'insertCompositionText' || type === 'deleteCompositionText'\n\n        // COMPAT: use composition change events as a hint to where we should insert\n        // composition text if we aren't composing to work around https://github.com/ianstormtaylor/slate/issues/5038\n        if (isCompositionChange && ReactEditor.isComposing(editor)) {\n          return\n        }\n\n        let native = false\n        if (\n          type === 'insertText' &&\n          selection &&\n          Range.isCollapsed(selection) &&\n          // Only use native character insertion for single characters a-z or space for now.\n          // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n          // causes duplicate inserts.\n          event.data &&\n          event.data.length === 1 &&\n          /[a-z ]/i.test(event.data) &&\n          // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n          // When there is an inline element, e.g. a link, and you select\n          // right after it (the start of the next node).\n          selection.anchor.offset !== 0\n        ) {\n          native = true\n\n          // Skip native if there are marks, as\n          // `insertText` will insert a node, not just text.\n          if (editor.marks) {\n            native = false\n          }\n\n          // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n          // Therefore we don't allow native events to insert text at the end of anchor nodes.\n          const { anchor } = selection\n\n          const [node, offset] = ReactEditor.toDOMPoint(editor, anchor)\n          const anchorNode = node.parentElement?.closest('a')\n\n          const window = ReactEditor.getWindow(editor)\n\n          if (\n            native &&\n            anchorNode &&\n            ReactEditor.hasDOMNode(editor, anchorNode)\n          ) {\n            // Find the last text node inside the anchor.\n            const lastText = window?.document\n              .createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT)\n              .lastChild() as DOMText | null\n\n            if (lastText === node && lastText.textContent?.length === offset) {\n              native = false\n            }\n          }\n\n          // Chrome has issues with the presence of tab characters inside elements with whiteSpace = 'pre'\n          // causing abnormal insert behavior: https://bugs.chromium.org/p/chromium/issues/detail?id=1219139\n          if (\n            native &&\n            node.parentElement &&\n            window?.getComputedStyle(node.parentElement)?.whiteSpace === 'pre'\n          ) {\n            const block = Editor.above(editor, {\n              at: anchor.path,\n              match: n => Element.isElement(n) && Editor.isBlock(editor, n),\n            })\n\n            if (block && Node.string(block[0]).includes('\\t')) {\n              native = false\n            }\n          }\n        }\n\n        // COMPAT: For the deleting forward/backward input types we don't want\n        // to change the selection because it is the range that will be deleted,\n        // and those commands determine that for themselves.\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n          const [targetRange] = (event as any).getTargetRanges()\n\n          if (targetRange) {\n            const range = ReactEditor.toSlateRange(editor, targetRange, {\n              exactMatch: false,\n              suppressThrow: false,\n            })\n\n            if (!selection || !Range.equals(selection, range)) {\n              native = false\n\n              const selectionRef =\n                !isCompositionChange &&\n                editor.selection &&\n                Editor.rangeRef(editor, editor.selection)\n\n              Transforms.select(editor, range)\n\n              if (selectionRef) {\n                EDITOR_TO_USER_SELECTION.set(editor, selectionRef)\n              }\n            }\n          }\n        }\n\n        // Composition change types occur while a user is composing text and can't be\n        // cancelled. Let them through and wait for the composition to end.\n        if (isCompositionChange) {\n          return\n        }\n\n        if (!native) {\n          event.preventDefault()\n        }\n\n        // COMPAT: If the selection is expanded, even if the command seems like\n        // a delete forward/backward command it should delete the selection.\n        if (\n          selection &&\n          Range.isExpanded(selection) &&\n          type.startsWith('delete')\n        ) {\n          const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n          Editor.deleteFragment(editor, { direction })\n          return\n        }\n\n        switch (type) {\n          case 'deleteByComposition':\n          case 'deleteByCut':\n          case 'deleteByDrag': {\n            Editor.deleteFragment(editor)\n            break\n          }\n\n          case 'deleteContent':\n          case 'deleteContentForward': {\n            Editor.deleteForward(editor)\n            break\n          }\n\n          case 'deleteContentBackward': {\n            Editor.deleteBackward(editor)\n            break\n          }\n\n          case 'deleteEntireSoftLine': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineForward': {\n            Editor.deleteForward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineForward': {\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteWordBackward': {\n            Editor.deleteBackward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'deleteWordForward': {\n            Editor.deleteForward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'insertLineBreak':\n            Editor.insertSoftBreak(editor)\n            break\n\n          case 'insertParagraph': {\n            Editor.insertBreak(editor)\n            break\n          }\n\n          case 'insertFromComposition':\n          case 'insertFromDrop':\n          case 'insertFromPaste':\n          case 'insertFromYank':\n          case 'insertReplacementText':\n          case 'insertText': {\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              if (ReactEditor.isComposing(editor)) {\n                setIsComposing(false)\n                IS_COMPOSING.set(editor, false)\n              }\n            }\n\n            // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n            if (data?.constructor.name === 'DataTransfer') {\n              ReactEditor.insertData(editor, data)\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() =>\n                  Editor.insertText(editor, data)\n                )\n              } else {\n                Editor.insertText(editor, data)\n              }\n            }\n\n            break\n          }\n        }\n\n        // Restore the actual user section if nothing manually set it.\n        const toRestore = EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(editor)\n\n        if (\n          toRestore &&\n          (!editor.selection || !Range.equals(editor.selection, toRestore))\n        ) {\n          Transforms.select(editor, toRestore)\n        }\n      }\n    },\n    [\n      editor,\n      onDOMSelectionChange,\n      onUserInput,\n      propsOnDOMBeforeInput,\n      readOnly,\n      scheduleOnDOMSelectionChange,\n    ]\n  )\n\n  const callbackRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      if (node == null) {\n        onDOMSelectionChange.cancel()\n        scheduleOnDOMSelectionChange.cancel()\n\n        EDITOR_TO_ELEMENT.delete(editor)\n        NODE_TO_ELEMENT.delete(editor)\n\n        if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n          // @ts-ignore The `beforeinput` event isn't recognized.\n          ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n        }\n      } else {\n        // Attach a native DOM event handler for `beforeinput` events, because React's\n        // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n        // real `beforeinput` events sadly... (2019/11/04)\n        // https://github.com/facebook/react/issues/11211\n        if (HAS_BEFORE_INPUT_SUPPORT) {\n          // @ts-ignore The `beforeinput` event isn't recognized.\n          node.addEventListener('beforeinput', onDOMBeforeInput)\n        }\n      }\n\n      ref.current = node\n    },\n    [\n      onDOMSelectionChange,\n      scheduleOnDOMSelectionChange,\n      editor,\n      onDOMBeforeInput,\n    ]\n  )\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n\n    window.document.addEventListener(\n      'selectionchange',\n      scheduleOnDOMSelectionChange\n    )\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        scheduleOnDOMSelectionChange\n      )\n    }\n  }, [scheduleOnDOMSelectionChange])\n\n  const decorations = decorate([editor, []])\n\n  const showPlaceholder =\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === '' &&\n    !isComposing\n\n  const placeHolderResizeHandler = useCallback(\n    (placeholderEl: HTMLElement | null) => {\n      if (placeholderEl && showPlaceholder) {\n        setPlaceholderHeight(placeholderEl.getBoundingClientRect()?.height)\n      } else {\n        setPlaceholderHeight(undefined)\n      }\n    },\n    [showPlaceholder]\n  )\n\n  if (showPlaceholder) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      onPlaceholderResize: placeHolderResizeHandler,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  const { marks } = editor\n  state.hasMarkPlaceholder = false\n\n  if (editor.selection && Range.isCollapsed(editor.selection) && marks) {\n    const { anchor } = editor.selection\n    const leaf = Node.leaf(editor, anchor.path)\n    const { text, ...rest } = leaf\n\n    // While marks isn't a 'complete' text, we can still use loose Text.equals\n    // here which only compares marks anyway.\n    if (!Text.equals(leaf, marks as Text, { loose: true })) {\n      state.hasMarkPlaceholder = true\n\n      const unset = Object.fromEntries(\n        Object.keys(rest).map(mark => [mark, null])\n      )\n\n      decorations.push({\n        [MARK_PLACEHOLDER_SYMBOL]: true,\n        ...unset,\n        ...marks,\n\n        anchor,\n        focus: anchor,\n      })\n    }\n  }\n\n  // Update EDITOR_TO_MARK_PLACEHOLDER_MARKS in setTimeout useEffect to ensure we don't set it\n  // before we receive the composition end event.\n  useEffect(() => {\n    setTimeout(() => {\n      const { selection } = editor\n      if (selection) {\n        const { anchor } = selection\n        const text = Node.leaf(editor, anchor.path)\n\n        // While marks isn't a 'complete' text, we can still use loose Text.equals\n        // here which only compares marks anyway.\n        if (marks && !Text.equals(text, marks as Text, { loose: true })) {\n          EDITOR_TO_PENDING_INSERTION_MARKS.set(editor, marks)\n          return\n        }\n      }\n\n      EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n    })\n  })\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <RestoreDOM node={ref} receivedUserInput={receivedUserInput}>\n          <Component\n            role={readOnly ? undefined : 'textbox'}\n            aria-multiline={readOnly ? undefined : true}\n            {...attributes}\n            // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n            // have to use hacks to make these replacement-based features work.\n            // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n            // mismatch warning app moves to browser. Pass-through consumer props when\n            // not CAN_USE_DOM (SSR) and default to falsy value\n            spellCheck={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.spellCheck\n                : false\n            }\n            autoCorrect={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.autoCorrect\n                : 'false'\n            }\n            autoCapitalize={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.autoCapitalize\n                : 'false'\n            }\n            data-slate-editor\n            data-slate-node=\"value\"\n            // explicitly set this\n            contentEditable={!readOnly}\n            // in some cases, a decoration needs access to the range / selection to decorate a text node,\n            // then you will select the whole text node when you select part the of text\n            // this magic zIndex=\"-1\" will fix it\n            zindex={-1}\n            suppressContentEditableWarning\n            ref={callbackRef}\n            style={{\n              ...(disableDefaultStyles\n                ? {}\n                : {\n                    // Allow positioning relative to the editable element.\n                    position: 'relative',\n                    // Preserve adjacent whitespace and new lines.\n                    whiteSpace: 'pre-wrap',\n                    // Allow words to break if they are too long.\n                    wordWrap: 'break-word',\n                    // Make the minimum height that of the placeholder.\n                    ...(placeholderHeight\n                      ? { minHeight: placeholderHeight }\n                      : {}),\n                  }),\n              // Allow for passed-in styles to override anything.\n              ...userStyle,\n            }}\n            onBeforeInput={useCallback(\n              (event: React.FormEvent<HTMLDivElement>) => {\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to React's leaky polyfill instead just for it. It\n                // only works for the `insertText` input type.\n                if (\n                  !HAS_BEFORE_INPUT_SUPPORT &&\n                  !readOnly &&\n                  !isEventHandled(event, attributes.onBeforeInput) &&\n                  ReactEditor.hasSelectableTarget(editor, event.target)\n                ) {\n                  event.preventDefault()\n                  if (!ReactEditor.isComposing(editor)) {\n                    const text = (event as any).data as string\n                    Editor.insertText(editor, text)\n                  }\n                }\n              },\n              [attributes.onBeforeInput, editor, readOnly]\n            )}\n            onInput={useCallback(\n              (event: React.FormEvent<HTMLDivElement>) => {\n                if (isEventHandled(event, attributes.onInput)) {\n                  return\n                }\n\n                if (androidInputManagerRef.current) {\n                  androidInputManagerRef.current.handleInput()\n                  return\n                }\n\n                // Flush native operations, as native events will have propogated\n                // and we can correctly compare DOM text values in components\n                // to stop rendering, so that browser functions like autocorrect\n                // and spellcheck work as expected.\n                for (const op of deferredOperations.current) {\n                  op()\n                }\n                deferredOperations.current = []\n              },\n              [attributes.onInput]\n            )}\n            onBlur={useCallback(\n              (event: React.FocusEvent<HTMLDivElement>) => {\n                if (\n                  readOnly ||\n                  state.isUpdatingSelection ||\n                  !ReactEditor.hasSelectableTarget(editor, event.target) ||\n                  isEventHandled(event, attributes.onBlur)\n                ) {\n                  return\n                }\n\n                // COMPAT: If the current `activeElement` is still the previous\n                // one, this is due to the window being blurred when the tab\n                // itself becomes unfocused, so we want to abort early to allow to\n                // editor to stay focused when the tab becomes focused again.\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                if (state.latestElement === root.activeElement) {\n                  return\n                }\n\n                const { relatedTarget } = event\n                const el = ReactEditor.toDOMNode(editor, editor)\n\n                // COMPAT: The event should be ignored if the focus is returning\n                // to the editor from an embedded editable element (eg. an <input>\n                // element inside a void node).\n                if (relatedTarget === el) {\n                  return\n                }\n\n                // COMPAT: The event should be ignored if the focus is moving from\n                // the editor to inside a void node's spacer element.\n                if (\n                  isDOMElement(relatedTarget) &&\n                  relatedTarget.hasAttribute('data-slate-spacer')\n                ) {\n                  return\n                }\n\n                // COMPAT: The event should be ignored if the focus is moving to a\n                // non- editable section of an element that isn't a void node (eg.\n                // a list item of the check list example).\n                if (\n                  relatedTarget != null &&\n                  isDOMNode(relatedTarget) &&\n                  ReactEditor.hasDOMNode(editor, relatedTarget)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                  if (Element.isElement(node) && !editor.isVoid(node)) {\n                    return\n                  }\n                }\n\n                // COMPAT: Safari doesn't always remove the selection even if the content-\n                // editable element no longer has focus. Refer to:\n                // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n                if (IS_WEBKIT) {\n                  const domSelection = root.getSelection()\n                  domSelection?.removeAllRanges()\n                }\n\n                IS_FOCUSED.delete(editor)\n              },\n              [\n                readOnly,\n                state.isUpdatingSelection,\n                state.latestElement,\n                editor,\n                attributes.onBlur,\n              ]\n            )}\n            onClick={useCallback(\n              (event: React.MouseEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onClick) &&\n                  isDOMNode(event.target)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n                  const path = ReactEditor.findPath(editor, node)\n\n                  // At this time, the Slate document may be arbitrarily different,\n                  // because onClick handlers can change the document before we get here.\n                  // Therefore we must check that this path actually exists,\n                  // and that it still refers to the same node.\n                  if (\n                    !Editor.hasPath(editor, path) ||\n                    Node.get(editor, path) !== node\n                  ) {\n                    return\n                  }\n\n                  if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n                    let blockPath = path\n                    if (\n                      !(Element.isElement(node) && Editor.isBlock(editor, node))\n                    ) {\n                      const block = Editor.above(editor, {\n                        match: n =>\n                          Element.isElement(n) && Editor.isBlock(editor, n),\n                        at: path,\n                      })\n\n                      blockPath = block?.[1] ?? path.slice(0, 1)\n                    }\n\n                    const range = Editor.range(editor, blockPath)\n                    Transforms.select(editor, range)\n                    return\n                  }\n\n                  if (readOnly) {\n                    return\n                  }\n\n                  const start = Editor.start(editor, path)\n                  const end = Editor.end(editor, path)\n                  const startVoid = Editor.void(editor, { at: start })\n                  const endVoid = Editor.void(editor, { at: end })\n\n                  if (\n                    startVoid &&\n                    endVoid &&\n                    Path.equals(startVoid[1], endVoid[1])\n                  ) {\n                    const range = Editor.range(editor, start)\n                    Transforms.select(editor, range)\n                  }\n                }\n              },\n              [editor, attributes.onClick, readOnly]\n            )}\n            onCompositionEnd={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                  if (ReactEditor.isComposing(editor)) {\n                    Promise.resolve().then(() => {\n                      setIsComposing(false)\n                      IS_COMPOSING.set(editor, false)\n                    })\n                  }\n\n                  androidInputManagerRef.current?.handleCompositionEnd(event)\n\n                  if (\n                    isEventHandled(event, attributes.onCompositionEnd) ||\n                    IS_ANDROID\n                  ) {\n                    return\n                  }\n\n                  // COMPAT: In Chrome, `beforeinput` events for compositions\n                  // aren't correct and never fire the \"insertFromComposition\"\n                  // type that we need. So instead, insert whenever a composition\n                  // ends since it will already have been committed to the DOM.\n                  if (\n                    !IS_WEBKIT &&\n                    !IS_FIREFOX_LEGACY &&\n                    !IS_IOS &&\n                    !IS_WECHATBROWSER &&\n                    !IS_UC_MOBILE &&\n                    event.data\n                  ) {\n                    const placeholderMarks =\n                      EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n                    EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n\n                    // Ensure we insert text with the marks the user was actually seeing\n                    if (placeholderMarks !== undefined) {\n                      EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n                      editor.marks = placeholderMarks\n                    }\n\n                    Editor.insertText(editor, event.data)\n\n                    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n                    EDITOR_TO_USER_MARKS.delete(editor)\n                    if (userMarks !== undefined) {\n                      editor.marks = userMarks\n                    }\n                  }\n                }\n              },\n              [attributes.onCompositionEnd, editor]\n            )}\n            onCompositionUpdate={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCompositionUpdate)\n                ) {\n                  if (!ReactEditor.isComposing(editor)) {\n                    setIsComposing(true)\n                    IS_COMPOSING.set(editor, true)\n                  }\n                }\n              },\n              [attributes.onCompositionUpdate, editor]\n            )}\n            onCompositionStart={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                  androidInputManagerRef.current?.handleCompositionStart(event)\n\n                  if (\n                    isEventHandled(event, attributes.onCompositionStart) ||\n                    IS_ANDROID\n                  ) {\n                    return\n                  }\n\n                  setIsComposing(true)\n\n                  const { selection } = editor\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                    return\n                  }\n                }\n              },\n              [attributes.onCompositionStart, editor]\n            )}\n            onCopy={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCopy) &&\n                  !isDOMEventTargetInput(event)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.clipboardData,\n                    'copy'\n                  )\n                }\n              },\n              [attributes.onCopy, editor]\n            )}\n            onCut={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCut) &&\n                  !isDOMEventTargetInput(event)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.clipboardData,\n                    'cut'\n                  )\n                  const { selection } = editor\n\n                  if (selection) {\n                    if (Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor)\n                    } else {\n                      const node = Node.parent(editor, selection.anchor.path)\n                      if (Editor.isVoid(editor, node)) {\n                        Transforms.delete(editor)\n                      }\n                    }\n                  }\n                }\n              },\n              [readOnly, editor, attributes.onCut]\n            )}\n            onDragOver={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDragOver)\n                ) {\n                  // Only when the target is void, call `preventDefault` to signal\n                  // that drops are allowed. Editable content is droppable by\n                  // default, and calling `preventDefault` hides the cursor.\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n\n                  if (Element.isElement(node) && Editor.isVoid(editor, node)) {\n                    event.preventDefault()\n                  }\n                }\n              },\n              [attributes.onDragOver, editor]\n            )}\n            onDragStart={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDragStart)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n                  const path = ReactEditor.findPath(editor, node)\n                  const voidMatch =\n                    (Element.isElement(node) && Editor.isVoid(editor, node)) ||\n                    Editor.void(editor, { at: path, voids: true })\n\n                  // If starting a drag on a void node, make sure it is selected\n                  // so that it shows up in the selection's fragment.\n                  if (voidMatch) {\n                    const range = Editor.range(editor, path)\n                    Transforms.select(editor, range)\n                  }\n\n                  state.isDraggingInternally = true\n\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.dataTransfer,\n                    'drag'\n                  )\n                }\n              },\n              [readOnly, editor, attributes.onDragStart, state]\n            )}\n            onDrop={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDrop)\n                ) {\n                  event.preventDefault()\n\n                  // Keep a reference to the dragged range before updating selection\n                  const draggedRange = editor.selection\n\n                  // Find the range where the drop happened\n                  const range = ReactEditor.findEventRange(editor, event)\n                  const data = event.dataTransfer\n\n                  Transforms.select(editor, range)\n\n                  if (state.isDraggingInternally) {\n                    if (\n                      draggedRange &&\n                      !Range.equals(draggedRange, range) &&\n                      !Editor.void(editor, { at: range, voids: true })\n                    ) {\n                      Transforms.delete(editor, {\n                        at: draggedRange,\n                      })\n                    }\n                  }\n\n                  ReactEditor.insertData(editor, data)\n\n                  // When dragging from another source into the editor, it's possible\n                  // that the current editor does not have focus.\n                  if (!ReactEditor.isFocused(editor)) {\n                    ReactEditor.focus(editor)\n                  }\n                }\n\n                state.isDraggingInternally = false\n              },\n              [readOnly, editor, attributes.onDrop, state]\n            )}\n            onDragEnd={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  state.isDraggingInternally &&\n                  attributes.onDragEnd &&\n                  ReactEditor.hasTarget(editor, event.target)\n                ) {\n                  attributes.onDragEnd(event)\n                }\n\n                // When dropping on a different droppable element than the current editor,\n                // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n                // Note: `onDragEnd` is only called when `onDrop` is not called\n                state.isDraggingInternally = false\n              },\n              [readOnly, state, attributes, editor]\n            )}\n            onFocus={useCallback(\n              (event: React.FocusEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  !state.isUpdatingSelection &&\n                  ReactEditor.hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onFocus)\n                ) {\n                  const el = ReactEditor.toDOMNode(editor, editor)\n                  const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                  state.latestElement = root.activeElement\n\n                  // COMPAT: If the editor has nested editable elements, the focus\n                  // can go to them. In Firefox, this must be prevented because it\n                  // results in issues with keyboard navigation. (2017/03/30)\n                  if (IS_FIREFOX && event.target !== el) {\n                    el.focus()\n                    return\n                  }\n\n                  IS_FOCUSED.set(editor, true)\n                }\n              },\n              [readOnly, state, editor, attributes.onFocus]\n            )}\n            onKeyDown={useCallback(\n              (event: React.KeyboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasEditableTarget(editor, event.target)\n                ) {\n                  androidInputManagerRef.current?.handleKeyDown(event)\n\n                  const { nativeEvent } = event\n\n                  // COMPAT: The composition end event isn't fired reliably in all browsers,\n                  // so we sometimes might end up stuck in a composition state even though we\n                  // aren't composing any more.\n                  if (\n                    ReactEditor.isComposing(editor) &&\n                    nativeEvent.isComposing === false\n                  ) {\n                    IS_COMPOSING.set(editor, false)\n                    setIsComposing(false)\n                  }\n\n                  if (\n                    isEventHandled(event, attributes.onKeyDown) ||\n                    ReactEditor.isComposing(editor)\n                  ) {\n                    return\n                  }\n\n                  const { selection } = editor\n                  const element =\n                    editor.children[\n                      selection !== null ? selection.focus.path[0] : 0\n                    ]\n                  const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                  // COMPAT: Since we prevent the default behavior on\n                  // `beforeinput` events, the browser doesn't think there's ever\n                  // any history stack to undo or redo, so we have to manage these\n                  // hotkeys ourselves. (2019/11/06)\n                  if (Hotkeys.isRedo(nativeEvent)) {\n                    event.preventDefault()\n                    const maybeHistoryEditor: any = editor\n\n                    if (typeof maybeHistoryEditor.redo === 'function') {\n                      maybeHistoryEditor.redo()\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isUndo(nativeEvent)) {\n                    event.preventDefault()\n                    const maybeHistoryEditor: any = editor\n\n                    if (typeof maybeHistoryEditor.undo === 'function') {\n                      maybeHistoryEditor.undo()\n                    }\n\n                    return\n                  }\n\n                  // COMPAT: Certain browsers don't handle the selection updates\n                  // properly. In Chrome, the selection isn't properly extended.\n                  // And in Firefox, the selection isn't properly collapsed.\n                  // (2017/10/17)\n                  if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line', reverse: true })\n                    return\n                  }\n\n                  if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line' })\n                    return\n                  }\n\n                  if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, {\n                      unit: 'line',\n                      edge: 'focus',\n                      reverse: true,\n                    })\n                    return\n                  }\n\n                  if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                    return\n                  }\n\n                  // COMPAT: If a void node is selected, or a zero-width text node\n                  // adjacent to an inline is selected, we need to handle these\n                  // hotkeys manually because browsers won't be able to skip over\n                  // the void node with the zero-width space not being an empty\n                  // string.\n                  if (Hotkeys.isMoveBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isCollapsed(selection)) {\n                      Transforms.move(editor, { reverse: !isRTL })\n                    } else {\n                      Transforms.collapse(editor, {\n                        edge: isRTL ? 'end' : 'start',\n                      })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isMoveForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isCollapsed(selection)) {\n                      Transforms.move(editor, { reverse: isRTL })\n                    } else {\n                      Transforms.collapse(editor, {\n                        edge: isRTL ? 'start' : 'end',\n                      })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Transforms.collapse(editor, { edge: 'focus' })\n                    }\n\n                    Transforms.move(editor, { unit: 'word', reverse: !isRTL })\n                    return\n                  }\n\n                  if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Transforms.collapse(editor, { edge: 'focus' })\n                    }\n\n                    Transforms.move(editor, { unit: 'word', reverse: isRTL })\n                    return\n                  }\n\n                  // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                  // fall back to guessing at the input intention for hotkeys.\n                  // COMPAT: In iOS, some of these hotkeys are handled in the\n                  if (!HAS_BEFORE_INPUT_SUPPORT) {\n                    // We don't have a core behavior for these, but they change the\n                    // DOM if we don't prevent them, so we have to.\n                    if (\n                      Hotkeys.isBold(nativeEvent) ||\n                      Hotkeys.isItalic(nativeEvent) ||\n                      Hotkeys.isTransposeCharacter(nativeEvent)\n                    ) {\n                      event.preventDefault()\n                      return\n                    }\n\n                    if (Hotkeys.isSoftBreak(nativeEvent)) {\n                      event.preventDefault()\n                      Editor.insertSoftBreak(editor)\n                      return\n                    }\n\n                    if (Hotkeys.isSplitBlock(nativeEvent)) {\n                      event.preventDefault()\n                      Editor.insertBreak(editor)\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor)\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor)\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor, { unit: 'line' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor, { unit: 'line' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor, { unit: 'word' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor, { unit: 'word' })\n                      }\n\n                      return\n                    }\n                  } else {\n                    if (IS_CHROME || IS_WEBKIT) {\n                      // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                      // an event when deleting backwards in a selected void inline node\n                      if (\n                        selection &&\n                        (Hotkeys.isDeleteBackward(nativeEvent) ||\n                          Hotkeys.isDeleteForward(nativeEvent)) &&\n                        Range.isCollapsed(selection)\n                      ) {\n                        const currentNode = Node.parent(\n                          editor,\n                          selection.anchor.path\n                        )\n\n                        if (\n                          Element.isElement(currentNode) &&\n                          Editor.isVoid(editor, currentNode) &&\n                          (Editor.isInline(editor, currentNode) ||\n                            Editor.isBlock(editor, currentNode))\n                        ) {\n                          event.preventDefault()\n                          Editor.deleteBackward(editor, { unit: 'block' })\n\n                          return\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              [readOnly, editor, attributes.onKeyDown]\n            )}\n            onPaste={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onPaste)\n                ) {\n                  // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                  // fall back to React's `onPaste` here instead.\n                  // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                  // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                  // COMPAT: Safari InputEvents generated by pasting won't include\n                  // application/x-slate-fragment items, so use the\n                  // ClipboardEvent here. (2023/03/15)\n                  if (\n                    !HAS_BEFORE_INPUT_SUPPORT ||\n                    isPlainTextOnlyPaste(event.nativeEvent) ||\n                    IS_WEBKIT\n                  ) {\n                    event.preventDefault()\n                    ReactEditor.insertData(editor, event.clipboardData)\n                  }\n                }\n              },\n              [readOnly, editor, attributes.onPaste]\n            )}\n          >\n            <Children\n              decorations={decorations}\n              node={editor}\n              renderElement={renderElement}\n              renderPlaceholder={renderPlaceholder}\n              renderLeaf={renderLeaf}\n              selection={editor.selection}\n            />\n          </Component>\n        </RestoreDOM>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefCallback<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => (\n  // COMPAT: Artificially add a line-break to the end on the placeholder element\n  // to prevent Android IMEs to pick up its content in autocorrect and to auto-capitalize the first letter\n  <span {...attributes}>\n    {children}\n    {IS_ANDROID && <br />}\n  </span>\n)\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => Range[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nconst defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (\n    domRange.getBoundingClientRect &&\n    (!editor.selection ||\n      (editor.selection && Range.isCollapsed(editor.selection)))\n  ) {\n    const leafEl = domRange.startContainer.parentElement!\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed',\n    })\n\n    // @ts-expect-error an unorthodox delete D:\n    delete leafEl.getBoundingClientRect\n  }\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>,\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if the event's target is an input element\n */\nexport const isDOMEventTargetInput = <\n  EventType extends React.SyntheticEvent<unknown, unknown>,\n>(\n  event: EventType\n) => {\n  return (\n    isDOMNode(event.target) &&\n    (event.target instanceof HTMLInputElement ||\n      event.target instanceof HTMLTextAreaElement)\n  )\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n","import {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react'\nimport { Editor } from 'slate'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nfunction isError(error: any): error is Error {\n  return error instanceof Error\n}\n\ntype EditorChangeHandler = (editor: Editor) => void\n/**\n * A React context for sharing the editor selector context in a way to control rerenders\n */\n\nexport const SlateSelectorContext = createContext<{\n  getSlate: () => Editor\n  addEventListener: (callback: EditorChangeHandler) => () => void\n}>({} as any)\n\nconst refEquality = (a: any, b: any) => a === b\n\n/**\n * use redux style selectors to prevent rerendering on every keystroke.\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\n *\n * Example:\n * ```\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\n * ```\n */\nexport function useSlateSelector<T>(\n  selector: (editor: Editor) => T,\n  equalityFn: (a: T, b: T) => boolean = refEquality\n) {\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  const context = useContext(SlateSelectorContext)\n  if (!context) {\n    throw new Error(\n      `The \\`useSlateSelector\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n  const { getSlate, addEventListener } = context\n\n  const latestSubscriptionCallbackError = useRef<Error | undefined>()\n  const latestSelector = useRef<(editor: Editor) => T>(() => null as any)\n  const latestSelectedState = useRef<T>(null as any as T)\n  let selectedState: T\n\n  try {\n    if (\n      selector !== latestSelector.current ||\n      latestSubscriptionCallbackError.current\n    ) {\n      selectedState = selector(getSlate())\n    } else {\n      selectedState = latestSelectedState.current\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n    }\n\n    throw err\n  }\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector\n    latestSelectedState.current = selectedState\n    latestSubscriptionCallbackError.current = undefined\n  })\n\n  useIsomorphicLayoutEffect(\n    () => {\n      function checkForUpdates() {\n        try {\n          const newSelectedState = latestSelector.current(getSlate())\n\n          if (equalityFn(newSelectedState, latestSelectedState.current)) {\n            return\n          }\n\n          latestSelectedState.current = newSelectedState\n        } catch (err) {\n          // we ignore all errors here, since when the component\n          // is re-rendered, the selectors are called again, and\n          // will throw again, if neither props nor store state\n          // changed\n          if (err instanceof Error) {\n            latestSubscriptionCallbackError.current = err\n          } else {\n            latestSubscriptionCallbackError.current = new Error(String(err))\n          }\n        }\n\n        forceRender()\n      }\n\n      const unsubscribe = addEventListener(checkForUpdates)\n\n      checkForUpdates()\n\n      return () => unsubscribe()\n    },\n    // don't rerender on equalityFn change since we want to be able to define it inline\n    [addEventListener, getSlate]\n  )\n\n  return selectedState\n}\n\n/**\n * Create selector context with editor updating on every editor change\n */\nexport function useSelectorContext(editor: Editor) {\n  const eventListeners = useRef<EditorChangeHandler[]>([]).current\n  const slateRef = useRef<{\n    editor: Editor\n  }>({\n    editor,\n  }).current\n  const onChange = useCallback(\n    (editor: Editor) => {\n      slateRef.editor = editor\n      eventListeners.forEach((listener: EditorChangeHandler) =>\n        listener(editor)\n      )\n    },\n    [eventListeners, slateRef]\n  )\n\n  const selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: (callback: EditorChangeHandler) => {\n        eventListeners.push(callback)\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1)\n        }\n      },\n    }\n  }, [eventListeners, slateRef])\n  return { selectorContext, onChange }\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Descendant, Editor, Node, Operation, Scrubber, Selection } from 'slate'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { SlateContext, SlateContextValue } from '../hooks/use-slate'\nimport {\n  useSelectorContext,\n  SlateSelectorContext,\n} from '../hooks/use-slate-selector'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { REACT_MAJOR_VERSION } from '../utils/environment'\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  initialValue: Descendant[]\n  children: React.ReactNode\n  onChange?: (value: Descendant[]) => void\n  onSelectionChange?: (selection: Selection) => void\n  onValueChange?: (value: Descendant[]) => void\n}) => {\n  const {\n    editor,\n    children,\n    onChange,\n    onSelectionChange,\n    onValueChange,\n    initialValue,\n    ...rest\n  } = props\n\n  const [context, setContext] = React.useState<SlateContextValue>(() => {\n    if (!Node.isNodeList(initialValue)) {\n      throw new Error(\n        `[Slate] initialValue is invalid! Expected a list of elements but got: ${Scrubber.stringify(\n          initialValue\n        )}`\n      )\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\n        `[Slate] editor is invalid! You passed: ${Scrubber.stringify(editor)}`\n      )\n    }\n    editor.children = initialValue\n    Object.assign(editor, rest)\n    return { v: 0, editor }\n  })\n\n  const { selectorContext, onChange: handleSelectorChange } =\n    useSelectorContext(editor)\n\n  const onContextChange = useCallback(\n    (options?: { operation?: Operation }) => {\n      if (onChange) {\n        onChange(editor.children)\n      }\n\n      switch (options?.operation?.type) {\n        case 'set_selection':\n          onSelectionChange?.(editor.selection)\n          break\n        default:\n          onValueChange?.(editor.children)\n      }\n\n      setContext(prevContext => ({\n        v: prevContext.v + 1,\n        editor,\n      }))\n      handleSelectorChange(editor)\n    },\n    [editor, handleSelectorChange, onChange, onSelectionChange, onValueChange]\n  )\n\n  useEffect(() => {\n    EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n    }\n  }, [editor, onContextChange])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  }, [editor])\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    if (REACT_MAJOR_VERSION >= 17) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn)\n      document.addEventListener('focusout', fn)\n      return () => {\n        document.removeEventListener('focusin', fn)\n        document.removeEventListener('focusout', fn)\n      }\n    } else {\n      document.addEventListener('focus', fn, true)\n      document.addEventListener('blur', fn, true)\n      return () => {\n        document.removeEventListener('focus', fn, true)\n        document.removeEventListener('blur', fn, true)\n      }\n    }\n  }, [])\n\n  return (\n    <SlateSelectorContext.Provider value={selectorContext}>\n      <SlateContext.Provider value={context}>\n        <EditorContext.Provider value={context.editor}>\n          <FocusedContext.Provider value={isFocused}>\n            {children}\n          </FocusedContext.Provider>\n        </EditorContext.Provider>\n      </SlateContext.Provider>\n    </SlateSelectorContext.Provider>\n  )\n}\n","import { useContext } from 'react'\n\nimport { EditorContext } from './use-slate-static'\n\n/**\n * Get the current editor object from the React context.\n * @deprecated Use useSlateStatic instead.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import { BaseSelection, Range } from 'slate'\n\nimport { useSlateSelector } from './use-slate-selector'\n\n/**\n * Get the current slate selection.\n * Only triggers a rerender when the selection actually changes\n */\nexport const useSlateSelection = () => {\n  return useSlateSelector(editor => editor.selection, isSelectionEqual)\n}\n\nconst isSelectionEqual = (a: BaseSelection, b: BaseSelection) => {\n  if (!a && !b) return true\n  if (!a || !b) return false\n  return Range.equals(a, b)\n}\n","/**\n * Utilities for single-line deletion\n */\n\nimport { Editor, Range } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\nconst doRectsIntersect = (rect: DOMRect, compareRect: DOMRect) => {\n  const middle = (compareRect.top + compareRect.bottom) / 2\n\n  return rect.top <= middle && rect.bottom >= middle\n}\n\nconst areRangesSameLine = (\n  editor: ReactEditor,\n  range1: Range,\n  range2: Range\n) => {\n  const rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect()\n  const rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect()\n\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1)\n}\n\n/**\n * A helper utility that returns the end portion of a `Range`\n * which is located on a single line.\n *\n * @param {Editor} editor The editor object to compare against\n * @param {Range} parentRange The parent range to compare against\n * @returns {Range} A valid portion of the parentRange which is one a single line\n */\nexport const findCurrentLineRange = (\n  editor: ReactEditor,\n  parentRange: Range\n): Range => {\n  const parentRangeBoundary = Editor.range(editor, Range.end(parentRange))\n  const positions = Array.from(Editor.positions(editor, { at: parentRange }))\n\n  let left = 0\n  let right = positions.length\n  let middle = Math.floor(right / 2)\n\n  if (\n    areRangesSameLine(\n      editor,\n      Editor.range(editor, positions[left]),\n      parentRangeBoundary\n    )\n  ) {\n    return Editor.range(editor, positions[left], parentRangeBoundary)\n  }\n\n  if (positions.length < 2) {\n    return Editor.range(\n      editor,\n      positions[positions.length - 1],\n      parentRangeBoundary\n    )\n  }\n\n  while (middle !== positions.length && middle !== left) {\n    if (\n      areRangesSameLine(\n        editor,\n        Editor.range(editor, positions[middle]),\n        parentRangeBoundary\n      )\n    ) {\n      right = middle\n    } else {\n      left = middle\n    }\n\n    middle = Math.floor((left + right) / 2)\n  }\n\n  return Editor.range(editor, positions[right], parentRangeBoundary)\n}\n","import ReactDOM from 'react-dom'\nimport {\n  BaseEditor,\n  Editor,\n  Element,\n  Node,\n  Operation,\n  Path,\n  PathRef,\n  Point,\n  Range,\n  Transforms,\n} from 'slate'\nimport {\n  TextDiff,\n  transformPendingPoint,\n  transformPendingRange,\n  transformTextDiff,\n} from '../utils/diff-text'\nimport {\n  getPlainText,\n  getSlateFragmentAttribute,\n  isDOMText,\n} from '../utils/dom'\nimport { Key } from '../utils/key'\nimport { findCurrentLineRange } from '../utils/lines'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_ON_CHANGE,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  NODE_TO_KEY,\n} from '../utils/weak-maps'\nimport { ReactEditor } from './react-editor'\nimport { REACT_MAJOR_VERSION } from '../utils/environment'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\n\nexport const withReact = <T extends BaseEditor>(\n  editor: T,\n  clipboardFormatKey = 'x-slate-fragment'\n): T & ReactEditor => {\n  const e = editor as T & ReactEditor\n  const { apply, onChange, deleteBackward, addMark, removeMark } = e\n\n  // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap())\n\n  e.addMark = (key, value) => {\n    EDITOR_TO_SCHEDULE_FLUSH.get(e)?.()\n\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    addMark(key, value)\n  }\n\n  e.removeMark = key => {\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    removeMark(key)\n  }\n\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit)\n    }\n\n    if (e.selection && Range.isCollapsed(e.selection)) {\n      const parentBlockEntry = Editor.above(e, {\n        match: n => Element.isElement(n) && Editor.isBlock(e, n),\n        at: e.selection,\n      })\n\n      if (parentBlockEntry) {\n        const [, parentBlockPath] = parentBlockEntry\n        const parentElementRange = Editor.range(\n          e,\n          parentBlockPath,\n          e.selection.anchor\n        )\n\n        const currentLineRange = findCurrentLineRange(e, parentElementRange)\n\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(e, { at: currentLineRange })\n        }\n      }\n    }\n  }\n\n  // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n    const pathRefMatches: [PathRef, Key][] = []\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(e)\n    if (pendingDiffs?.length) {\n      const transformed = pendingDiffs\n        .map(textDiff => transformTextDiff(textDiff, op))\n        .filter(Boolean) as TextDiff[]\n\n      EDITOR_TO_PENDING_DIFFS.set(e, transformed)\n    }\n\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(e)\n    if (pendingSelection) {\n      EDITOR_TO_PENDING_SELECTION.set(\n        e,\n        transformPendingRange(e, pendingSelection, op)\n      )\n    }\n\n    const pendingAction = EDITOR_TO_PENDING_ACTION.get(e)\n    if (pendingAction?.at) {\n      const at = Point.isPoint(pendingAction?.at)\n        ? transformPendingPoint(e, pendingAction.at, op)\n        : transformPendingRange(e, pendingAction.at, op)\n\n      EDITOR_TO_PENDING_ACTION.set(e, at ? { ...pendingAction, at } : null)\n    }\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node': {\n        matches.push(...getMatches(e, op.path))\n        break\n      }\n\n      case 'set_selection': {\n        // Selection was manually set, don't restore the user selection after the change.\n        EDITOR_TO_USER_SELECTION.get(e)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(e)\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node': {\n        matches.push(...getMatches(e, Path.parent(op.path)))\n        break\n      }\n\n      case 'merge_node': {\n        const prevPath = Path.previous(op.path)\n        matches.push(...getMatches(e, prevPath))\n        break\n      }\n\n      case 'move_node': {\n        const commonPath = Path.common(\n          Path.parent(op.path),\n          Path.parent(op.newPath)\n        )\n        matches.push(...getMatches(e, commonPath))\n\n        let changedPath: Path\n        if (Path.isBefore(op.path, op.newPath)) {\n          matches.push(...getMatches(e, Path.parent(op.path)))\n          changedPath = op.newPath\n        } else {\n          matches.push(...getMatches(e, Path.parent(op.newPath)))\n          changedPath = op.path\n        }\n\n        const changedNode = Node.get(editor, Path.parent(changedPath))\n        const changedNodeKey = ReactEditor.findKey(e, changedNode)\n        const changedPathRef = Editor.pathRef(e, Path.parent(changedPath))\n        pathRefMatches.push([changedPathRef, changedNodeKey])\n\n        break\n      }\n    }\n\n    apply(op)\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n\n    for (const [pathRef, key] of pathRefMatches) {\n      if (pathRef.current) {\n        const [node] = Editor.node(e, pathRef.current)\n        NODE_TO_KEY.set(node, key)\n      }\n    }\n  }\n\n  e.setFragmentData = (data: Pick<DataTransfer, 'getData' | 'setData'>) => {\n    const { selection } = e\n\n    if (!selection) {\n      return\n    }\n\n    const [start, end] = Range.edges(selection)\n    const startVoid = Editor.void(e, { at: start.path })\n    const endVoid = Editor.void(e, { at: end.path })\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return\n    }\n\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    const domRange = ReactEditor.toDOMRange(e, selection)\n    let contents = domRange.cloneContents()\n    let attach = contents.childNodes[0] as HTMLElement\n\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node as HTMLElement\n      }\n    })\n\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      const [voidNode] = endVoid\n      const r = domRange.cloneRange()\n      const domNode = ReactEditor.toDOMNode(e, voidNode)\n      r.setEndAfter(domNode)\n      contents = r.cloneContents()\n    }\n\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n    }\n\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n      zw => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      }\n    )\n\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      const span = attach.ownerDocument.createElement('span')\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre'\n      span.appendChild(attach)\n      contents.appendChild(span)\n      attach = span\n    }\n\n    const fragment = e.getFragment()\n    const string = JSON.stringify(fragment)\n    const encoded = window.btoa(encodeURIComponent(string))\n    attach.setAttribute('data-slate-fragment', encoded)\n    data.setData(`application/${clipboardFormatKey}`, encoded)\n\n    // Add the content to a <div> so that we can get its inner HTML.\n    const div = contents.ownerDocument.createElement('div')\n    div.appendChild(contents)\n    div.setAttribute('hidden', 'true')\n    contents.ownerDocument.body.appendChild(div)\n    data.setData('text/html', div.innerHTML)\n    data.setData('text/plain', getPlainText(div))\n    contents.ownerDocument.body.removeChild(div)\n    return data\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data)\n    }\n  }\n\n  e.insertFragmentData = (data: DataTransfer): boolean => {\n    /**\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\n     */\n    const fragment =\n      data.getData(`application/${clipboardFormatKey}`) ||\n      getSlateFragmentAttribute(data)\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      e.insertFragment(parsed)\n      return true\n    }\n    return false\n  }\n\n  e.insertTextData = (data: DataTransfer): boolean => {\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split(/\\r\\n|\\r|\\n/)\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, { always: true })\n        }\n\n        e.insertText(line)\n        split = true\n      }\n      return true\n    }\n    return false\n  }\n\n  e.onChange = options => {\n    // COMPAT: React < 18 doesn't batch `setState` hook calls, which means\n    // that the children and selection can get out of sync for one render\n    // pass. So we have to use this unstable API to ensure it batches them.\n    // (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    const maybeBatchUpdates =\n      REACT_MAJOR_VERSION < 18\n        ? ReactDOM.unstable_batchedUpdates\n        : (callback: () => void) => callback()\n\n    maybeBatchUpdates(() => {\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n      if (onContextChange) {\n        onContextChange(options)\n      }\n\n      onChange(options)\n    })\n  }\n\n  return e\n}\n\nconst getMatches = (e: Editor, path: Path) => {\n  const matches: [Path, Key][] = []\n  for (const [n, p] of Editor.levels(e, { at: path })) {\n    const key = ReactEditor.findKey(e, n)\n    matches.push([p, key])\n  }\n  return matches\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}