{"ast":null,"code":"export const createAggregatedClient = (commands, Client) => {\n  for (const command of Object.keys(commands)) {\n    const CommandCtor = commands[command];\n    const methodImpl = async function (args, optionsOrCb, cb) {\n      const command = new CommandCtor(args);\n      if (typeof optionsOrCb === \"function\") {\n        this.send(command, optionsOrCb);\n      } else if (typeof cb === \"function\") {\n        if (typeof optionsOrCb !== \"object\") throw new Error(`Expected http options but got ${typeof optionsOrCb}`);\n        this.send(command, optionsOrCb || {}, cb);\n      } else {\n        return this.send(command, optionsOrCb);\n      }\n    };\n    const methodName = (command[0].toLowerCase() + command.slice(1)).replace(/Command$/, \"\");\n    Client.prototype[methodName] = methodImpl;\n  }\n};","map":{"version":3,"names":["createAggregatedClient","commands","Client","command","Object","keys","CommandCtor","methodImpl","args","optionsOrCb","cb","send","Error","methodName","toLowerCase","slice","replace","prototype"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/smithy-client/dist-es/create-aggregated-client.js"],"sourcesContent":["export const createAggregatedClient = (commands, Client) => {\n    for (const command of Object.keys(commands)) {\n        const CommandCtor = commands[command];\n        const methodImpl = async function (args, optionsOrCb, cb) {\n            const command = new CommandCtor(args);\n            if (typeof optionsOrCb === \"function\") {\n                this.send(command, optionsOrCb);\n            }\n            else if (typeof cb === \"function\") {\n                if (typeof optionsOrCb !== \"object\")\n                    throw new Error(`Expected http options but got ${typeof optionsOrCb}`);\n                this.send(command, optionsOrCb || {}, cb);\n            }\n            else {\n                return this.send(command, optionsOrCb);\n            }\n        };\n        const methodName = (command[0].toLowerCase() + command.slice(1)).replace(/Command$/, \"\");\n        Client.prototype[methodName] = methodImpl;\n    }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,sBAAsB,GAAGA,CAACC,QAAQ,EAAEC,MAAM,KAAK;EACxD,KAAK,MAAMC,OAAO,IAAIC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,EAAE;IACzC,MAAMK,WAAW,GAAGL,QAAQ,CAACE,OAAO,CAAC;IACrC,MAAMI,UAAU,GAAG,eAAAA,CAAgBC,IAAI,EAAEC,WAAW,EAAEC,EAAE,EAAE;MACtD,MAAMP,OAAO,GAAG,IAAIG,WAAW,CAACE,IAAI,CAAC;MACrC,IAAI,OAAOC,WAAW,KAAK,UAAU,EAAE;QACnC,IAAI,CAACE,IAAI,CAACR,OAAO,EAAEM,WAAW,CAAC;MACnC,CAAC,MACI,IAAI,OAAOC,EAAE,KAAK,UAAU,EAAE;QAC/B,IAAI,OAAOD,WAAW,KAAK,QAAQ,EAC/B,MAAM,IAAIG,KAAK,CAAC,iCAAiC,OAAOH,WAAW,EAAE,CAAC;QAC1E,IAAI,CAACE,IAAI,CAACR,OAAO,EAAEM,WAAW,IAAI,CAAC,CAAC,EAAEC,EAAE,CAAC;MAC7C,CAAC,MACI;QACD,OAAO,IAAI,CAACC,IAAI,CAACR,OAAO,EAAEM,WAAW,CAAC;MAC1C;IACJ,CAAC;IACD,MAAMI,UAAU,GAAG,CAACV,OAAO,CAAC,CAAC,CAAC,CAACW,WAAW,CAAC,CAAC,GAAGX,OAAO,CAACY,KAAK,CAAC,CAAC,CAAC,EAAEC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IACxFd,MAAM,CAACe,SAAS,CAACJ,UAAU,CAAC,GAAGN,UAAU;EAC7C;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}