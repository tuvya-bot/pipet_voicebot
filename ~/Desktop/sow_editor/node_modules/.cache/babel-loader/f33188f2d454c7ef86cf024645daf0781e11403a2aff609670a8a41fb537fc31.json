{"ast":null,"code":"export class NumericValue {\n  constructor(string, type) {\n    this.string = string;\n    this.type = type;\n    let dot = 0;\n    for (let i = 0; i < string.length; ++i) {\n      const char = string.charCodeAt(i);\n      if (i === 0 && char === 45) {\n        continue;\n      }\n      if (char === 46) {\n        if (dot) {\n          throw new Error(\"@smithy/core/serde - NumericValue must contain at most one decimal point.\");\n        }\n        dot = 1;\n        continue;\n      }\n      if (char < 48 || char > 57) {\n        throw new Error(`@smithy/core/serde - NumericValue must only contain [0-9], at most one decimal point \".\", and an optional negation prefix \"-\".`);\n      }\n    }\n  }\n  toString() {\n    return this.string;\n  }\n  static [Symbol.hasInstance](object) {\n    if (!object || typeof object !== \"object\") {\n      return false;\n    }\n    const _nv = object;\n    const prototypeMatch = NumericValue.prototype.isPrototypeOf(object.constructor?.prototype);\n    if (prototypeMatch) {\n      return prototypeMatch;\n    }\n    if (typeof _nv.string === \"string\" && typeof _nv.type === \"string\" && _nv.constructor?.name === \"NumericValue\") {\n      return true;\n    }\n    return prototypeMatch;\n  }\n}\nexport function nv(input) {\n  return new NumericValue(String(input), \"bigDecimal\");\n}","map":{"version":3,"names":["NumericValue","constructor","string","type","dot","i","length","char","charCodeAt","Error","toString","Symbol","hasInstance","object","_nv","prototypeMatch","prototype","isPrototypeOf","name","nv","input","String"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/core/dist-es/submodules/serde/value/NumericValue.js"],"sourcesContent":["export class NumericValue {\n    constructor(string, type) {\n        this.string = string;\n        this.type = type;\n        let dot = 0;\n        for (let i = 0; i < string.length; ++i) {\n            const char = string.charCodeAt(i);\n            if (i === 0 && char === 45) {\n                continue;\n            }\n            if (char === 46) {\n                if (dot) {\n                    throw new Error(\"@smithy/core/serde - NumericValue must contain at most one decimal point.\");\n                }\n                dot = 1;\n                continue;\n            }\n            if (char < 48 || char > 57) {\n                throw new Error(`@smithy/core/serde - NumericValue must only contain [0-9], at most one decimal point \".\", and an optional negation prefix \"-\".`);\n            }\n        }\n    }\n    toString() {\n        return this.string;\n    }\n    static [Symbol.hasInstance](object) {\n        if (!object || typeof object !== \"object\") {\n            return false;\n        }\n        const _nv = object;\n        const prototypeMatch = NumericValue.prototype.isPrototypeOf(object.constructor?.prototype);\n        if (prototypeMatch) {\n            return prototypeMatch;\n        }\n        if (typeof _nv.string === \"string\" && typeof _nv.type === \"string\" && _nv.constructor?.name === \"NumericValue\") {\n            return true;\n        }\n        return prototypeMatch;\n    }\n}\nexport function nv(input) {\n    return new NumericValue(String(input), \"bigDecimal\");\n}\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,CAAC;EACtBC,WAAWA,CAACC,MAAM,EAAEC,IAAI,EAAE;IACtB,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAIC,GAAG,GAAG,CAAC;IACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACI,MAAM,EAAE,EAAED,CAAC,EAAE;MACpC,MAAME,IAAI,GAAGL,MAAM,CAACM,UAAU,CAACH,CAAC,CAAC;MACjC,IAAIA,CAAC,KAAK,CAAC,IAAIE,IAAI,KAAK,EAAE,EAAE;QACxB;MACJ;MACA,IAAIA,IAAI,KAAK,EAAE,EAAE;QACb,IAAIH,GAAG,EAAE;UACL,MAAM,IAAIK,KAAK,CAAC,2EAA2E,CAAC;QAChG;QACAL,GAAG,GAAG,CAAC;QACP;MACJ;MACA,IAAIG,IAAI,GAAG,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;QACxB,MAAM,IAAIE,KAAK,CAAC,gIAAgI,CAAC;MACrJ;IACJ;EACJ;EACAC,QAAQA,CAAA,EAAG;IACP,OAAO,IAAI,CAACR,MAAM;EACtB;EACA,QAAQS,MAAM,CAACC,WAAW,EAAEC,MAAM,EAAE;IAChC,IAAI,CAACA,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MACvC,OAAO,KAAK;IAChB;IACA,MAAMC,GAAG,GAAGD,MAAM;IAClB,MAAME,cAAc,GAAGf,YAAY,CAACgB,SAAS,CAACC,aAAa,CAACJ,MAAM,CAACZ,WAAW,EAAEe,SAAS,CAAC;IAC1F,IAAID,cAAc,EAAE;MAChB,OAAOA,cAAc;IACzB;IACA,IAAI,OAAOD,GAAG,CAACZ,MAAM,KAAK,QAAQ,IAAI,OAAOY,GAAG,CAACX,IAAI,KAAK,QAAQ,IAAIW,GAAG,CAACb,WAAW,EAAEiB,IAAI,KAAK,cAAc,EAAE;MAC5G,OAAO,IAAI;IACf;IACA,OAAOH,cAAc;EACzB;AACJ;AACA,OAAO,SAASI,EAAEA,CAACC,KAAK,EAAE;EACtB,OAAO,IAAIpB,YAAY,CAACqB,MAAM,CAACD,KAAK,CAAC,EAAE,YAAY,CAAC;AACxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}