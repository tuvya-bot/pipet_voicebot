{"ast":null,"code":"export const splitHeader = value => {\n  const z = value.length;\n  const values = [];\n  let withinQuotes = false;\n  let prevChar = undefined;\n  let anchor = 0;\n  for (let i = 0; i < z; ++i) {\n    const char = value[i];\n    switch (char) {\n      case `\"`:\n        if (prevChar !== \"\\\\\") {\n          withinQuotes = !withinQuotes;\n        }\n        break;\n      case \",\":\n        if (!withinQuotes) {\n          values.push(value.slice(anchor, i));\n          anchor = i + 1;\n        }\n        break;\n      default:\n    }\n    prevChar = char;\n  }\n  values.push(value.slice(anchor));\n  return values.map(v => {\n    v = v.trim();\n    const z = v.length;\n    if (z < 2) {\n      return v;\n    }\n    if (v[0] === `\"` && v[z - 1] === `\"`) {\n      v = v.slice(1, z - 1);\n    }\n    return v.replace(/\\\\\"/g, '\"');\n  });\n};","map":{"version":3,"names":["splitHeader","value","z","length","values","withinQuotes","prevChar","undefined","anchor","i","char","push","slice","map","v","trim","replace"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/core/dist-es/submodules/serde/split-header.js"],"sourcesContent":["export const splitHeader = (value) => {\n    const z = value.length;\n    const values = [];\n    let withinQuotes = false;\n    let prevChar = undefined;\n    let anchor = 0;\n    for (let i = 0; i < z; ++i) {\n        const char = value[i];\n        switch (char) {\n            case `\"`:\n                if (prevChar !== \"\\\\\") {\n                    withinQuotes = !withinQuotes;\n                }\n                break;\n            case \",\":\n                if (!withinQuotes) {\n                    values.push(value.slice(anchor, i));\n                    anchor = i + 1;\n                }\n                break;\n            default:\n        }\n        prevChar = char;\n    }\n    values.push(value.slice(anchor));\n    return values.map((v) => {\n        v = v.trim();\n        const z = v.length;\n        if (z < 2) {\n            return v;\n        }\n        if (v[0] === `\"` && v[z - 1] === `\"`) {\n            v = v.slice(1, z - 1);\n        }\n        return v.replace(/\\\\\"/g, '\"');\n    });\n};\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,KAAK,IAAK;EAClC,MAAMC,CAAC,GAAGD,KAAK,CAACE,MAAM;EACtB,MAAMC,MAAM,GAAG,EAAE;EACjB,IAAIC,YAAY,GAAG,KAAK;EACxB,IAAIC,QAAQ,GAAGC,SAAS;EACxB,IAAIC,MAAM,GAAG,CAAC;EACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,CAAC,EAAE,EAAEO,CAAC,EAAE;IACxB,MAAMC,IAAI,GAAGT,KAAK,CAACQ,CAAC,CAAC;IACrB,QAAQC,IAAI;MACR,KAAK,GAAG;QACJ,IAAIJ,QAAQ,KAAK,IAAI,EAAE;UACnBD,YAAY,GAAG,CAACA,YAAY;QAChC;QACA;MACJ,KAAK,GAAG;QACJ,IAAI,CAACA,YAAY,EAAE;UACfD,MAAM,CAACO,IAAI,CAACV,KAAK,CAACW,KAAK,CAACJ,MAAM,EAAEC,CAAC,CAAC,CAAC;UACnCD,MAAM,GAAGC,CAAC,GAAG,CAAC;QAClB;QACA;MACJ;IACJ;IACAH,QAAQ,GAAGI,IAAI;EACnB;EACAN,MAAM,CAACO,IAAI,CAACV,KAAK,CAACW,KAAK,CAACJ,MAAM,CAAC,CAAC;EAChC,OAAOJ,MAAM,CAACS,GAAG,CAAEC,CAAC,IAAK;IACrBA,CAAC,GAAGA,CAAC,CAACC,IAAI,CAAC,CAAC;IACZ,MAAMb,CAAC,GAAGY,CAAC,CAACX,MAAM;IAClB,IAAID,CAAC,GAAG,CAAC,EAAE;MACP,OAAOY,CAAC;IACZ;IACA,IAAIA,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,CAAC,CAACZ,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;MAClCY,CAAC,GAAGA,CAAC,CAACF,KAAK,CAAC,CAAC,EAAEV,CAAC,GAAG,CAAC,CAAC;IACzB;IACA,OAAOY,CAAC,CAACE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;EACjC,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}