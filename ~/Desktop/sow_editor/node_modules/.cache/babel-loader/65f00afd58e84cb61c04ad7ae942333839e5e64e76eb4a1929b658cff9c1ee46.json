{"ast":null,"code":"import { TypeRegistry } from \"../TypeRegistry\";\nimport { Schema } from \"./Schema\";\nexport class StructureSchema extends Schema {\n  constructor(name, traits, memberNames, memberList) {\n    super(name, traits);\n    this.name = name;\n    this.traits = traits;\n    this.memberNames = memberNames;\n    this.memberList = memberList;\n    this.symbol = StructureSchema.symbol;\n    this.members = {};\n    for (let i = 0; i < memberNames.length; ++i) {\n      this.members[memberNames[i]] = Array.isArray(memberList[i]) ? memberList[i] : [memberList[i], 0];\n    }\n  }\n  static [Symbol.hasInstance](lhs) {\n    const isPrototype = StructureSchema.prototype.isPrototypeOf(lhs);\n    if (!isPrototype && typeof lhs === \"object\" && lhs !== null) {\n      const struct = lhs;\n      return struct.symbol === StructureSchema.symbol;\n    }\n    return isPrototype;\n  }\n}\nStructureSchema.symbol = Symbol.for(\"@smithy/core/schema::StructureSchema\");\nexport function struct(namespace, name, traits, memberNames, memberList) {\n  const schema = new StructureSchema(namespace + \"#\" + name, traits, memberNames, memberList);\n  TypeRegistry.for(namespace).register(name, schema);\n  return schema;\n}","map":{"version":3,"names":["TypeRegistry","Schema","StructureSchema","constructor","name","traits","memberNames","memberList","symbol","members","i","length","Array","isArray","Symbol","hasInstance","lhs","isPrototype","prototype","isPrototypeOf","struct","for","namespace","schema","register"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/core/dist-es/submodules/schema/schemas/StructureSchema.js"],"sourcesContent":["import { TypeRegistry } from \"../TypeRegistry\";\nimport { Schema } from \"./Schema\";\nexport class StructureSchema extends Schema {\n    constructor(name, traits, memberNames, memberList) {\n        super(name, traits);\n        this.name = name;\n        this.traits = traits;\n        this.memberNames = memberNames;\n        this.memberList = memberList;\n        this.symbol = StructureSchema.symbol;\n        this.members = {};\n        for (let i = 0; i < memberNames.length; ++i) {\n            this.members[memberNames[i]] = Array.isArray(memberList[i])\n                ? memberList[i]\n                : [memberList[i], 0];\n        }\n    }\n    static [Symbol.hasInstance](lhs) {\n        const isPrototype = StructureSchema.prototype.isPrototypeOf(lhs);\n        if (!isPrototype && typeof lhs === \"object\" && lhs !== null) {\n            const struct = lhs;\n            return struct.symbol === StructureSchema.symbol;\n        }\n        return isPrototype;\n    }\n}\nStructureSchema.symbol = Symbol.for(\"@smithy/core/schema::StructureSchema\");\nexport function struct(namespace, name, traits, memberNames, memberList) {\n    const schema = new StructureSchema(namespace + \"#\" + name, traits, memberNames, memberList);\n    TypeRegistry.for(namespace).register(name, schema);\n    return schema;\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAO,MAAMC,eAAe,SAASD,MAAM,CAAC;EACxCE,WAAWA,CAACC,IAAI,EAAEC,MAAM,EAAEC,WAAW,EAAEC,UAAU,EAAE;IAC/C,KAAK,CAACH,IAAI,EAAEC,MAAM,CAAC;IACnB,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,MAAM,GAAGN,eAAe,CAACM,MAAM;IACpC,IAAI,CAACC,OAAO,GAAG,CAAC,CAAC;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,WAAW,CAACK,MAAM,EAAE,EAAED,CAAC,EAAE;MACzC,IAAI,CAACD,OAAO,CAACH,WAAW,CAACI,CAAC,CAAC,CAAC,GAAGE,KAAK,CAACC,OAAO,CAACN,UAAU,CAACG,CAAC,CAAC,CAAC,GACrDH,UAAU,CAACG,CAAC,CAAC,GACb,CAACH,UAAU,CAACG,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5B;EACJ;EACA,QAAQI,MAAM,CAACC,WAAW,EAAEC,GAAG,EAAE;IAC7B,MAAMC,WAAW,GAAGf,eAAe,CAACgB,SAAS,CAACC,aAAa,CAACH,GAAG,CAAC;IAChE,IAAI,CAACC,WAAW,IAAI,OAAOD,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;MACzD,MAAMI,MAAM,GAAGJ,GAAG;MAClB,OAAOI,MAAM,CAACZ,MAAM,KAAKN,eAAe,CAACM,MAAM;IACnD;IACA,OAAOS,WAAW;EACtB;AACJ;AACAf,eAAe,CAACM,MAAM,GAAGM,MAAM,CAACO,GAAG,CAAC,sCAAsC,CAAC;AAC3E,OAAO,SAASD,MAAMA,CAACE,SAAS,EAAElB,IAAI,EAAEC,MAAM,EAAEC,WAAW,EAAEC,UAAU,EAAE;EACrE,MAAMgB,MAAM,GAAG,IAAIrB,eAAe,CAACoB,SAAS,GAAG,GAAG,GAAGlB,IAAI,EAAEC,MAAM,EAAEC,WAAW,EAAEC,UAAU,CAAC;EAC3FP,YAAY,CAACqB,GAAG,CAACC,SAAS,CAAC,CAACE,QAAQ,CAACpB,IAAI,EAAEmB,MAAM,CAAC;EAClD,OAAOA,MAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}