{"ast":null,"code":"const makePagedClientRequest = async (CommandCtor, client, input, withCommand = _ => _, ...args) => {\n  let command = new CommandCtor(input);\n  command = withCommand(command) ?? command;\n  return await client.send(command, ...args);\n};\nexport function createPaginator(ClientCtor, CommandCtor, inputTokenName, outputTokenName, pageSizeTokenName) {\n  return async function* paginateOperation(config, input, ...additionalArguments) {\n    const _input = input;\n    let token = config.startingToken ?? _input[inputTokenName];\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n      _input[inputTokenName] = token;\n      if (pageSizeTokenName) {\n        _input[pageSizeTokenName] = _input[pageSizeTokenName] ?? config.pageSize;\n      }\n      if (config.client instanceof ClientCtor) {\n        page = await makePagedClientRequest(CommandCtor, config.client, input, config.withCommand, ...additionalArguments);\n      } else {\n        throw new Error(`Invalid client, expected instance of ${ClientCtor.name}`);\n      }\n      yield page;\n      const prevToken = token;\n      token = get(page, outputTokenName);\n      hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n  };\n}\nconst get = (fromObject, path) => {\n  let cursor = fromObject;\n  const pathComponents = path.split(\".\");\n  for (const step of pathComponents) {\n    if (!cursor || typeof cursor !== \"object\") {\n      return undefined;\n    }\n    cursor = cursor[step];\n  }\n  return cursor;\n};","map":{"version":3,"names":["makePagedClientRequest","CommandCtor","client","input","withCommand","_","args","command","send","createPaginator","ClientCtor","inputTokenName","outputTokenName","pageSizeTokenName","paginateOperation","config","additionalArguments","_input","token","startingToken","hasNext","page","pageSize","Error","name","prevToken","get","stopOnSameToken","undefined","fromObject","path","cursor","pathComponents","split","step"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/core/dist-es/pagination/createPaginator.js"],"sourcesContent":["const makePagedClientRequest = async (CommandCtor, client, input, withCommand = (_) => _, ...args) => {\n    let command = new CommandCtor(input);\n    command = withCommand(command) ?? command;\n    return await client.send(command, ...args);\n};\nexport function createPaginator(ClientCtor, CommandCtor, inputTokenName, outputTokenName, pageSizeTokenName) {\n    return async function* paginateOperation(config, input, ...additionalArguments) {\n        const _input = input;\n        let token = config.startingToken ?? _input[inputTokenName];\n        let hasNext = true;\n        let page;\n        while (hasNext) {\n            _input[inputTokenName] = token;\n            if (pageSizeTokenName) {\n                _input[pageSizeTokenName] = _input[pageSizeTokenName] ?? config.pageSize;\n            }\n            if (config.client instanceof ClientCtor) {\n                page = await makePagedClientRequest(CommandCtor, config.client, input, config.withCommand, ...additionalArguments);\n            }\n            else {\n                throw new Error(`Invalid client, expected instance of ${ClientCtor.name}`);\n            }\n            yield page;\n            const prevToken = token;\n            token = get(page, outputTokenName);\n            hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n        }\n        return undefined;\n    };\n}\nconst get = (fromObject, path) => {\n    let cursor = fromObject;\n    const pathComponents = path.split(\".\");\n    for (const step of pathComponents) {\n        if (!cursor || typeof cursor !== \"object\") {\n            return undefined;\n        }\n        cursor = cursor[step];\n    }\n    return cursor;\n};\n"],"mappings":"AAAA,MAAMA,sBAAsB,GAAG,MAAAA,CAAOC,WAAW,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,GAAIC,CAAC,IAAKA,CAAC,EAAE,GAAGC,IAAI,KAAK;EAClG,IAAIC,OAAO,GAAG,IAAIN,WAAW,CAACE,KAAK,CAAC;EACpCI,OAAO,GAAGH,WAAW,CAACG,OAAO,CAAC,IAAIA,OAAO;EACzC,OAAO,MAAML,MAAM,CAACM,IAAI,CAACD,OAAO,EAAE,GAAGD,IAAI,CAAC;AAC9C,CAAC;AACD,OAAO,SAASG,eAAeA,CAACC,UAAU,EAAET,WAAW,EAAEU,cAAc,EAAEC,eAAe,EAAEC,iBAAiB,EAAE;EACzG,OAAO,gBAAgBC,iBAAiBA,CAACC,MAAM,EAAEZ,KAAK,EAAE,GAAGa,mBAAmB,EAAE;IAC5E,MAAMC,MAAM,GAAGd,KAAK;IACpB,IAAIe,KAAK,GAAGH,MAAM,CAACI,aAAa,IAAIF,MAAM,CAACN,cAAc,CAAC;IAC1D,IAAIS,OAAO,GAAG,IAAI;IAClB,IAAIC,IAAI;IACR,OAAOD,OAAO,EAAE;MACZH,MAAM,CAACN,cAAc,CAAC,GAAGO,KAAK;MAC9B,IAAIL,iBAAiB,EAAE;QACnBI,MAAM,CAACJ,iBAAiB,CAAC,GAAGI,MAAM,CAACJ,iBAAiB,CAAC,IAAIE,MAAM,CAACO,QAAQ;MAC5E;MACA,IAAIP,MAAM,CAACb,MAAM,YAAYQ,UAAU,EAAE;QACrCW,IAAI,GAAG,MAAMrB,sBAAsB,CAACC,WAAW,EAAEc,MAAM,CAACb,MAAM,EAAEC,KAAK,EAAEY,MAAM,CAACX,WAAW,EAAE,GAAGY,mBAAmB,CAAC;MACtH,CAAC,MACI;QACD,MAAM,IAAIO,KAAK,CAAC,wCAAwCb,UAAU,CAACc,IAAI,EAAE,CAAC;MAC9E;MACA,MAAMH,IAAI;MACV,MAAMI,SAAS,GAAGP,KAAK;MACvBA,KAAK,GAAGQ,GAAG,CAACL,IAAI,EAAET,eAAe,CAAC;MAClCQ,OAAO,GAAG,CAAC,EAAEF,KAAK,KAAK,CAACH,MAAM,CAACY,eAAe,IAAIT,KAAK,KAAKO,SAAS,CAAC,CAAC;IAC3E;IACA,OAAOG,SAAS;EACpB,CAAC;AACL;AACA,MAAMF,GAAG,GAAGA,CAACG,UAAU,EAAEC,IAAI,KAAK;EAC9B,IAAIC,MAAM,GAAGF,UAAU;EACvB,MAAMG,cAAc,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;EACtC,KAAK,MAAMC,IAAI,IAAIF,cAAc,EAAE;IAC/B,IAAI,CAACD,MAAM,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MACvC,OAAOH,SAAS;IACpB;IACAG,MAAM,GAAGA,MAAM,CAACG,IAAI,CAAC;EACzB;EACA,OAAOH,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}