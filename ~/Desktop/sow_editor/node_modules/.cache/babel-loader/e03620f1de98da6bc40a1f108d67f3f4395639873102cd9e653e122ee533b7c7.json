{"ast":null,"code":"import { SCHEMA } from \"@smithy/core/schema\";\nexport function determineTimestampFormat(ns, settings) {\n  if (settings.timestampFormat.useTrait) {\n    if (ns.isTimestampSchema() && (ns.getSchema() === SCHEMA.TIMESTAMP_DATE_TIME || ns.getSchema() === SCHEMA.TIMESTAMP_HTTP_DATE || ns.getSchema() === SCHEMA.TIMESTAMP_EPOCH_SECONDS)) {\n      return ns.getSchema();\n    }\n  }\n  const {\n    httpLabel,\n    httpPrefixHeaders,\n    httpHeader,\n    httpQuery\n  } = ns.getMergedTraits();\n  const bindingFormat = settings.httpBindings ? typeof httpPrefixHeaders === \"string\" || Boolean(httpHeader) ? SCHEMA.TIMESTAMP_HTTP_DATE : Boolean(httpQuery) || Boolean(httpLabel) ? SCHEMA.TIMESTAMP_DATE_TIME : undefined : undefined;\n  return bindingFormat ?? settings.timestampFormat.default;\n}","map":{"version":3,"names":["SCHEMA","determineTimestampFormat","ns","settings","timestampFormat","useTrait","isTimestampSchema","getSchema","TIMESTAMP_DATE_TIME","TIMESTAMP_HTTP_DATE","TIMESTAMP_EPOCH_SECONDS","httpLabel","httpPrefixHeaders","httpHeader","httpQuery","getMergedTraits","bindingFormat","httpBindings","Boolean","undefined","default"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/core/dist-es/submodules/protocols/serde/determineTimestampFormat.js"],"sourcesContent":["import { SCHEMA } from \"@smithy/core/schema\";\nexport function determineTimestampFormat(ns, settings) {\n    if (settings.timestampFormat.useTrait) {\n        if (ns.isTimestampSchema() &&\n            (ns.getSchema() === SCHEMA.TIMESTAMP_DATE_TIME ||\n                ns.getSchema() === SCHEMA.TIMESTAMP_HTTP_DATE ||\n                ns.getSchema() === SCHEMA.TIMESTAMP_EPOCH_SECONDS)) {\n            return ns.getSchema();\n        }\n    }\n    const { httpLabel, httpPrefixHeaders, httpHeader, httpQuery } = ns.getMergedTraits();\n    const bindingFormat = settings.httpBindings\n        ? typeof httpPrefixHeaders === \"string\" || Boolean(httpHeader)\n            ? SCHEMA.TIMESTAMP_HTTP_DATE\n            : Boolean(httpQuery) || Boolean(httpLabel)\n                ? SCHEMA.TIMESTAMP_DATE_TIME\n                : undefined\n        : undefined;\n    return bindingFormat ?? settings.timestampFormat.default;\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,qBAAqB;AAC5C,OAAO,SAASC,wBAAwBA,CAACC,EAAE,EAAEC,QAAQ,EAAE;EACnD,IAAIA,QAAQ,CAACC,eAAe,CAACC,QAAQ,EAAE;IACnC,IAAIH,EAAE,CAACI,iBAAiB,CAAC,CAAC,KACrBJ,EAAE,CAACK,SAAS,CAAC,CAAC,KAAKP,MAAM,CAACQ,mBAAmB,IAC1CN,EAAE,CAACK,SAAS,CAAC,CAAC,KAAKP,MAAM,CAACS,mBAAmB,IAC7CP,EAAE,CAACK,SAAS,CAAC,CAAC,KAAKP,MAAM,CAACU,uBAAuB,CAAC,EAAE;MACxD,OAAOR,EAAE,CAACK,SAAS,CAAC,CAAC;IACzB;EACJ;EACA,MAAM;IAAEI,SAAS;IAAEC,iBAAiB;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAGZ,EAAE,CAACa,eAAe,CAAC,CAAC;EACpF,MAAMC,aAAa,GAAGb,QAAQ,CAACc,YAAY,GACrC,OAAOL,iBAAiB,KAAK,QAAQ,IAAIM,OAAO,CAACL,UAAU,CAAC,GACxDb,MAAM,CAACS,mBAAmB,GAC1BS,OAAO,CAACJ,SAAS,CAAC,IAAII,OAAO,CAACP,SAAS,CAAC,GACpCX,MAAM,CAACQ,mBAAmB,GAC1BW,SAAS,GACjBA,SAAS;EACf,OAAOH,aAAa,IAAIb,QAAQ,CAACC,eAAe,CAACgB,OAAO;AAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}