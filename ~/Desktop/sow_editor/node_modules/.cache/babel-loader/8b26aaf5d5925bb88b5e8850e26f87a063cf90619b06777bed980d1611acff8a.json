{"ast":null,"code":"// Placeholder for AWS Bedrock integration\n// This will be implemented when AWS credentials are configured\n\nexport class BedrockService {\n  constructor() {\n    console.log('BedrockService initialized (placeholder mode)');\n  }\n  async sendMessage(userMessage, context = {}) {\n    // Placeholder implementation\n    console.log('Sending message to Claude:', userMessage);\n    console.log('Context:', context);\n\n    // Simulate API call delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    // Return a placeholder response\n    return `I understand you said: \"${userMessage}\". This is a placeholder response. AWS Bedrock integration will be added here to provide real Claude responses for SOW assistance.`;\n  }\n  async generateSuggestions(selectedText, sectionType = 'general') {\n    await new Promise(resolve => setTimeout(resolve, 800));\n    return `Here are suggestions for improving this ${sectionType} section: \"${selectedText}\". (Placeholder response)`;\n  }\n  async clarifyRequirements(ambiguousText) {\n    await new Promise(resolve => setTimeout(resolve, 800));\n    return `This section needs clarification: \"${ambiguousText}\". (Placeholder response)`;\n  }\n  async validateSection(sectionContent, sectionType) {\n    await new Promise(resolve => setTimeout(resolve, 800));\n    return `Validation results for ${sectionType} section: \"${sectionContent}\". (Placeholder response)`;\n  }\n}\nexport default BedrockService;","map":{"version":3,"names":["BedrockService","constructor","console","log","sendMessage","userMessage","context","Promise","resolve","setTimeout","generateSuggestions","selectedText","sectionType","clarifyRequirements","ambiguousText","validateSection","sectionContent"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/src/services/bedrockService.js"],"sourcesContent":["// Placeholder for AWS Bedrock integration\n// This will be implemented when AWS credentials are configured\n\nexport class BedrockService {\n  constructor() {\n    console.log('BedrockService initialized (placeholder mode)');\n  }\n\n  async sendMessage(userMessage, context = {}) {\n    // Placeholder implementation\n    console.log('Sending message to Claude:', userMessage);\n    console.log('Context:', context);\n    \n    // Simulate API call delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Return a placeholder response\n    return `I understand you said: \"${userMessage}\". This is a placeholder response. AWS Bedrock integration will be added here to provide real Claude responses for SOW assistance.`;\n  }\n\n  async generateSuggestions(selectedText, sectionType = 'general') {\n    await new Promise(resolve => setTimeout(resolve, 800));\n    return `Here are suggestions for improving this ${sectionType} section: \"${selectedText}\". (Placeholder response)`;\n  }\n\n  async clarifyRequirements(ambiguousText) {\n    await new Promise(resolve => setTimeout(resolve, 800));\n    return `This section needs clarification: \"${ambiguousText}\". (Placeholder response)`;\n  }\n\n  async validateSection(sectionContent, sectionType) {\n    await new Promise(resolve => setTimeout(resolve, 800));\n    return `Validation results for ${sectionType} section: \"${sectionContent}\". (Placeholder response)`;\n  }\n}\n\nexport default BedrockService;"],"mappings":"AAAA;AACA;;AAEA,OAAO,MAAMA,cAAc,CAAC;EAC1BC,WAAWA,CAAA,EAAG;IACZC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;EAC9D;EAEA,MAAMC,WAAWA,CAACC,WAAW,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC3C;IACAJ,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,WAAW,CAAC;IACtDH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEG,OAAO,CAAC;;IAEhC;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;IAEvD;IACA,OAAO,2BAA2BH,WAAW,oIAAoI;EACnL;EAEA,MAAMK,mBAAmBA,CAACC,YAAY,EAAEC,WAAW,GAAG,SAAS,EAAE;IAC/D,MAAM,IAAIL,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;IACtD,OAAO,2CAA2CI,WAAW,cAAcD,YAAY,2BAA2B;EACpH;EAEA,MAAME,mBAAmBA,CAACC,aAAa,EAAE;IACvC,MAAM,IAAIP,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;IACtD,OAAO,sCAAsCM,aAAa,2BAA2B;EACvF;EAEA,MAAMC,eAAeA,CAACC,cAAc,EAAEJ,WAAW,EAAE;IACjD,MAAM,IAAIL,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;IACtD,OAAO,0BAA0BI,WAAW,cAAcI,cAAc,2BAA2B;EACrG;AACF;AAEA,eAAehB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}