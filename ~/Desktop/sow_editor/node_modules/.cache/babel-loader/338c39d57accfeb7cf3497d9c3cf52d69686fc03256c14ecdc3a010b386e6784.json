{"ast":null,"code":"import { EventStreamCodec } from \"@smithy/eventstream-codec\";\nimport { getEventSigningTransformStream } from \"./get-event-signing-stream\";\nexport class EventStreamPayloadHandler {\n  messageSigner;\n  eventStreamCodec;\n  systemClockOffsetProvider;\n  constructor(options) {\n    this.messageSigner = options.messageSigner;\n    this.eventStreamCodec = new EventStreamCodec(options.utf8Encoder, options.utf8Decoder);\n    this.systemClockOffsetProvider = async () => options.systemClockOffset ?? 0;\n  }\n  async handle(next, args, context = {}) {\n    const request = args.request;\n    const {\n      body: payload,\n      headers,\n      query\n    } = request;\n    if (!(payload instanceof ReadableStream)) {\n      throw new Error(\"Eventstream payload must be a ReadableStream.\");\n    }\n    const placeHolderStream = new TransformStream();\n    request.body = placeHolderStream.readable;\n    let result;\n    try {\n      result = await next(args);\n    } catch (e) {\n      request.body.cancel();\n      throw e;\n    }\n    const match = (headers[\"authorization\"] || \"\").match(/Signature=([\\w]+)$/);\n    const priorSignature = (match || [])[1] || query && query[\"X-Amz-Signature\"] || \"\";\n    const signingStream = getEventSigningTransformStream(priorSignature, await this.messageSigner(), this.eventStreamCodec, this.systemClockOffsetProvider);\n    const signedPayload = payload.pipeThrough(signingStream);\n    signedPayload.pipeThrough(placeHolderStream);\n    return result;\n  }\n}","map":{"version":3,"names":["EventStreamCodec","getEventSigningTransformStream","EventStreamPayloadHandler","messageSigner","eventStreamCodec","systemClockOffsetProvider","constructor","options","utf8Encoder","utf8Decoder","systemClockOffset","handle","next","args","context","request","body","payload","headers","query","ReadableStream","Error","placeHolderStream","TransformStream","readable","result","e","cancel","match","priorSignature","signingStream","signedPayload","pipeThrough"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@aws-sdk/middleware-websocket/dist-es/EventStreamPayloadHandler.js"],"sourcesContent":["import { EventStreamCodec } from \"@smithy/eventstream-codec\";\nimport { getEventSigningTransformStream } from \"./get-event-signing-stream\";\nexport class EventStreamPayloadHandler {\n    messageSigner;\n    eventStreamCodec;\n    systemClockOffsetProvider;\n    constructor(options) {\n        this.messageSigner = options.messageSigner;\n        this.eventStreamCodec = new EventStreamCodec(options.utf8Encoder, options.utf8Decoder);\n        this.systemClockOffsetProvider = async () => options.systemClockOffset ?? 0;\n    }\n    async handle(next, args, context = {}) {\n        const request = args.request;\n        const { body: payload, headers, query } = request;\n        if (!(payload instanceof ReadableStream)) {\n            throw new Error(\"Eventstream payload must be a ReadableStream.\");\n        }\n        const placeHolderStream = new TransformStream();\n        request.body = placeHolderStream.readable;\n        let result;\n        try {\n            result = await next(args);\n        }\n        catch (e) {\n            request.body.cancel();\n            throw e;\n        }\n        const match = (headers[\"authorization\"] || \"\").match(/Signature=([\\w]+)$/);\n        const priorSignature = (match || [])[1] || (query && query[\"X-Amz-Signature\"]) || \"\";\n        const signingStream = getEventSigningTransformStream(priorSignature, await this.messageSigner(), this.eventStreamCodec, this.systemClockOffsetProvider);\n        const signedPayload = payload.pipeThrough(signingStream);\n        signedPayload.pipeThrough(placeHolderStream);\n        return result;\n    }\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,8BAA8B,QAAQ,4BAA4B;AAC3E,OAAO,MAAMC,yBAAyB,CAAC;EACnCC,aAAa;EACbC,gBAAgB;EAChBC,yBAAyB;EACzBC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACJ,aAAa,GAAGI,OAAO,CAACJ,aAAa;IAC1C,IAAI,CAACC,gBAAgB,GAAG,IAAIJ,gBAAgB,CAACO,OAAO,CAACC,WAAW,EAAED,OAAO,CAACE,WAAW,CAAC;IACtF,IAAI,CAACJ,yBAAyB,GAAG,YAAYE,OAAO,CAACG,iBAAiB,IAAI,CAAC;EAC/E;EACA,MAAMC,MAAMA,CAACC,IAAI,EAAEC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACnC,MAAMC,OAAO,GAAGF,IAAI,CAACE,OAAO;IAC5B,MAAM;MAAEC,IAAI,EAAEC,OAAO;MAAEC,OAAO;MAAEC;IAAM,CAAC,GAAGJ,OAAO;IACjD,IAAI,EAAEE,OAAO,YAAYG,cAAc,CAAC,EAAE;MACtC,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;IACpE;IACA,MAAMC,iBAAiB,GAAG,IAAIC,eAAe,CAAC,CAAC;IAC/CR,OAAO,CAACC,IAAI,GAAGM,iBAAiB,CAACE,QAAQ;IACzC,IAAIC,MAAM;IACV,IAAI;MACAA,MAAM,GAAG,MAAMb,IAAI,CAACC,IAAI,CAAC;IAC7B,CAAC,CACD,OAAOa,CAAC,EAAE;MACNX,OAAO,CAACC,IAAI,CAACW,MAAM,CAAC,CAAC;MACrB,MAAMD,CAAC;IACX;IACA,MAAME,KAAK,GAAG,CAACV,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE,EAAEU,KAAK,CAAC,oBAAoB,CAAC;IAC1E,MAAMC,cAAc,GAAG,CAACD,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC,IAAKT,KAAK,IAAIA,KAAK,CAAC,iBAAiB,CAAE,IAAI,EAAE;IACpF,MAAMW,aAAa,GAAG7B,8BAA8B,CAAC4B,cAAc,EAAE,MAAM,IAAI,CAAC1B,aAAa,CAAC,CAAC,EAAE,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAACC,yBAAyB,CAAC;IACvJ,MAAM0B,aAAa,GAAGd,OAAO,CAACe,WAAW,CAACF,aAAa,CAAC;IACxDC,aAAa,CAACC,WAAW,CAACV,iBAAiB,CAAC;IAC5C,OAAOG,MAAM;EACjB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}