{"ast":null,"code":"import { Sha256 as WebCryptoSha256 } from \"./webCryptoSha256\";\nimport { Sha256 as JsSha256 } from \"@aws-crypto/sha256-js\";\nimport { supportsWebCrypto } from \"@aws-crypto/supports-web-crypto\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\nimport { convertToBuffer } from \"@aws-crypto/util\";\nvar Sha256 = /** @class */function () {\n  function Sha256(secret) {\n    if (supportsWebCrypto(locateWindow())) {\n      this.hash = new WebCryptoSha256(secret);\n    } else {\n      this.hash = new JsSha256(secret);\n    }\n  }\n  Sha256.prototype.update = function (data, encoding) {\n    this.hash.update(convertToBuffer(data));\n  };\n  Sha256.prototype.digest = function () {\n    return this.hash.digest();\n  };\n  Sha256.prototype.reset = function () {\n    this.hash.reset();\n  };\n  return Sha256;\n}();\nexport { Sha256 };","map":{"version":3,"names":["Sha256","WebCryptoSha256","JsSha256","supportsWebCrypto","locateWindow","convertToBuffer","secret","hash","prototype","update","data","encoding","digest","reset"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@aws-crypto/sha256-browser/src/crossPlatformSha256.ts"],"sourcesContent":["import { Sha256 as WebCryptoSha256 } from \"./webCryptoSha256\";\nimport { Sha256 as JsSha256 } from \"@aws-crypto/sha256-js\";\nimport { Checksum, SourceData } from \"@aws-sdk/types\";\nimport { supportsWebCrypto } from \"@aws-crypto/supports-web-crypto\";\nimport { locateWindow } from \"@aws-sdk/util-locate-window\";\nimport { convertToBuffer } from \"@aws-crypto/util\";\n\nexport class Sha256 implements Checksum {\n  private hash: Checksum;\n\n  constructor(secret?: SourceData) {\n    if (supportsWebCrypto(locateWindow())) {\n      this.hash = new WebCryptoSha256(secret);\n    } else {\n      this.hash = new JsSha256(secret);\n    }\n  }\n\n  update(data: SourceData, encoding?: \"utf8\" | \"ascii\" | \"latin1\"): void {\n    this.hash.update(convertToBuffer(data));\n  }\n\n  digest(): Promise<Uint8Array> {\n    return this.hash.digest();\n  }\n\n  reset(): void {\n    this.hash.reset();\n  }\n}\n"],"mappings":"AAAA,SAASA,MAAM,IAAIC,eAAe,QAAQ,mBAAmB;AAC7D,SAASD,MAAM,IAAIE,QAAQ,QAAQ,uBAAuB;AAE1D,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,eAAe,QAAQ,kBAAkB;AAElD,IAAAL,MAAA;EAGE,SAAAA,OAAYM,MAAmB;IAC7B,IAAIH,iBAAiB,CAACC,YAAY,EAAE,CAAC,EAAE;MACrC,IAAI,CAACG,IAAI,GAAG,IAAIN,eAAe,CAACK,MAAM,CAAC;KACxC,MAAM;MACL,IAAI,CAACC,IAAI,GAAG,IAAIL,QAAQ,CAACI,MAAM,CAAC;;EAEpC;EAEAN,MAAA,CAAAQ,SAAA,CAAAC,MAAM,GAAN,UAAOC,IAAgB,EAAEC,QAAsC;IAC7D,IAAI,CAACJ,IAAI,CAACE,MAAM,CAACJ,eAAe,CAACK,IAAI,CAAC,CAAC;EACzC,CAAC;EAEDV,MAAA,CAAAQ,SAAA,CAAAI,MAAM,GAAN;IACE,OAAO,IAAI,CAACL,IAAI,CAACK,MAAM,EAAE;EAC3B,CAAC;EAEDZ,MAAA,CAAAQ,SAAA,CAAAK,KAAK,GAAL;IACE,IAAI,CAACN,IAAI,CAACM,KAAK,EAAE;EACnB,CAAC;EACH,OAAAb,MAAC;AAAD,CAAC,CAtBD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}