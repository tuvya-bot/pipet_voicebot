{"ast":null,"code":"import { NormalizedSchema } from \"@smithy/core/schema\";\nimport { ToStringShapeSerializer } from \"./ToStringShapeSerializer\";\nexport class HttpInterceptingShapeSerializer {\n  constructor(codecSerializer, codecSettings, stringSerializer = new ToStringShapeSerializer(codecSettings)) {\n    this.codecSerializer = codecSerializer;\n    this.stringSerializer = stringSerializer;\n  }\n  setSerdeContext(serdeContext) {\n    this.codecSerializer.setSerdeContext(serdeContext);\n    this.stringSerializer.setSerdeContext(serdeContext);\n  }\n  write(schema, value) {\n    const ns = NormalizedSchema.of(schema);\n    const traits = ns.getMergedTraits();\n    if (traits.httpHeader || traits.httpLabel || traits.httpQuery) {\n      this.stringSerializer.write(ns, value);\n      this.buffer = this.stringSerializer.flush();\n      return;\n    }\n    return this.codecSerializer.write(ns, value);\n  }\n  flush() {\n    if (this.buffer !== undefined) {\n      const buffer = this.buffer;\n      this.buffer = undefined;\n      return buffer;\n    }\n    return this.codecSerializer.flush();\n  }\n}","map":{"version":3,"names":["NormalizedSchema","ToStringShapeSerializer","HttpInterceptingShapeSerializer","constructor","codecSerializer","codecSettings","stringSerializer","setSerdeContext","serdeContext","write","schema","value","ns","of","traits","getMergedTraits","httpHeader","httpLabel","httpQuery","buffer","flush","undefined"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/core/dist-es/submodules/protocols/serde/HttpInterceptingShapeSerializer.js"],"sourcesContent":["import { NormalizedSchema } from \"@smithy/core/schema\";\nimport { ToStringShapeSerializer } from \"./ToStringShapeSerializer\";\nexport class HttpInterceptingShapeSerializer {\n    constructor(codecSerializer, codecSettings, stringSerializer = new ToStringShapeSerializer(codecSettings)) {\n        this.codecSerializer = codecSerializer;\n        this.stringSerializer = stringSerializer;\n    }\n    setSerdeContext(serdeContext) {\n        this.codecSerializer.setSerdeContext(serdeContext);\n        this.stringSerializer.setSerdeContext(serdeContext);\n    }\n    write(schema, value) {\n        const ns = NormalizedSchema.of(schema);\n        const traits = ns.getMergedTraits();\n        if (traits.httpHeader || traits.httpLabel || traits.httpQuery) {\n            this.stringSerializer.write(ns, value);\n            this.buffer = this.stringSerializer.flush();\n            return;\n        }\n        return this.codecSerializer.write(ns, value);\n    }\n    flush() {\n        if (this.buffer !== undefined) {\n            const buffer = this.buffer;\n            this.buffer = undefined;\n            return buffer;\n        }\n        return this.codecSerializer.flush();\n    }\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,uBAAuB,QAAQ,2BAA2B;AACnE,OAAO,MAAMC,+BAA+B,CAAC;EACzCC,WAAWA,CAACC,eAAe,EAAEC,aAAa,EAAEC,gBAAgB,GAAG,IAAIL,uBAAuB,CAACI,aAAa,CAAC,EAAE;IACvG,IAAI,CAACD,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACE,gBAAgB,GAAGA,gBAAgB;EAC5C;EACAC,eAAeA,CAACC,YAAY,EAAE;IAC1B,IAAI,CAACJ,eAAe,CAACG,eAAe,CAACC,YAAY,CAAC;IAClD,IAAI,CAACF,gBAAgB,CAACC,eAAe,CAACC,YAAY,CAAC;EACvD;EACAC,KAAKA,CAACC,MAAM,EAAEC,KAAK,EAAE;IACjB,MAAMC,EAAE,GAAGZ,gBAAgB,CAACa,EAAE,CAACH,MAAM,CAAC;IACtC,MAAMI,MAAM,GAAGF,EAAE,CAACG,eAAe,CAAC,CAAC;IACnC,IAAID,MAAM,CAACE,UAAU,IAAIF,MAAM,CAACG,SAAS,IAAIH,MAAM,CAACI,SAAS,EAAE;MAC3D,IAAI,CAACZ,gBAAgB,CAACG,KAAK,CAACG,EAAE,EAAED,KAAK,CAAC;MACtC,IAAI,CAACQ,MAAM,GAAG,IAAI,CAACb,gBAAgB,CAACc,KAAK,CAAC,CAAC;MAC3C;IACJ;IACA,OAAO,IAAI,CAAChB,eAAe,CAACK,KAAK,CAACG,EAAE,EAAED,KAAK,CAAC;EAChD;EACAS,KAAKA,CAAA,EAAG;IACJ,IAAI,IAAI,CAACD,MAAM,KAAKE,SAAS,EAAE;MAC3B,MAAMF,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAI,CAACA,MAAM,GAAGE,SAAS;MACvB,OAAOF,MAAM;IACjB;IACA,OAAO,IAAI,CAACf,eAAe,CAACgB,KAAK,CAAC,CAAC;EACvC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}