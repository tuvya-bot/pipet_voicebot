{"ast":null,"code":"import { buildQueryString } from \"@smithy/querystring-builder\";\nexport function formatUrl(request) {\n  const {\n    port,\n    query\n  } = request;\n  let {\n    protocol,\n    path,\n    hostname\n  } = request;\n  if (protocol && protocol.slice(-1) !== \":\") {\n    protocol += \":\";\n  }\n  if (port) {\n    hostname += `:${port}`;\n  }\n  if (path && path.charAt(0) !== \"/\") {\n    path = `/${path}`;\n  }\n  let queryString = query ? buildQueryString(query) : \"\";\n  if (queryString && queryString[0] !== \"?\") {\n    queryString = `?${queryString}`;\n  }\n  let auth = \"\";\n  if (request.username != null || request.password != null) {\n    const username = request.username ?? \"\";\n    const password = request.password ?? \"\";\n    auth = `${username}:${password}@`;\n  }\n  let fragment = \"\";\n  if (request.fragment) {\n    fragment = `#${request.fragment}`;\n  }\n  return `${protocol}//${auth}${hostname}${path}${queryString}${fragment}`;\n}","map":{"version":3,"names":["buildQueryString","formatUrl","request","port","query","protocol","path","hostname","slice","charAt","queryString","auth","username","password","fragment"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@aws-sdk/util-format-url/dist-es/index.js"],"sourcesContent":["import { buildQueryString } from \"@smithy/querystring-builder\";\nexport function formatUrl(request) {\n    const { port, query } = request;\n    let { protocol, path, hostname } = request;\n    if (protocol && protocol.slice(-1) !== \":\") {\n        protocol += \":\";\n    }\n    if (port) {\n        hostname += `:${port}`;\n    }\n    if (path && path.charAt(0) !== \"/\") {\n        path = `/${path}`;\n    }\n    let queryString = query ? buildQueryString(query) : \"\";\n    if (queryString && queryString[0] !== \"?\") {\n        queryString = `?${queryString}`;\n    }\n    let auth = \"\";\n    if (request.username != null || request.password != null) {\n        const username = request.username ?? \"\";\n        const password = request.password ?? \"\";\n        auth = `${username}:${password}@`;\n    }\n    let fragment = \"\";\n    if (request.fragment) {\n        fragment = `#${request.fragment}`;\n    }\n    return `${protocol}//${auth}${hostname}${path}${queryString}${fragment}`;\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,6BAA6B;AAC9D,OAAO,SAASC,SAASA,CAACC,OAAO,EAAE;EAC/B,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGF,OAAO;EAC/B,IAAI;IAAEG,QAAQ;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGL,OAAO;EAC1C,IAAIG,QAAQ,IAAIA,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACxCH,QAAQ,IAAI,GAAG;EACnB;EACA,IAAIF,IAAI,EAAE;IACNI,QAAQ,IAAI,IAAIJ,IAAI,EAAE;EAC1B;EACA,IAAIG,IAAI,IAAIA,IAAI,CAACG,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IAChCH,IAAI,GAAG,IAAIA,IAAI,EAAE;EACrB;EACA,IAAII,WAAW,GAAGN,KAAK,GAAGJ,gBAAgB,CAACI,KAAK,CAAC,GAAG,EAAE;EACtD,IAAIM,WAAW,IAAIA,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACvCA,WAAW,GAAG,IAAIA,WAAW,EAAE;EACnC;EACA,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIT,OAAO,CAACU,QAAQ,IAAI,IAAI,IAAIV,OAAO,CAACW,QAAQ,IAAI,IAAI,EAAE;IACtD,MAAMD,QAAQ,GAAGV,OAAO,CAACU,QAAQ,IAAI,EAAE;IACvC,MAAMC,QAAQ,GAAGX,OAAO,CAACW,QAAQ,IAAI,EAAE;IACvCF,IAAI,GAAG,GAAGC,QAAQ,IAAIC,QAAQ,GAAG;EACrC;EACA,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIZ,OAAO,CAACY,QAAQ,EAAE;IAClBA,QAAQ,GAAG,IAAIZ,OAAO,CAACY,QAAQ,EAAE;EACrC;EACA,OAAO,GAAGT,QAAQ,KAAKM,IAAI,GAAGJ,QAAQ,GAAGD,IAAI,GAAGI,WAAW,GAAGI,QAAQ,EAAE;AAC5E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}