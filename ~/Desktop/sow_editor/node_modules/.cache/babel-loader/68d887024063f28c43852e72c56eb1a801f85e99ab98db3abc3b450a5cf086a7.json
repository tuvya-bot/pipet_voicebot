{"ast":null,"code":"import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { HttpBearerAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultBedrockRuntimeHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = config => {\n  return {\n    apiVersion: \"2023-09-30\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    extensions: config?.extensions ?? [],\n    httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultBedrockRuntimeHttpAuthSchemeProvider,\n    httpAuthSchemes: config?.httpAuthSchemes ?? [{\n      schemeId: \"aws.auth#sigv4\",\n      identityProvider: ipc => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n      signer: new AwsSdkSigV4Signer()\n    }, {\n      schemeId: \"smithy.api#httpBearerAuth\",\n      identityProvider: ipc => ipc.getIdentityProvider(\"smithy.api#httpBearerAuth\"),\n      signer: new HttpBearerAuthSigner()\n    }],\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"Bedrock Runtime\",\n    urlParser: config?.urlParser ?? parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8\n  };\n};","map":{"version":3,"names":["AwsSdkSigV4Signer","HttpBearerAuthSigner","NoOpLogger","parseUrl","fromBase64","toBase64","fromUtf8","toUtf8","defaultBedrockRuntimeHttpAuthSchemeProvider","defaultEndpointResolver","getRuntimeConfig","config","apiVersion","base64Decoder","base64Encoder","disableHostPrefix","endpointProvider","extensions","httpAuthSchemeProvider","httpAuthSchemes","schemeId","identityProvider","ipc","getIdentityProvider","signer","logger","serviceId","urlParser","utf8Decoder","utf8Encoder"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@aws-sdk/client-bedrock-runtime/dist-es/runtimeConfig.shared.js"],"sourcesContent":["import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { HttpBearerAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultBedrockRuntimeHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2023-09-30\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultBedrockRuntimeHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#httpBearerAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#httpBearerAuth\"),\n                signer: new HttpBearerAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"Bedrock Runtime\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,eAAe;AACjD,SAASC,oBAAoB,QAAQ,cAAc;AACnD,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,UAAU,EAAEC,QAAQ,QAAQ,qBAAqB;AAC1D,SAASC,QAAQ,EAAEC,MAAM,QAAQ,mBAAmB;AACpD,SAASC,2CAA2C,QAAQ,+BAA+B;AAC3F,SAASC,uBAAuB,QAAQ,6BAA6B;AACrE,OAAO,MAAMC,gBAAgB,GAAIC,MAAM,IAAK;EACxC,OAAO;IACHC,UAAU,EAAE,YAAY;IACxBC,aAAa,EAAEF,MAAM,EAAEE,aAAa,IAAIT,UAAU;IAClDU,aAAa,EAAEH,MAAM,EAAEG,aAAa,IAAIT,QAAQ;IAChDU,iBAAiB,EAAEJ,MAAM,EAAEI,iBAAiB,IAAI,KAAK;IACrDC,gBAAgB,EAAEL,MAAM,EAAEK,gBAAgB,IAAIP,uBAAuB;IACrEQ,UAAU,EAAEN,MAAM,EAAEM,UAAU,IAAI,EAAE;IACpCC,sBAAsB,EAAEP,MAAM,EAAEO,sBAAsB,IAAIV,2CAA2C;IACrGW,eAAe,EAAER,MAAM,EAAEQ,eAAe,IAAI,CACxC;MACIC,QAAQ,EAAE,gBAAgB;MAC1BC,gBAAgB,EAAGC,GAAG,IAAKA,GAAG,CAACC,mBAAmB,CAAC,gBAAgB,CAAC;MACpEC,MAAM,EAAE,IAAIxB,iBAAiB,CAAC;IAClC,CAAC,EACD;MACIoB,QAAQ,EAAE,2BAA2B;MACrCC,gBAAgB,EAAGC,GAAG,IAAKA,GAAG,CAACC,mBAAmB,CAAC,2BAA2B,CAAC;MAC/EC,MAAM,EAAE,IAAIvB,oBAAoB,CAAC;IACrC,CAAC,CACJ;IACDwB,MAAM,EAAEd,MAAM,EAAEc,MAAM,IAAI,IAAIvB,UAAU,CAAC,CAAC;IAC1CwB,SAAS,EAAEf,MAAM,EAAEe,SAAS,IAAI,iBAAiB;IACjDC,SAAS,EAAEhB,MAAM,EAAEgB,SAAS,IAAIxB,QAAQ;IACxCyB,WAAW,EAAEjB,MAAM,EAAEiB,WAAW,IAAItB,QAAQ;IAC5CuB,WAAW,EAAElB,MAAM,EAAEkB,WAAW,IAAItB;EACxC,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}