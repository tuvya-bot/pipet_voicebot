{"ast":null,"code":"export class ByteArrayCollector {\n  constructor(allocByteArray) {\n    this.allocByteArray = allocByteArray;\n    this.byteLength = 0;\n    this.byteArrays = [];\n  }\n  push(byteArray) {\n    this.byteArrays.push(byteArray);\n    this.byteLength += byteArray.byteLength;\n  }\n  flush() {\n    if (this.byteArrays.length === 1) {\n      const bytes = this.byteArrays[0];\n      this.reset();\n      return bytes;\n    }\n    const aggregation = this.allocByteArray(this.byteLength);\n    let cursor = 0;\n    for (let i = 0; i < this.byteArrays.length; ++i) {\n      const bytes = this.byteArrays[i];\n      aggregation.set(bytes, cursor);\n      cursor += bytes.byteLength;\n    }\n    this.reset();\n    return aggregation;\n  }\n  reset() {\n    this.byteArrays = [];\n    this.byteLength = 0;\n  }\n}","map":{"version":3,"names":["ByteArrayCollector","constructor","allocByteArray","byteLength","byteArrays","push","byteArray","flush","length","bytes","reset","aggregation","cursor","i","set"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/util-stream/dist-es/ByteArrayCollector.js"],"sourcesContent":["export class ByteArrayCollector {\n    constructor(allocByteArray) {\n        this.allocByteArray = allocByteArray;\n        this.byteLength = 0;\n        this.byteArrays = [];\n    }\n    push(byteArray) {\n        this.byteArrays.push(byteArray);\n        this.byteLength += byteArray.byteLength;\n    }\n    flush() {\n        if (this.byteArrays.length === 1) {\n            const bytes = this.byteArrays[0];\n            this.reset();\n            return bytes;\n        }\n        const aggregation = this.allocByteArray(this.byteLength);\n        let cursor = 0;\n        for (let i = 0; i < this.byteArrays.length; ++i) {\n            const bytes = this.byteArrays[i];\n            aggregation.set(bytes, cursor);\n            cursor += bytes.byteLength;\n        }\n        this.reset();\n        return aggregation;\n    }\n    reset() {\n        this.byteArrays = [];\n        this.byteLength = 0;\n    }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,CAAC;EAC5BC,WAAWA,CAACC,cAAc,EAAE;IACxB,IAAI,CAACA,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,UAAU,GAAG,EAAE;EACxB;EACAC,IAAIA,CAACC,SAAS,EAAE;IACZ,IAAI,CAACF,UAAU,CAACC,IAAI,CAACC,SAAS,CAAC;IAC/B,IAAI,CAACH,UAAU,IAAIG,SAAS,CAACH,UAAU;EAC3C;EACAI,KAAKA,CAAA,EAAG;IACJ,IAAI,IAAI,CAACH,UAAU,CAACI,MAAM,KAAK,CAAC,EAAE;MAC9B,MAAMC,KAAK,GAAG,IAAI,CAACL,UAAU,CAAC,CAAC,CAAC;MAChC,IAAI,CAACM,KAAK,CAAC,CAAC;MACZ,OAAOD,KAAK;IAChB;IACA,MAAME,WAAW,GAAG,IAAI,CAACT,cAAc,CAAC,IAAI,CAACC,UAAU,CAAC;IACxD,IAAIS,MAAM,GAAG,CAAC;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACT,UAAU,CAACI,MAAM,EAAE,EAAEK,CAAC,EAAE;MAC7C,MAAMJ,KAAK,GAAG,IAAI,CAACL,UAAU,CAACS,CAAC,CAAC;MAChCF,WAAW,CAACG,GAAG,CAACL,KAAK,EAAEG,MAAM,CAAC;MAC9BA,MAAM,IAAIH,KAAK,CAACN,UAAU;IAC9B;IACA,IAAI,CAACO,KAAK,CAAC,CAAC;IACZ,OAAOC,WAAW;EACtB;EACAD,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACN,UAAU,GAAG,EAAE;IACpB,IAAI,CAACD,UAAU,GAAG,CAAC;EACvB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}