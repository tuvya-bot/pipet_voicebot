{"ast":null,"code":"import { EndpointError } from \"../types\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const evaluateErrorRule = (errorRule, options) => {\n  const {\n    conditions,\n    error\n  } = errorRule;\n  const {\n    result,\n    referenceRecord\n  } = evaluateConditions(conditions, options);\n  if (!result) {\n    return;\n  }\n  throw new EndpointError(evaluateExpression(error, \"Error\", {\n    ...options,\n    referenceRecord: {\n      ...options.referenceRecord,\n      ...referenceRecord\n    }\n  }));\n};","map":{"version":3,"names":["EndpointError","evaluateConditions","evaluateExpression","evaluateErrorRule","errorRule","options","conditions","error","result","referenceRecord"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/util-endpoints/dist-es/utils/evaluateErrorRule.js"],"sourcesContent":["import { EndpointError } from \"../types\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new EndpointError(evaluateExpression(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,UAAU;AACxC,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;EACrD,MAAM;IAAEC,UAAU;IAAEC;EAAM,CAAC,GAAGH,SAAS;EACvC,MAAM;IAAEI,MAAM;IAAEC;EAAgB,CAAC,GAAGR,kBAAkB,CAACK,UAAU,EAAED,OAAO,CAAC;EAC3E,IAAI,CAACG,MAAM,EAAE;IACT;EACJ;EACA,MAAM,IAAIR,aAAa,CAACE,kBAAkB,CAACK,KAAK,EAAE,OAAO,EAAE;IACvD,GAAGF,OAAO;IACVI,eAAe,EAAE;MAAE,GAAGJ,OAAO,CAACI,eAAe;MAAE,GAAGA;IAAgB;EACtE,CAAC,CAAC,CAAC;AACP,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}