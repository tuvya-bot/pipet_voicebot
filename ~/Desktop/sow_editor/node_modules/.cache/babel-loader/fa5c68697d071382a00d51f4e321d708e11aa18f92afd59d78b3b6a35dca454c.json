{"ast":null,"code":"import { NormalizedSchema } from \"@smithy/core/schema\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { FromStringShapeDeserializer } from \"./FromStringShapeDeserializer\";\nexport class HttpInterceptingShapeDeserializer {\n  constructor(codecDeserializer, codecSettings) {\n    this.codecDeserializer = codecDeserializer;\n    this.stringDeserializer = new FromStringShapeDeserializer(codecSettings);\n  }\n  setSerdeContext(serdeContext) {\n    this.stringDeserializer.setSerdeContext(serdeContext);\n    this.codecDeserializer.setSerdeContext(serdeContext);\n    this.serdeContext = serdeContext;\n  }\n  read(schema, data) {\n    const ns = NormalizedSchema.of(schema);\n    const traits = ns.getMergedTraits();\n    const toString = this.serdeContext?.utf8Encoder ?? toUtf8;\n    if (traits.httpHeader || traits.httpResponseCode) {\n      return this.stringDeserializer.read(ns, toString(data));\n    }\n    if (traits.httpPayload) {\n      if (ns.isBlobSchema()) {\n        const toBytes = this.serdeContext?.utf8Decoder ?? fromUtf8;\n        if (typeof data === \"string\") {\n          return toBytes(data);\n        }\n        return data;\n      } else if (ns.isStringSchema()) {\n        if (\"byteLength\" in data) {\n          return toString(data);\n        }\n        return data;\n      }\n    }\n    return this.codecDeserializer.read(ns, data);\n  }\n}","map":{"version":3,"names":["NormalizedSchema","fromUtf8","toUtf8","FromStringShapeDeserializer","HttpInterceptingShapeDeserializer","constructor","codecDeserializer","codecSettings","stringDeserializer","setSerdeContext","serdeContext","read","schema","data","ns","of","traits","getMergedTraits","toString","utf8Encoder","httpHeader","httpResponseCode","httpPayload","isBlobSchema","toBytes","utf8Decoder","isStringSchema"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/core/dist-es/submodules/protocols/serde/HttpInterceptingShapeDeserializer.js"],"sourcesContent":["import { NormalizedSchema } from \"@smithy/core/schema\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { FromStringShapeDeserializer } from \"./FromStringShapeDeserializer\";\nexport class HttpInterceptingShapeDeserializer {\n    constructor(codecDeserializer, codecSettings) {\n        this.codecDeserializer = codecDeserializer;\n        this.stringDeserializer = new FromStringShapeDeserializer(codecSettings);\n    }\n    setSerdeContext(serdeContext) {\n        this.stringDeserializer.setSerdeContext(serdeContext);\n        this.codecDeserializer.setSerdeContext(serdeContext);\n        this.serdeContext = serdeContext;\n    }\n    read(schema, data) {\n        const ns = NormalizedSchema.of(schema);\n        const traits = ns.getMergedTraits();\n        const toString = this.serdeContext?.utf8Encoder ?? toUtf8;\n        if (traits.httpHeader || traits.httpResponseCode) {\n            return this.stringDeserializer.read(ns, toString(data));\n        }\n        if (traits.httpPayload) {\n            if (ns.isBlobSchema()) {\n                const toBytes = this.serdeContext?.utf8Decoder ?? fromUtf8;\n                if (typeof data === \"string\") {\n                    return toBytes(data);\n                }\n                return data;\n            }\n            else if (ns.isStringSchema()) {\n                if (\"byteLength\" in data) {\n                    return toString(data);\n                }\n                return data;\n            }\n        }\n        return this.codecDeserializer.read(ns, data);\n    }\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,mBAAmB;AACpD,SAASC,2BAA2B,QAAQ,+BAA+B;AAC3E,OAAO,MAAMC,iCAAiC,CAAC;EAC3CC,WAAWA,CAACC,iBAAiB,EAAEC,aAAa,EAAE;IAC1C,IAAI,CAACD,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACE,kBAAkB,GAAG,IAAIL,2BAA2B,CAACI,aAAa,CAAC;EAC5E;EACAE,eAAeA,CAACC,YAAY,EAAE;IAC1B,IAAI,CAACF,kBAAkB,CAACC,eAAe,CAACC,YAAY,CAAC;IACrD,IAAI,CAACJ,iBAAiB,CAACG,eAAe,CAACC,YAAY,CAAC;IACpD,IAAI,CAACA,YAAY,GAAGA,YAAY;EACpC;EACAC,IAAIA,CAACC,MAAM,EAAEC,IAAI,EAAE;IACf,MAAMC,EAAE,GAAGd,gBAAgB,CAACe,EAAE,CAACH,MAAM,CAAC;IACtC,MAAMI,MAAM,GAAGF,EAAE,CAACG,eAAe,CAAC,CAAC;IACnC,MAAMC,QAAQ,GAAG,IAAI,CAACR,YAAY,EAAES,WAAW,IAAIjB,MAAM;IACzD,IAAIc,MAAM,CAACI,UAAU,IAAIJ,MAAM,CAACK,gBAAgB,EAAE;MAC9C,OAAO,IAAI,CAACb,kBAAkB,CAACG,IAAI,CAACG,EAAE,EAAEI,QAAQ,CAACL,IAAI,CAAC,CAAC;IAC3D;IACA,IAAIG,MAAM,CAACM,WAAW,EAAE;MACpB,IAAIR,EAAE,CAACS,YAAY,CAAC,CAAC,EAAE;QACnB,MAAMC,OAAO,GAAG,IAAI,CAACd,YAAY,EAAEe,WAAW,IAAIxB,QAAQ;QAC1D,IAAI,OAAOY,IAAI,KAAK,QAAQ,EAAE;UAC1B,OAAOW,OAAO,CAACX,IAAI,CAAC;QACxB;QACA,OAAOA,IAAI;MACf,CAAC,MACI,IAAIC,EAAE,CAACY,cAAc,CAAC,CAAC,EAAE;QAC1B,IAAI,YAAY,IAAIb,IAAI,EAAE;UACtB,OAAOK,QAAQ,CAACL,IAAI,CAAC;QACzB;QACA,OAAOA,IAAI;MACf;IACJ;IACA,OAAO,IAAI,CAACP,iBAAiB,CAACK,IAAI,CAACG,EAAE,EAAED,IAAI,CAAC;EAChD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}