{"ast":null,"code":"import { normalizeProvider } from \"@smithy/core\";\nimport { ProviderError } from \"@smithy/property-provider\";\nexport const resolveAwsSdkSigV4AConfig = config => {\n  config.sigv4aSigningRegionSet = normalizeProvider(config.sigv4aSigningRegionSet);\n  return config;\n};\nexport const NODE_SIGV4A_CONFIG_OPTIONS = {\n  environmentVariableSelector(env) {\n    if (env.AWS_SIGV4A_SIGNING_REGION_SET) {\n      return env.AWS_SIGV4A_SIGNING_REGION_SET.split(\",\").map(_ => _.trim());\n    }\n    throw new ProviderError(\"AWS_SIGV4A_SIGNING_REGION_SET not set in env.\", {\n      tryNextLink: true\n    });\n  },\n  configFileSelector(profile) {\n    if (profile.sigv4a_signing_region_set) {\n      return (profile.sigv4a_signing_region_set ?? \"\").split(\",\").map(_ => _.trim());\n    }\n    throw new ProviderError(\"sigv4a_signing_region_set not set in profile.\", {\n      tryNextLink: true\n    });\n  },\n  default: undefined\n};","map":{"version":3,"names":["normalizeProvider","ProviderError","resolveAwsSdkSigV4AConfig","config","sigv4aSigningRegionSet","NODE_SIGV4A_CONFIG_OPTIONS","environmentVariableSelector","env","AWS_SIGV4A_SIGNING_REGION_SET","split","map","_","trim","tryNextLink","configFileSelector","profile","sigv4a_signing_region_set","default","undefined"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4AConfig.js"],"sourcesContent":["import { normalizeProvider } from \"@smithy/core\";\nimport { ProviderError } from \"@smithy/property-provider\";\nexport const resolveAwsSdkSigV4AConfig = (config) => {\n    config.sigv4aSigningRegionSet = normalizeProvider(config.sigv4aSigningRegionSet);\n    return config;\n};\nexport const NODE_SIGV4A_CONFIG_OPTIONS = {\n    environmentVariableSelector(env) {\n        if (env.AWS_SIGV4A_SIGNING_REGION_SET) {\n            return env.AWS_SIGV4A_SIGNING_REGION_SET.split(\",\").map((_) => _.trim());\n        }\n        throw new ProviderError(\"AWS_SIGV4A_SIGNING_REGION_SET not set in env.\", {\n            tryNextLink: true,\n        });\n    },\n    configFileSelector(profile) {\n        if (profile.sigv4a_signing_region_set) {\n            return (profile.sigv4a_signing_region_set ?? \"\").split(\",\").map((_) => _.trim());\n        }\n        throw new ProviderError(\"sigv4a_signing_region_set not set in profile.\", {\n            tryNextLink: true,\n        });\n    },\n    default: undefined,\n};\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,cAAc;AAChD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,OAAO,MAAMC,yBAAyB,GAAIC,MAAM,IAAK;EACjDA,MAAM,CAACC,sBAAsB,GAAGJ,iBAAiB,CAACG,MAAM,CAACC,sBAAsB,CAAC;EAChF,OAAOD,MAAM;AACjB,CAAC;AACD,OAAO,MAAME,0BAA0B,GAAG;EACtCC,2BAA2BA,CAACC,GAAG,EAAE;IAC7B,IAAIA,GAAG,CAACC,6BAA6B,EAAE;MACnC,OAAOD,GAAG,CAACC,6BAA6B,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IAC5E;IACA,MAAM,IAAIX,aAAa,CAAC,+CAA+C,EAAE;MACrEY,WAAW,EAAE;IACjB,CAAC,CAAC;EACN,CAAC;EACDC,kBAAkBA,CAACC,OAAO,EAAE;IACxB,IAAIA,OAAO,CAACC,yBAAyB,EAAE;MACnC,OAAO,CAACD,OAAO,CAACC,yBAAyB,IAAI,EAAE,EAAEP,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;IACpF;IACA,MAAM,IAAIX,aAAa,CAAC,+CAA+C,EAAE;MACrEY,WAAW,EAAE;IACjB,CAAC,CAAC;EACN,CAAC;EACDI,OAAO,EAAEC;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}