{"ast":null,"code":"import { setFeature } from \"@aws-sdk/core\";\nconst ACCOUNT_ID_ENDPOINT_REGEX = /\\d{12}\\.ddb/;\nexport async function checkFeatures(context, config, args) {\n  const request = args.request;\n  if (request?.headers?.[\"smithy-protocol\"] === \"rpc-v2-cbor\") {\n    setFeature(context, \"PROTOCOL_RPC_V2_CBOR\", \"M\");\n  }\n  if (typeof config.retryStrategy === \"function\") {\n    const retryStrategy = await config.retryStrategy();\n    if (typeof retryStrategy.acquireInitialRetryToken === \"function\") {\n      if (retryStrategy.constructor?.name?.includes(\"Adaptive\")) {\n        setFeature(context, \"RETRY_MODE_ADAPTIVE\", \"F\");\n      } else {\n        setFeature(context, \"RETRY_MODE_STANDARD\", \"E\");\n      }\n    } else {\n      setFeature(context, \"RETRY_MODE_LEGACY\", \"D\");\n    }\n  }\n  if (typeof config.accountIdEndpointMode === \"function\") {\n    const endpointV2 = context.endpointV2;\n    if (String(endpointV2?.url?.hostname).match(ACCOUNT_ID_ENDPOINT_REGEX)) {\n      setFeature(context, \"ACCOUNT_ID_ENDPOINT\", \"O\");\n    }\n    switch (await config.accountIdEndpointMode?.()) {\n      case \"disabled\":\n        setFeature(context, \"ACCOUNT_ID_MODE_DISABLED\", \"Q\");\n        break;\n      case \"preferred\":\n        setFeature(context, \"ACCOUNT_ID_MODE_PREFERRED\", \"P\");\n        break;\n      case \"required\":\n        setFeature(context, \"ACCOUNT_ID_MODE_REQUIRED\", \"R\");\n        break;\n    }\n  }\n  const identity = context.__smithy_context?.selectedHttpAuthScheme?.identity;\n  if (identity?.$source) {\n    const credentials = identity;\n    if (credentials.accountId) {\n      setFeature(context, \"RESOLVED_ACCOUNT_ID\", \"T\");\n    }\n    for (const [key, value] of Object.entries(credentials.$source ?? {})) {\n      setFeature(context, key, value);\n    }\n  }\n}","map":{"version":3,"names":["setFeature","ACCOUNT_ID_ENDPOINT_REGEX","checkFeatures","context","config","args","request","headers","retryStrategy","acquireInitialRetryToken","constructor","name","includes","accountIdEndpointMode","endpointV2","String","url","hostname","match","identity","__smithy_context","selectedHttpAuthScheme","$source","credentials","accountId","key","value","Object","entries"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@aws-sdk/middleware-user-agent/dist-es/check-features.js"],"sourcesContent":["import { setFeature } from \"@aws-sdk/core\";\nconst ACCOUNT_ID_ENDPOINT_REGEX = /\\d{12}\\.ddb/;\nexport async function checkFeatures(context, config, args) {\n    const request = args.request;\n    if (request?.headers?.[\"smithy-protocol\"] === \"rpc-v2-cbor\") {\n        setFeature(context, \"PROTOCOL_RPC_V2_CBOR\", \"M\");\n    }\n    if (typeof config.retryStrategy === \"function\") {\n        const retryStrategy = await config.retryStrategy();\n        if (typeof retryStrategy.acquireInitialRetryToken === \"function\") {\n            if (retryStrategy.constructor?.name?.includes(\"Adaptive\")) {\n                setFeature(context, \"RETRY_MODE_ADAPTIVE\", \"F\");\n            }\n            else {\n                setFeature(context, \"RETRY_MODE_STANDARD\", \"E\");\n            }\n        }\n        else {\n            setFeature(context, \"RETRY_MODE_LEGACY\", \"D\");\n        }\n    }\n    if (typeof config.accountIdEndpointMode === \"function\") {\n        const endpointV2 = context.endpointV2;\n        if (String(endpointV2?.url?.hostname).match(ACCOUNT_ID_ENDPOINT_REGEX)) {\n            setFeature(context, \"ACCOUNT_ID_ENDPOINT\", \"O\");\n        }\n        switch (await config.accountIdEndpointMode?.()) {\n            case \"disabled\":\n                setFeature(context, \"ACCOUNT_ID_MODE_DISABLED\", \"Q\");\n                break;\n            case \"preferred\":\n                setFeature(context, \"ACCOUNT_ID_MODE_PREFERRED\", \"P\");\n                break;\n            case \"required\":\n                setFeature(context, \"ACCOUNT_ID_MODE_REQUIRED\", \"R\");\n                break;\n        }\n    }\n    const identity = context.__smithy_context?.selectedHttpAuthScheme?.identity;\n    if (identity?.$source) {\n        const credentials = identity;\n        if (credentials.accountId) {\n            setFeature(context, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        for (const [key, value] of Object.entries(credentials.$source ?? {})) {\n            setFeature(context, key, value);\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,MAAMC,yBAAyB,GAAG,aAAa;AAC/C,OAAO,eAAeC,aAAaA,CAACC,OAAO,EAAEC,MAAM,EAAEC,IAAI,EAAE;EACvD,MAAMC,OAAO,GAAGD,IAAI,CAACC,OAAO;EAC5B,IAAIA,OAAO,EAAEC,OAAO,GAAG,iBAAiB,CAAC,KAAK,aAAa,EAAE;IACzDP,UAAU,CAACG,OAAO,EAAE,sBAAsB,EAAE,GAAG,CAAC;EACpD;EACA,IAAI,OAAOC,MAAM,CAACI,aAAa,KAAK,UAAU,EAAE;IAC5C,MAAMA,aAAa,GAAG,MAAMJ,MAAM,CAACI,aAAa,CAAC,CAAC;IAClD,IAAI,OAAOA,aAAa,CAACC,wBAAwB,KAAK,UAAU,EAAE;MAC9D,IAAID,aAAa,CAACE,WAAW,EAAEC,IAAI,EAAEC,QAAQ,CAAC,UAAU,CAAC,EAAE;QACvDZ,UAAU,CAACG,OAAO,EAAE,qBAAqB,EAAE,GAAG,CAAC;MACnD,CAAC,MACI;QACDH,UAAU,CAACG,OAAO,EAAE,qBAAqB,EAAE,GAAG,CAAC;MACnD;IACJ,CAAC,MACI;MACDH,UAAU,CAACG,OAAO,EAAE,mBAAmB,EAAE,GAAG,CAAC;IACjD;EACJ;EACA,IAAI,OAAOC,MAAM,CAACS,qBAAqB,KAAK,UAAU,EAAE;IACpD,MAAMC,UAAU,GAAGX,OAAO,CAACW,UAAU;IACrC,IAAIC,MAAM,CAACD,UAAU,EAAEE,GAAG,EAAEC,QAAQ,CAAC,CAACC,KAAK,CAACjB,yBAAyB,CAAC,EAAE;MACpED,UAAU,CAACG,OAAO,EAAE,qBAAqB,EAAE,GAAG,CAAC;IACnD;IACA,QAAQ,MAAMC,MAAM,CAACS,qBAAqB,GAAG,CAAC;MAC1C,KAAK,UAAU;QACXb,UAAU,CAACG,OAAO,EAAE,0BAA0B,EAAE,GAAG,CAAC;QACpD;MACJ,KAAK,WAAW;QACZH,UAAU,CAACG,OAAO,EAAE,2BAA2B,EAAE,GAAG,CAAC;QACrD;MACJ,KAAK,UAAU;QACXH,UAAU,CAACG,OAAO,EAAE,0BAA0B,EAAE,GAAG,CAAC;QACpD;IACR;EACJ;EACA,MAAMgB,QAAQ,GAAGhB,OAAO,CAACiB,gBAAgB,EAAEC,sBAAsB,EAAEF,QAAQ;EAC3E,IAAIA,QAAQ,EAAEG,OAAO,EAAE;IACnB,MAAMC,WAAW,GAAGJ,QAAQ;IAC5B,IAAII,WAAW,CAACC,SAAS,EAAE;MACvBxB,UAAU,CAACG,OAAO,EAAE,qBAAqB,EAAE,GAAG,CAAC;IACnD;IACA,KAAK,MAAM,CAACsB,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACL,WAAW,CAACD,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE;MAClEtB,UAAU,CAACG,OAAO,EAAEsB,GAAG,EAAEC,KAAK,CAAC;IACnC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}