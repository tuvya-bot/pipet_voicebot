{"ast":null,"code":"import { awsExpectUnion as __expectUnion, loadRestJsonErrorCode, parseJsonBody as parseBody, parseJsonErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { requestBuilder as rb } from \"@smithy/core\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, isSerializableHeaderValue, limitedParseDouble as __limitedParseDouble, map, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, serializeDateTime as __serializeDateTime, serializeFloat as __serializeFloat, take, withBaseException } from \"@smithy/smithy-client\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\nimport { BedrockRuntimeServiceException as __BaseException } from \"../models/BedrockRuntimeServiceException\";\nimport { AccessDeniedException, ConflictException, ContentBlock, DocumentSource, GuardrailContentBlock, GuardrailConverseContentBlock, GuardrailConverseImageSource, GuardrailImageSource, ImageSource, InternalServerException, InvokeModelWithBidirectionalStreamInput, ModelErrorException, ModelNotReadyException, ModelStreamErrorException, ModelTimeoutException, ReasoningContentBlock, ResourceNotFoundException, ServiceQuotaExceededException, ServiceUnavailableException, SystemContentBlock, ThrottlingException, Tool, ToolInputSchema, ToolResultContentBlock, ValidationException, VideoSource } from \"../models/models_0\";\nexport const se_ApplyGuardrailCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/guardrail/{guardrailIdentifier}/version/{guardrailVersion}/apply\");\n  b.p(\"guardrailIdentifier\", () => input.guardrailIdentifier, \"{guardrailIdentifier}\", false);\n  b.p(\"guardrailVersion\", () => input.guardrailVersion, \"{guardrailVersion}\", false);\n  let body;\n  body = JSON.stringify(take(input, {\n    content: _ => se_GuardrailContentBlockList(_, context),\n    outputScope: [],\n    source: []\n  }));\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n};\nexport const se_ConverseCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/model/{modelId}/converse\");\n  b.p(\"modelId\", () => input.modelId, \"{modelId}\", false);\n  let body;\n  body = JSON.stringify(take(input, {\n    additionalModelRequestFields: _ => se_Document(_, context),\n    additionalModelResponseFieldPaths: _ => _json(_),\n    guardrailConfig: _ => _json(_),\n    inferenceConfig: _ => se_InferenceConfiguration(_, context),\n    messages: _ => se_Messages(_, context),\n    performanceConfig: _ => _json(_),\n    promptVariables: _ => _json(_),\n    requestMetadata: _ => _json(_),\n    system: _ => se_SystemContentBlocks(_, context),\n    toolConfig: _ => se_ToolConfiguration(_, context)\n  }));\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n};\nexport const se_ConverseStreamCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/model/{modelId}/converse-stream\");\n  b.p(\"modelId\", () => input.modelId, \"{modelId}\", false);\n  let body;\n  body = JSON.stringify(take(input, {\n    additionalModelRequestFields: _ => se_Document(_, context),\n    additionalModelResponseFieldPaths: _ => _json(_),\n    guardrailConfig: _ => _json(_),\n    inferenceConfig: _ => se_InferenceConfiguration(_, context),\n    messages: _ => se_Messages(_, context),\n    performanceConfig: _ => _json(_),\n    promptVariables: _ => _json(_),\n    requestMetadata: _ => _json(_),\n    system: _ => se_SystemContentBlocks(_, context),\n    toolConfig: _ => se_ToolConfiguration(_, context)\n  }));\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n};\nexport const se_GetAsyncInvokeCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {};\n  b.bp(\"/async-invoke/{invocationArn}\");\n  b.p(\"invocationArn\", () => input.invocationArn, \"{invocationArn}\", false);\n  let body;\n  b.m(\"GET\").h(headers).b(body);\n  return b.build();\n};\nexport const se_InvokeModelCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_ct]: input[_cT] || \"application/octet-stream\",\n    [_a]: input[_a],\n    [_xabt]: input[_t],\n    [_xabg]: input[_gI],\n    [_xabg_]: input[_gV],\n    [_xabpl]: input[_pCL]\n  });\n  b.bp(\"/model/{modelId}/invoke\");\n  b.p(\"modelId\", () => input.modelId, \"{modelId}\", false);\n  let body;\n  if (input.body !== undefined) {\n    body = input.body;\n  }\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n};\nexport const se_InvokeModelWithBidirectionalStreamCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/model/{modelId}/invoke-with-bidirectional-stream\");\n  b.p(\"modelId\", () => input.modelId, \"{modelId}\", false);\n  let body;\n  if (input.body !== undefined) {\n    body = se_InvokeModelWithBidirectionalStreamInput(input.body, context);\n  }\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n};\nexport const se_InvokeModelWithResponseStreamCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = map({}, isSerializableHeaderValue, {\n    [_ct]: input[_cT] || \"application/octet-stream\",\n    [_xaba]: input[_a],\n    [_xabt]: input[_t],\n    [_xabg]: input[_gI],\n    [_xabg_]: input[_gV],\n    [_xabpl]: input[_pCL]\n  });\n  b.bp(\"/model/{modelId}/invoke-with-response-stream\");\n  b.p(\"modelId\", () => input.modelId, \"{modelId}\", false);\n  let body;\n  if (input.body !== undefined) {\n    body = input.body;\n  }\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n};\nexport const se_ListAsyncInvokesCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {};\n  b.bp(\"/async-invoke\");\n  const query = map({\n    [_sTA]: [() => input.submitTimeAfter !== void 0, () => __serializeDateTime(input[_sTA]).toString()],\n    [_sTB]: [() => input.submitTimeBefore !== void 0, () => __serializeDateTime(input[_sTB]).toString()],\n    [_sE]: [, input[_sE]],\n    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],\n    [_nT]: [, input[_nT]],\n    [_sB]: [, input[_sB]],\n    [_sO]: [, input[_sO]]\n  });\n  let body;\n  b.m(\"GET\").h(headers).q(query).b(body);\n  return b.build();\n};\nexport const se_StartAsyncInvokeCommand = async (input, context) => {\n  const b = rb(input, context);\n  const headers = {\n    \"content-type\": \"application/json\"\n  };\n  b.bp(\"/async-invoke\");\n  let body;\n  body = JSON.stringify(take(input, {\n    clientRequestToken: [true, _ => _ ?? generateIdempotencyToken()],\n    modelId: [],\n    modelInput: _ => se_ModelInputPayload(_, context),\n    outputDataConfig: _ => _json(_),\n    tags: _ => _json(_)\n  }));\n  b.m(\"POST\").h(headers).b(body);\n  return b.build();\n};\nexport const de_ApplyGuardrailCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  const doc = take(data, {\n    action: __expectString,\n    actionReason: __expectString,\n    assessments: _ => de_GuardrailAssessmentList(_, context),\n    guardrailCoverage: _json,\n    outputs: _json,\n    usage: _json\n  });\n  Object.assign(contents, doc);\n  return contents;\n};\nexport const de_ConverseCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  const doc = take(data, {\n    additionalModelResponseFields: _ => de_Document(_, context),\n    metrics: _json,\n    output: _ => de_ConverseOutput(__expectUnion(_), context),\n    performanceConfig: _json,\n    stopReason: __expectString,\n    trace: _ => de_ConverseTrace(_, context),\n    usage: _json\n  });\n  Object.assign(contents, doc);\n  return contents;\n};\nexport const de_ConverseStreamCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = output.body;\n  contents.stream = de_ConverseStreamOutput(data, context);\n  return contents;\n};\nexport const de_GetAsyncInvokeCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  const doc = take(data, {\n    clientRequestToken: __expectString,\n    endTime: _ => __expectNonNull(__parseRfc3339DateTimeWithOffset(_)),\n    failureMessage: __expectString,\n    invocationArn: __expectString,\n    lastModifiedTime: _ => __expectNonNull(__parseRfc3339DateTimeWithOffset(_)),\n    modelArn: __expectString,\n    outputDataConfig: _ => _json(__expectUnion(_)),\n    status: __expectString,\n    submitTime: _ => __expectNonNull(__parseRfc3339DateTimeWithOffset(_))\n  });\n  Object.assign(contents, doc);\n  return contents;\n};\nexport const de_InvokeModelCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_cT]: [, output.headers[_ct]],\n    [_pCL]: [, output.headers[_xabpl]]\n  });\n  const data = await collectBody(output.body, context);\n  contents.body = data;\n  return contents;\n};\nexport const de_InvokeModelWithBidirectionalStreamCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = output.body;\n  contents.body = de_InvokeModelWithBidirectionalStreamOutput(data, context);\n  return contents;\n};\nexport const de_InvokeModelWithResponseStreamCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output),\n    [_cT]: [, output.headers[_xabct]],\n    [_pCL]: [, output.headers[_xabpl]]\n  });\n  const data = output.body;\n  contents.body = de_ResponseStream(data, context);\n  return contents;\n};\nexport const de_ListAsyncInvokesCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  const doc = take(data, {\n    asyncInvokeSummaries: _ => de_AsyncInvokeSummaries(_, context),\n    nextToken: __expectString\n  });\n  Object.assign(contents, doc);\n  return contents;\n};\nexport const de_StartAsyncInvokeCommand = async (output, context) => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return de_CommandError(output, context);\n  }\n  const contents = map({\n    $metadata: deserializeMetadata(output)\n  });\n  const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n  const doc = take(data, {\n    invocationArn: __expectString\n  });\n  Object.assign(contents, doc);\n  return contents;\n};\nconst de_CommandError = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseErrorBody(output.body, context)\n  };\n  const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.bedrockruntime#AccessDeniedException\":\n      throw await de_AccessDeniedExceptionRes(parsedOutput, context);\n    case \"InternalServerException\":\n    case \"com.amazonaws.bedrockruntime#InternalServerException\":\n      throw await de_InternalServerExceptionRes(parsedOutput, context);\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.bedrockruntime#ResourceNotFoundException\":\n      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n    case \"ServiceQuotaExceededException\":\n    case \"com.amazonaws.bedrockruntime#ServiceQuotaExceededException\":\n      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);\n    case \"ThrottlingException\":\n    case \"com.amazonaws.bedrockruntime#ThrottlingException\":\n      throw await de_ThrottlingExceptionRes(parsedOutput, context);\n    case \"ValidationException\":\n    case \"com.amazonaws.bedrockruntime#ValidationException\":\n      throw await de_ValidationExceptionRes(parsedOutput, context);\n    case \"ModelErrorException\":\n    case \"com.amazonaws.bedrockruntime#ModelErrorException\":\n      throw await de_ModelErrorExceptionRes(parsedOutput, context);\n    case \"ModelNotReadyException\":\n    case \"com.amazonaws.bedrockruntime#ModelNotReadyException\":\n      throw await de_ModelNotReadyExceptionRes(parsedOutput, context);\n    case \"ModelTimeoutException\":\n    case \"com.amazonaws.bedrockruntime#ModelTimeoutException\":\n      throw await de_ModelTimeoutExceptionRes(parsedOutput, context);\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.bedrockruntime#ServiceUnavailableException\":\n      throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);\n    case \"ModelStreamErrorException\":\n    case \"com.amazonaws.bedrockruntime#ModelStreamErrorException\":\n      throw await de_ModelStreamErrorExceptionRes(parsedOutput, context);\n    case \"ConflictException\":\n    case \"com.amazonaws.bedrockruntime#ConflictException\":\n      throw await de_ConflictExceptionRes(parsedOutput, context);\n    default:\n      const parsedBody = parsedOutput.body;\n      return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode\n      });\n  }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_AccessDeniedExceptionRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const doc = take(data, {\n    message: __expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new AccessDeniedException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ConflictExceptionRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const doc = take(data, {\n    message: __expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new ConflictException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InternalServerExceptionRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const doc = take(data, {\n    message: __expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new InternalServerException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ModelErrorExceptionRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const doc = take(data, {\n    message: __expectString,\n    originalStatusCode: __expectInt32,\n    resourceName: __expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new ModelErrorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ModelNotReadyExceptionRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const doc = take(data, {\n    message: __expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new ModelNotReadyException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ModelStreamErrorExceptionRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const doc = take(data, {\n    message: __expectString,\n    originalMessage: __expectString,\n    originalStatusCode: __expectInt32\n  });\n  Object.assign(contents, doc);\n  const exception = new ModelStreamErrorException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ModelTimeoutExceptionRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const doc = take(data, {\n    message: __expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new ModelTimeoutException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const doc = take(data, {\n    message: __expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new ResourceNotFoundException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ServiceQuotaExceededExceptionRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const doc = take(data, {\n    message: __expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new ServiceQuotaExceededException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ServiceUnavailableExceptionRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const doc = take(data, {\n    message: __expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new ServiceUnavailableException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ThrottlingExceptionRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const doc = take(data, {\n    message: __expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new ThrottlingException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ValidationExceptionRes = async (parsedOutput, context) => {\n  const contents = map({});\n  const data = parsedOutput.body;\n  const doc = take(data, {\n    message: __expectString\n  });\n  Object.assign(contents, doc);\n  const exception = new ValidationException({\n    $metadata: deserializeMetadata(parsedOutput),\n    ...contents\n  });\n  return __decorateServiceException(exception, parsedOutput.body);\n};\nconst se_InvokeModelWithBidirectionalStreamInput = (input, context) => {\n  const eventMarshallingVisitor = event => InvokeModelWithBidirectionalStreamInput.visit(event, {\n    chunk: value => se_BidirectionalInputPayloadPart_event(value, context),\n    _: value => value\n  });\n  return context.eventStreamMarshaller.serialize(input, eventMarshallingVisitor);\n};\nconst se_BidirectionalInputPayloadPart_event = (input, context) => {\n  const headers = {\n    \":event-type\": {\n      type: \"string\",\n      value: \"chunk\"\n    },\n    \":message-type\": {\n      type: \"string\",\n      value: \"event\"\n    },\n    \":content-type\": {\n      type: \"string\",\n      value: \"application/json\"\n    }\n  };\n  let body = new Uint8Array();\n  body = se_BidirectionalInputPayloadPart(input, context);\n  body = context.utf8Decoder(JSON.stringify(body));\n  return {\n    headers,\n    body\n  };\n};\nconst de_ConverseStreamOutput = (output, context) => {\n  return context.eventStreamMarshaller.deserialize(output, async event => {\n    if (event[\"messageStart\"] != null) {\n      return {\n        messageStart: await de_MessageStartEvent_event(event[\"messageStart\"], context)\n      };\n    }\n    if (event[\"contentBlockStart\"] != null) {\n      return {\n        contentBlockStart: await de_ContentBlockStartEvent_event(event[\"contentBlockStart\"], context)\n      };\n    }\n    if (event[\"contentBlockDelta\"] != null) {\n      return {\n        contentBlockDelta: await de_ContentBlockDeltaEvent_event(event[\"contentBlockDelta\"], context)\n      };\n    }\n    if (event[\"contentBlockStop\"] != null) {\n      return {\n        contentBlockStop: await de_ContentBlockStopEvent_event(event[\"contentBlockStop\"], context)\n      };\n    }\n    if (event[\"messageStop\"] != null) {\n      return {\n        messageStop: await de_MessageStopEvent_event(event[\"messageStop\"], context)\n      };\n    }\n    if (event[\"metadata\"] != null) {\n      return {\n        metadata: await de_ConverseStreamMetadataEvent_event(event[\"metadata\"], context)\n      };\n    }\n    if (event[\"internalServerException\"] != null) {\n      return {\n        internalServerException: await de_InternalServerException_event(event[\"internalServerException\"], context)\n      };\n    }\n    if (event[\"modelStreamErrorException\"] != null) {\n      return {\n        modelStreamErrorException: await de_ModelStreamErrorException_event(event[\"modelStreamErrorException\"], context)\n      };\n    }\n    if (event[\"validationException\"] != null) {\n      return {\n        validationException: await de_ValidationException_event(event[\"validationException\"], context)\n      };\n    }\n    if (event[\"throttlingException\"] != null) {\n      return {\n        throttlingException: await de_ThrottlingException_event(event[\"throttlingException\"], context)\n      };\n    }\n    if (event[\"serviceUnavailableException\"] != null) {\n      return {\n        serviceUnavailableException: await de_ServiceUnavailableException_event(event[\"serviceUnavailableException\"], context)\n      };\n    }\n    return {\n      $unknown: event\n    };\n  });\n};\nconst de_InvokeModelWithBidirectionalStreamOutput = (output, context) => {\n  return context.eventStreamMarshaller.deserialize(output, async event => {\n    if (event[\"chunk\"] != null) {\n      return {\n        chunk: await de_BidirectionalOutputPayloadPart_event(event[\"chunk\"], context)\n      };\n    }\n    if (event[\"internalServerException\"] != null) {\n      return {\n        internalServerException: await de_InternalServerException_event(event[\"internalServerException\"], context)\n      };\n    }\n    if (event[\"modelStreamErrorException\"] != null) {\n      return {\n        modelStreamErrorException: await de_ModelStreamErrorException_event(event[\"modelStreamErrorException\"], context)\n      };\n    }\n    if (event[\"validationException\"] != null) {\n      return {\n        validationException: await de_ValidationException_event(event[\"validationException\"], context)\n      };\n    }\n    if (event[\"throttlingException\"] != null) {\n      return {\n        throttlingException: await de_ThrottlingException_event(event[\"throttlingException\"], context)\n      };\n    }\n    if (event[\"modelTimeoutException\"] != null) {\n      return {\n        modelTimeoutException: await de_ModelTimeoutException_event(event[\"modelTimeoutException\"], context)\n      };\n    }\n    if (event[\"serviceUnavailableException\"] != null) {\n      return {\n        serviceUnavailableException: await de_ServiceUnavailableException_event(event[\"serviceUnavailableException\"], context)\n      };\n    }\n    return {\n      $unknown: event\n    };\n  });\n};\nconst de_ResponseStream = (output, context) => {\n  return context.eventStreamMarshaller.deserialize(output, async event => {\n    if (event[\"chunk\"] != null) {\n      return {\n        chunk: await de_PayloadPart_event(event[\"chunk\"], context)\n      };\n    }\n    if (event[\"internalServerException\"] != null) {\n      return {\n        internalServerException: await de_InternalServerException_event(event[\"internalServerException\"], context)\n      };\n    }\n    if (event[\"modelStreamErrorException\"] != null) {\n      return {\n        modelStreamErrorException: await de_ModelStreamErrorException_event(event[\"modelStreamErrorException\"], context)\n      };\n    }\n    if (event[\"validationException\"] != null) {\n      return {\n        validationException: await de_ValidationException_event(event[\"validationException\"], context)\n      };\n    }\n    if (event[\"throttlingException\"] != null) {\n      return {\n        throttlingException: await de_ThrottlingException_event(event[\"throttlingException\"], context)\n      };\n    }\n    if (event[\"modelTimeoutException\"] != null) {\n      return {\n        modelTimeoutException: await de_ModelTimeoutException_event(event[\"modelTimeoutException\"], context)\n      };\n    }\n    if (event[\"serviceUnavailableException\"] != null) {\n      return {\n        serviceUnavailableException: await de_ServiceUnavailableException_event(event[\"serviceUnavailableException\"], context)\n      };\n    }\n    return {\n      $unknown: event\n    };\n  });\n};\nconst de_BidirectionalOutputPayloadPart_event = async (output, context) => {\n  const contents = {};\n  const data = await parseBody(output.body, context);\n  Object.assign(contents, de_BidirectionalOutputPayloadPart(data, context));\n  return contents;\n};\nconst de_ContentBlockDeltaEvent_event = async (output, context) => {\n  const contents = {};\n  const data = await parseBody(output.body, context);\n  Object.assign(contents, de_ContentBlockDeltaEvent(data, context));\n  return contents;\n};\nconst de_ContentBlockStartEvent_event = async (output, context) => {\n  const contents = {};\n  const data = await parseBody(output.body, context);\n  Object.assign(contents, _json(data));\n  return contents;\n};\nconst de_ContentBlockStopEvent_event = async (output, context) => {\n  const contents = {};\n  const data = await parseBody(output.body, context);\n  Object.assign(contents, _json(data));\n  return contents;\n};\nconst de_ConverseStreamMetadataEvent_event = async (output, context) => {\n  const contents = {};\n  const data = await parseBody(output.body, context);\n  Object.assign(contents, de_ConverseStreamMetadataEvent(data, context));\n  return contents;\n};\nconst de_InternalServerException_event = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseBody(output.body, context)\n  };\n  return de_InternalServerExceptionRes(parsedOutput, context);\n};\nconst de_MessageStartEvent_event = async (output, context) => {\n  const contents = {};\n  const data = await parseBody(output.body, context);\n  Object.assign(contents, _json(data));\n  return contents;\n};\nconst de_MessageStopEvent_event = async (output, context) => {\n  const contents = {};\n  const data = await parseBody(output.body, context);\n  Object.assign(contents, de_MessageStopEvent(data, context));\n  return contents;\n};\nconst de_ModelStreamErrorException_event = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseBody(output.body, context)\n  };\n  return de_ModelStreamErrorExceptionRes(parsedOutput, context);\n};\nconst de_ModelTimeoutException_event = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseBody(output.body, context)\n  };\n  return de_ModelTimeoutExceptionRes(parsedOutput, context);\n};\nconst de_PayloadPart_event = async (output, context) => {\n  const contents = {};\n  const data = await parseBody(output.body, context);\n  Object.assign(contents, de_PayloadPart(data, context));\n  return contents;\n};\nconst de_ServiceUnavailableException_event = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseBody(output.body, context)\n  };\n  return de_ServiceUnavailableExceptionRes(parsedOutput, context);\n};\nconst de_ThrottlingException_event = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseBody(output.body, context)\n  };\n  return de_ThrottlingExceptionRes(parsedOutput, context);\n};\nconst de_ValidationException_event = async (output, context) => {\n  const parsedOutput = {\n    ...output,\n    body: await parseBody(output.body, context)\n  };\n  return de_ValidationExceptionRes(parsedOutput, context);\n};\nconst se_BidirectionalInputPayloadPart = (input, context) => {\n  return take(input, {\n    bytes: context.base64Encoder\n  });\n};\nconst se_ContentBlock = (input, context) => {\n  return ContentBlock.visit(input, {\n    cachePoint: value => ({\n      cachePoint: _json(value)\n    }),\n    citationsContent: value => ({\n      citationsContent: _json(value)\n    }),\n    document: value => ({\n      document: se_DocumentBlock(value, context)\n    }),\n    guardContent: value => ({\n      guardContent: se_GuardrailConverseContentBlock(value, context)\n    }),\n    image: value => ({\n      image: se_ImageBlock(value, context)\n    }),\n    reasoningContent: value => ({\n      reasoningContent: se_ReasoningContentBlock(value, context)\n    }),\n    text: value => ({\n      text: value\n    }),\n    toolResult: value => ({\n      toolResult: se_ToolResultBlock(value, context)\n    }),\n    toolUse: value => ({\n      toolUse: se_ToolUseBlock(value, context)\n    }),\n    video: value => ({\n      video: se_VideoBlock(value, context)\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_ContentBlocks = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return se_ContentBlock(entry, context);\n  });\n};\nconst se_DocumentBlock = (input, context) => {\n  return take(input, {\n    citations: _json,\n    context: [],\n    format: [],\n    name: [],\n    source: _ => se_DocumentSource(_, context)\n  });\n};\nconst se_DocumentSource = (input, context) => {\n  return DocumentSource.visit(input, {\n    bytes: value => ({\n      bytes: context.base64Encoder(value)\n    }),\n    content: value => ({\n      content: _json(value)\n    }),\n    s3Location: value => ({\n      s3Location: _json(value)\n    }),\n    text: value => ({\n      text: value\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_GuardrailContentBlock = (input, context) => {\n  return GuardrailContentBlock.visit(input, {\n    image: value => ({\n      image: se_GuardrailImageBlock(value, context)\n    }),\n    text: value => ({\n      text: _json(value)\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_GuardrailContentBlockList = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return se_GuardrailContentBlock(entry, context);\n  });\n};\nconst se_GuardrailConverseContentBlock = (input, context) => {\n  return GuardrailConverseContentBlock.visit(input, {\n    image: value => ({\n      image: se_GuardrailConverseImageBlock(value, context)\n    }),\n    text: value => ({\n      text: _json(value)\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_GuardrailConverseImageBlock = (input, context) => {\n  return take(input, {\n    format: [],\n    source: _ => se_GuardrailConverseImageSource(_, context)\n  });\n};\nconst se_GuardrailConverseImageSource = (input, context) => {\n  return GuardrailConverseImageSource.visit(input, {\n    bytes: value => ({\n      bytes: context.base64Encoder(value)\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_GuardrailImageBlock = (input, context) => {\n  return take(input, {\n    format: [],\n    source: _ => se_GuardrailImageSource(_, context)\n  });\n};\nconst se_GuardrailImageSource = (input, context) => {\n  return GuardrailImageSource.visit(input, {\n    bytes: value => ({\n      bytes: context.base64Encoder(value)\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_ImageBlock = (input, context) => {\n  return take(input, {\n    format: [],\n    source: _ => se_ImageSource(_, context)\n  });\n};\nconst se_ImageSource = (input, context) => {\n  return ImageSource.visit(input, {\n    bytes: value => ({\n      bytes: context.base64Encoder(value)\n    }),\n    s3Location: value => ({\n      s3Location: _json(value)\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_InferenceConfiguration = (input, context) => {\n  return take(input, {\n    maxTokens: [],\n    stopSequences: _json,\n    temperature: __serializeFloat,\n    topP: __serializeFloat\n  });\n};\nconst se_Message = (input, context) => {\n  return take(input, {\n    content: _ => se_ContentBlocks(_, context),\n    role: []\n  });\n};\nconst se_Messages = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return se_Message(entry, context);\n  });\n};\nconst se_ModelInputPayload = (input, context) => {\n  return input;\n};\nconst se_ReasoningContentBlock = (input, context) => {\n  return ReasoningContentBlock.visit(input, {\n    reasoningText: value => ({\n      reasoningText: _json(value)\n    }),\n    redactedContent: value => ({\n      redactedContent: context.base64Encoder(value)\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_SystemContentBlock = (input, context) => {\n  return SystemContentBlock.visit(input, {\n    cachePoint: value => ({\n      cachePoint: _json(value)\n    }),\n    guardContent: value => ({\n      guardContent: se_GuardrailConverseContentBlock(value, context)\n    }),\n    text: value => ({\n      text: value\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_SystemContentBlocks = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return se_SystemContentBlock(entry, context);\n  });\n};\nconst se_Tool = (input, context) => {\n  return Tool.visit(input, {\n    cachePoint: value => ({\n      cachePoint: _json(value)\n    }),\n    toolSpec: value => ({\n      toolSpec: se_ToolSpecification(value, context)\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_ToolConfiguration = (input, context) => {\n  return take(input, {\n    toolChoice: _json,\n    tools: _ => se_Tools(_, context)\n  });\n};\nconst se_ToolInputSchema = (input, context) => {\n  return ToolInputSchema.visit(input, {\n    json: value => ({\n      json: se_Document(value, context)\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_ToolResultBlock = (input, context) => {\n  return take(input, {\n    content: _ => se_ToolResultContentBlocks(_, context),\n    status: [],\n    toolUseId: []\n  });\n};\nconst se_ToolResultContentBlock = (input, context) => {\n  return ToolResultContentBlock.visit(input, {\n    document: value => ({\n      document: se_DocumentBlock(value, context)\n    }),\n    image: value => ({\n      image: se_ImageBlock(value, context)\n    }),\n    json: value => ({\n      json: se_Document(value, context)\n    }),\n    text: value => ({\n      text: value\n    }),\n    video: value => ({\n      video: se_VideoBlock(value, context)\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_ToolResultContentBlocks = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return se_ToolResultContentBlock(entry, context);\n  });\n};\nconst se_Tools = (input, context) => {\n  return input.filter(e => e != null).map(entry => {\n    return se_Tool(entry, context);\n  });\n};\nconst se_ToolSpecification = (input, context) => {\n  return take(input, {\n    description: [],\n    inputSchema: _ => se_ToolInputSchema(_, context),\n    name: []\n  });\n};\nconst se_ToolUseBlock = (input, context) => {\n  return take(input, {\n    input: _ => se_Document(_, context),\n    name: [],\n    toolUseId: []\n  });\n};\nconst se_VideoBlock = (input, context) => {\n  return take(input, {\n    format: [],\n    source: _ => se_VideoSource(_, context)\n  });\n};\nconst se_VideoSource = (input, context) => {\n  return VideoSource.visit(input, {\n    bytes: value => ({\n      bytes: context.base64Encoder(value)\n    }),\n    s3Location: value => ({\n      s3Location: _json(value)\n    }),\n    _: (name, value) => ({\n      [name]: value\n    })\n  });\n};\nconst se_Document = (input, context) => {\n  return input;\n};\nconst de_AsyncInvokeSummaries = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    return de_AsyncInvokeSummary(entry, context);\n  });\n  return retVal;\n};\nconst de_AsyncInvokeSummary = (output, context) => {\n  return take(output, {\n    clientRequestToken: __expectString,\n    endTime: _ => __expectNonNull(__parseRfc3339DateTimeWithOffset(_)),\n    failureMessage: __expectString,\n    invocationArn: __expectString,\n    lastModifiedTime: _ => __expectNonNull(__parseRfc3339DateTimeWithOffset(_)),\n    modelArn: __expectString,\n    outputDataConfig: _ => _json(__expectUnion(_)),\n    status: __expectString,\n    submitTime: _ => __expectNonNull(__parseRfc3339DateTimeWithOffset(_))\n  });\n};\nconst de_BidirectionalOutputPayloadPart = (output, context) => {\n  return take(output, {\n    bytes: context.base64Decoder\n  });\n};\nconst de_ContentBlock = (output, context) => {\n  if (output.cachePoint != null) {\n    return {\n      cachePoint: _json(output.cachePoint)\n    };\n  }\n  if (output.citationsContent != null) {\n    return {\n      citationsContent: _json(output.citationsContent)\n    };\n  }\n  if (output.document != null) {\n    return {\n      document: de_DocumentBlock(output.document, context)\n    };\n  }\n  if (output.guardContent != null) {\n    return {\n      guardContent: de_GuardrailConverseContentBlock(__expectUnion(output.guardContent), context)\n    };\n  }\n  if (output.image != null) {\n    return {\n      image: de_ImageBlock(output.image, context)\n    };\n  }\n  if (output.reasoningContent != null) {\n    return {\n      reasoningContent: de_ReasoningContentBlock(__expectUnion(output.reasoningContent), context)\n    };\n  }\n  if (__expectString(output.text) !== undefined) {\n    return {\n      text: __expectString(output.text)\n    };\n  }\n  if (output.toolResult != null) {\n    return {\n      toolResult: de_ToolResultBlock(output.toolResult, context)\n    };\n  }\n  if (output.toolUse != null) {\n    return {\n      toolUse: de_ToolUseBlock(output.toolUse, context)\n    };\n  }\n  if (output.video != null) {\n    return {\n      video: de_VideoBlock(output.video, context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_ContentBlockDelta = (output, context) => {\n  if (output.citation != null) {\n    return {\n      citation: _json(output.citation)\n    };\n  }\n  if (output.reasoningContent != null) {\n    return {\n      reasoningContent: de_ReasoningContentBlockDelta(__expectUnion(output.reasoningContent), context)\n    };\n  }\n  if (__expectString(output.text) !== undefined) {\n    return {\n      text: __expectString(output.text)\n    };\n  }\n  if (output.toolUse != null) {\n    return {\n      toolUse: _json(output.toolUse)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_ContentBlockDeltaEvent = (output, context) => {\n  return take(output, {\n    contentBlockIndex: __expectInt32,\n    delta: _ => de_ContentBlockDelta(__expectUnion(_), context)\n  });\n};\nconst de_ContentBlocks = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    return de_ContentBlock(__expectUnion(entry), context);\n  });\n  return retVal;\n};\nconst de_ConverseOutput = (output, context) => {\n  if (output.message != null) {\n    return {\n      message: de_Message(output.message, context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_ConverseStreamMetadataEvent = (output, context) => {\n  return take(output, {\n    metrics: _json,\n    performanceConfig: _json,\n    trace: _ => de_ConverseStreamTrace(_, context),\n    usage: _json\n  });\n};\nconst de_ConverseStreamTrace = (output, context) => {\n  return take(output, {\n    guardrail: _ => de_GuardrailTraceAssessment(_, context),\n    promptRouter: _json\n  });\n};\nconst de_ConverseTrace = (output, context) => {\n  return take(output, {\n    guardrail: _ => de_GuardrailTraceAssessment(_, context),\n    promptRouter: _json\n  });\n};\nconst de_DocumentBlock = (output, context) => {\n  return take(output, {\n    citations: _json,\n    context: __expectString,\n    format: __expectString,\n    name: __expectString,\n    source: _ => de_DocumentSource(__expectUnion(_), context)\n  });\n};\nconst de_DocumentSource = (output, context) => {\n  if (output.bytes != null) {\n    return {\n      bytes: context.base64Decoder(output.bytes)\n    };\n  }\n  if (output.content != null) {\n    return {\n      content: _json(output.content)\n    };\n  }\n  if (output.s3Location != null) {\n    return {\n      s3Location: _json(output.s3Location)\n    };\n  }\n  if (__expectString(output.text) !== undefined) {\n    return {\n      text: __expectString(output.text)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_GuardrailAssessment = (output, context) => {\n  return take(output, {\n    automatedReasoningPolicy: _ => de_GuardrailAutomatedReasoningPolicyAssessment(_, context),\n    contentPolicy: _json,\n    contextualGroundingPolicy: _ => de_GuardrailContextualGroundingPolicyAssessment(_, context),\n    invocationMetrics: _json,\n    sensitiveInformationPolicy: _json,\n    topicPolicy: _json,\n    wordPolicy: _json\n  });\n};\nconst de_GuardrailAssessmentList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    return de_GuardrailAssessment(entry, context);\n  });\n  return retVal;\n};\nconst de_GuardrailAssessmentListMap = (output, context) => {\n  return Object.entries(output).reduce((acc, [key, value]) => {\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = de_GuardrailAssessmentList(value, context);\n    return acc;\n  }, {});\n};\nconst de_GuardrailAssessmentMap = (output, context) => {\n  return Object.entries(output).reduce((acc, [key, value]) => {\n    if (value === null) {\n      return acc;\n    }\n    acc[key] = de_GuardrailAssessment(value, context);\n    return acc;\n  }, {});\n};\nconst de_GuardrailAutomatedReasoningFinding = (output, context) => {\n  if (output.impossible != null) {\n    return {\n      impossible: de_GuardrailAutomatedReasoningImpossibleFinding(output.impossible, context)\n    };\n  }\n  if (output.invalid != null) {\n    return {\n      invalid: de_GuardrailAutomatedReasoningInvalidFinding(output.invalid, context)\n    };\n  }\n  if (output.noTranslations != null) {\n    return {\n      noTranslations: _json(output.noTranslations)\n    };\n  }\n  if (output.satisfiable != null) {\n    return {\n      satisfiable: de_GuardrailAutomatedReasoningSatisfiableFinding(output.satisfiable, context)\n    };\n  }\n  if (output.tooComplex != null) {\n    return {\n      tooComplex: _json(output.tooComplex)\n    };\n  }\n  if (output.translationAmbiguous != null) {\n    return {\n      translationAmbiguous: de_GuardrailAutomatedReasoningTranslationAmbiguousFinding(output.translationAmbiguous, context)\n    };\n  }\n  if (output.valid != null) {\n    return {\n      valid: de_GuardrailAutomatedReasoningValidFinding(output.valid, context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_GuardrailAutomatedReasoningFindingList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    return de_GuardrailAutomatedReasoningFinding(__expectUnion(entry), context);\n  });\n  return retVal;\n};\nconst de_GuardrailAutomatedReasoningImpossibleFinding = (output, context) => {\n  return take(output, {\n    contradictingRules: _json,\n    logicWarning: _json,\n    translation: _ => de_GuardrailAutomatedReasoningTranslation(_, context)\n  });\n};\nconst de_GuardrailAutomatedReasoningInvalidFinding = (output, context) => {\n  return take(output, {\n    contradictingRules: _json,\n    logicWarning: _json,\n    translation: _ => de_GuardrailAutomatedReasoningTranslation(_, context)\n  });\n};\nconst de_GuardrailAutomatedReasoningPolicyAssessment = (output, context) => {\n  return take(output, {\n    findings: _ => de_GuardrailAutomatedReasoningFindingList(_, context)\n  });\n};\nconst de_GuardrailAutomatedReasoningSatisfiableFinding = (output, context) => {\n  return take(output, {\n    claimsFalseScenario: _json,\n    claimsTrueScenario: _json,\n    logicWarning: _json,\n    translation: _ => de_GuardrailAutomatedReasoningTranslation(_, context)\n  });\n};\nconst de_GuardrailAutomatedReasoningTranslation = (output, context) => {\n  return take(output, {\n    claims: _json,\n    confidence: __limitedParseDouble,\n    premises: _json,\n    untranslatedClaims: _json,\n    untranslatedPremises: _json\n  });\n};\nconst de_GuardrailAutomatedReasoningTranslationAmbiguousFinding = (output, context) => {\n  return take(output, {\n    differenceScenarios: _json,\n    options: _ => de_GuardrailAutomatedReasoningTranslationOptionList(_, context)\n  });\n};\nconst de_GuardrailAutomatedReasoningTranslationList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    return de_GuardrailAutomatedReasoningTranslation(entry, context);\n  });\n  return retVal;\n};\nconst de_GuardrailAutomatedReasoningTranslationOption = (output, context) => {\n  return take(output, {\n    translations: _ => de_GuardrailAutomatedReasoningTranslationList(_, context)\n  });\n};\nconst de_GuardrailAutomatedReasoningTranslationOptionList = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    return de_GuardrailAutomatedReasoningTranslationOption(entry, context);\n  });\n  return retVal;\n};\nconst de_GuardrailAutomatedReasoningValidFinding = (output, context) => {\n  return take(output, {\n    claimsTrueScenario: _json,\n    logicWarning: _json,\n    supportingRules: _json,\n    translation: _ => de_GuardrailAutomatedReasoningTranslation(_, context)\n  });\n};\nconst de_GuardrailContextualGroundingFilter = (output, context) => {\n  return take(output, {\n    action: __expectString,\n    detected: __expectBoolean,\n    score: __limitedParseDouble,\n    threshold: __limitedParseDouble,\n    type: __expectString\n  });\n};\nconst de_GuardrailContextualGroundingFilters = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    return de_GuardrailContextualGroundingFilter(entry, context);\n  });\n  return retVal;\n};\nconst de_GuardrailContextualGroundingPolicyAssessment = (output, context) => {\n  return take(output, {\n    filters: _ => de_GuardrailContextualGroundingFilters(_, context)\n  });\n};\nconst de_GuardrailConverseContentBlock = (output, context) => {\n  if (output.image != null) {\n    return {\n      image: de_GuardrailConverseImageBlock(output.image, context)\n    };\n  }\n  if (output.text != null) {\n    return {\n      text: _json(output.text)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_GuardrailConverseImageBlock = (output, context) => {\n  return take(output, {\n    format: __expectString,\n    source: _ => de_GuardrailConverseImageSource(__expectUnion(_), context)\n  });\n};\nconst de_GuardrailConverseImageSource = (output, context) => {\n  if (output.bytes != null) {\n    return {\n      bytes: context.base64Decoder(output.bytes)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_GuardrailTraceAssessment = (output, context) => {\n  return take(output, {\n    actionReason: __expectString,\n    inputAssessment: _ => de_GuardrailAssessmentMap(_, context),\n    modelOutput: _json,\n    outputAssessments: _ => de_GuardrailAssessmentListMap(_, context)\n  });\n};\nconst de_ImageBlock = (output, context) => {\n  return take(output, {\n    format: __expectString,\n    source: _ => de_ImageSource(__expectUnion(_), context)\n  });\n};\nconst de_ImageSource = (output, context) => {\n  if (output.bytes != null) {\n    return {\n      bytes: context.base64Decoder(output.bytes)\n    };\n  }\n  if (output.s3Location != null) {\n    return {\n      s3Location: _json(output.s3Location)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_Message = (output, context) => {\n  return take(output, {\n    content: _ => de_ContentBlocks(_, context),\n    role: __expectString\n  });\n};\nconst de_MessageStopEvent = (output, context) => {\n  return take(output, {\n    additionalModelResponseFields: _ => de_Document(_, context),\n    stopReason: __expectString\n  });\n};\nconst de_PayloadPart = (output, context) => {\n  return take(output, {\n    bytes: context.base64Decoder\n  });\n};\nconst de_ReasoningContentBlock = (output, context) => {\n  if (output.reasoningText != null) {\n    return {\n      reasoningText: _json(output.reasoningText)\n    };\n  }\n  if (output.redactedContent != null) {\n    return {\n      redactedContent: context.base64Decoder(output.redactedContent)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_ReasoningContentBlockDelta = (output, context) => {\n  if (output.redactedContent != null) {\n    return {\n      redactedContent: context.base64Decoder(output.redactedContent)\n    };\n  }\n  if (__expectString(output.signature) !== undefined) {\n    return {\n      signature: __expectString(output.signature)\n    };\n  }\n  if (__expectString(output.text) !== undefined) {\n    return {\n      text: __expectString(output.text)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_ToolResultBlock = (output, context) => {\n  return take(output, {\n    content: _ => de_ToolResultContentBlocks(_, context),\n    status: __expectString,\n    toolUseId: __expectString\n  });\n};\nconst de_ToolResultContentBlock = (output, context) => {\n  if (output.document != null) {\n    return {\n      document: de_DocumentBlock(output.document, context)\n    };\n  }\n  if (output.image != null) {\n    return {\n      image: de_ImageBlock(output.image, context)\n    };\n  }\n  if (output.json != null) {\n    return {\n      json: de_Document(output.json, context)\n    };\n  }\n  if (__expectString(output.text) !== undefined) {\n    return {\n      text: __expectString(output.text)\n    };\n  }\n  if (output.video != null) {\n    return {\n      video: de_VideoBlock(output.video, context)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_ToolResultContentBlocks = (output, context) => {\n  const retVal = (output || []).filter(e => e != null).map(entry => {\n    return de_ToolResultContentBlock(__expectUnion(entry), context);\n  });\n  return retVal;\n};\nconst de_ToolUseBlock = (output, context) => {\n  return take(output, {\n    input: _ => de_Document(_, context),\n    name: __expectString,\n    toolUseId: __expectString\n  });\n};\nconst de_VideoBlock = (output, context) => {\n  return take(output, {\n    format: __expectString,\n    source: _ => de_VideoSource(__expectUnion(_), context)\n  });\n};\nconst de_VideoSource = (output, context) => {\n  if (output.bytes != null) {\n    return {\n      bytes: context.base64Decoder(output.bytes)\n    };\n  }\n  if (output.s3Location != null) {\n    return {\n      s3Location: _json(output.s3Location)\n    };\n  }\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\nconst de_Document = (output, context) => {\n  return output;\n};\nconst deserializeMetadata = output => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"]\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then(body => context.utf8Encoder(body));\nconst _a = \"accept\";\nconst _cT = \"contentType\";\nconst _ct = \"content-type\";\nconst _gI = \"guardrailIdentifier\";\nconst _gV = \"guardrailVersion\";\nconst _mR = \"maxResults\";\nconst _nT = \"nextToken\";\nconst _pCL = \"performanceConfigLatency\";\nconst _sB = \"sortBy\";\nconst _sE = \"statusEquals\";\nconst _sO = \"sortOrder\";\nconst _sTA = \"submitTimeAfter\";\nconst _sTB = \"submitTimeBefore\";\nconst _t = \"trace\";\nconst _xaba = \"x-amzn-bedrock-accept\";\nconst _xabct = \"x-amzn-bedrock-content-type\";\nconst _xabg = \"x-amzn-bedrock-guardrailidentifier\";\nconst _xabg_ = \"x-amzn-bedrock-guardrailversion\";\nconst _xabpl = \"x-amzn-bedrock-performanceconfig-latency\";\nconst _xabt = \"x-amzn-bedrock-trace\";","map":{"version":3,"names":["awsExpectUnion","__expectUnion","loadRestJsonErrorCode","parseJsonBody","parseBody","parseJsonErrorBody","parseErrorBody","requestBuilder","rb","_json","collectBody","decorateServiceException","__decorateServiceException","expectBoolean","__expectBoolean","expectInt32","__expectInt32","expectNonNull","__expectNonNull","expectObject","__expectObject","expectString","__expectString","isSerializableHeaderValue","limitedParseDouble","__limitedParseDouble","map","parseRfc3339DateTimeWithOffset","__parseRfc3339DateTimeWithOffset","serializeDateTime","__serializeDateTime","serializeFloat","__serializeFloat","take","withBaseException","v4","generateIdempotencyToken","BedrockRuntimeServiceException","__BaseException","AccessDeniedException","ConflictException","ContentBlock","DocumentSource","GuardrailContentBlock","GuardrailConverseContentBlock","GuardrailConverseImageSource","GuardrailImageSource","ImageSource","InternalServerException","InvokeModelWithBidirectionalStreamInput","ModelErrorException","ModelNotReadyException","ModelStreamErrorException","ModelTimeoutException","ReasoningContentBlock","ResourceNotFoundException","ServiceQuotaExceededException","ServiceUnavailableException","SystemContentBlock","ThrottlingException","Tool","ToolInputSchema","ToolResultContentBlock","ValidationException","VideoSource","se_ApplyGuardrailCommand","input","context","b","headers","bp","p","guardrailIdentifier","guardrailVersion","body","JSON","stringify","content","_","se_GuardrailContentBlockList","outputScope","source","m","h","build","se_ConverseCommand","modelId","additionalModelRequestFields","se_Document","additionalModelResponseFieldPaths","guardrailConfig","inferenceConfig","se_InferenceConfiguration","messages","se_Messages","performanceConfig","promptVariables","requestMetadata","system","se_SystemContentBlocks","toolConfig","se_ToolConfiguration","se_ConverseStreamCommand","se_GetAsyncInvokeCommand","invocationArn","se_InvokeModelCommand","_ct","_cT","_a","_xabt","_t","_xabg","_gI","_xabg_","_gV","_xabpl","_pCL","undefined","se_InvokeModelWithBidirectionalStreamCommand","se_InvokeModelWithBidirectionalStreamInput","se_InvokeModelWithResponseStreamCommand","_xaba","se_ListAsyncInvokesCommand","query","_sTA","submitTimeAfter","toString","_sTB","submitTimeBefore","_sE","_mR","maxResults","_nT","_sB","_sO","q","se_StartAsyncInvokeCommand","clientRequestToken","modelInput","se_ModelInputPayload","outputDataConfig","tags","de_ApplyGuardrailCommand","output","statusCode","de_CommandError","contents","$metadata","deserializeMetadata","data","doc","action","actionReason","assessments","de_GuardrailAssessmentList","guardrailCoverage","outputs","usage","Object","assign","de_ConverseCommand","additionalModelResponseFields","de_Document","metrics","de_ConverseOutput","stopReason","trace","de_ConverseTrace","de_ConverseStreamCommand","stream","de_ConverseStreamOutput","de_GetAsyncInvokeCommand","endTime","failureMessage","lastModifiedTime","modelArn","status","submitTime","de_InvokeModelCommand","de_InvokeModelWithBidirectionalStreamCommand","de_InvokeModelWithBidirectionalStreamOutput","de_InvokeModelWithResponseStreamCommand","_xabct","de_ResponseStream","de_ListAsyncInvokesCommand","asyncInvokeSummaries","de_AsyncInvokeSummaries","nextToken","de_StartAsyncInvokeCommand","parsedOutput","errorCode","de_AccessDeniedExceptionRes","de_InternalServerExceptionRes","de_ResourceNotFoundExceptionRes","de_ServiceQuotaExceededExceptionRes","de_ThrottlingExceptionRes","de_ValidationExceptionRes","de_ModelErrorExceptionRes","de_ModelNotReadyExceptionRes","de_ModelTimeoutExceptionRes","de_ServiceUnavailableExceptionRes","de_ModelStreamErrorExceptionRes","de_ConflictExceptionRes","parsedBody","throwDefaultError","message","exception","originalStatusCode","resourceName","originalMessage","eventMarshallingVisitor","event","visit","chunk","value","se_BidirectionalInputPayloadPart_event","eventStreamMarshaller","serialize","type","Uint8Array","se_BidirectionalInputPayloadPart","utf8Decoder","deserialize","messageStart","de_MessageStartEvent_event","contentBlockStart","de_ContentBlockStartEvent_event","contentBlockDelta","de_ContentBlockDeltaEvent_event","contentBlockStop","de_ContentBlockStopEvent_event","messageStop","de_MessageStopEvent_event","metadata","de_ConverseStreamMetadataEvent_event","internalServerException","de_InternalServerException_event","modelStreamErrorException","de_ModelStreamErrorException_event","validationException","de_ValidationException_event","throttlingException","de_ThrottlingException_event","serviceUnavailableException","de_ServiceUnavailableException_event","$unknown","de_BidirectionalOutputPayloadPart_event","modelTimeoutException","de_ModelTimeoutException_event","de_PayloadPart_event","de_BidirectionalOutputPayloadPart","de_ContentBlockDeltaEvent","de_ConverseStreamMetadataEvent","de_MessageStopEvent","de_PayloadPart","bytes","base64Encoder","se_ContentBlock","cachePoint","citationsContent","document","se_DocumentBlock","guardContent","se_GuardrailConverseContentBlock","image","se_ImageBlock","reasoningContent","se_ReasoningContentBlock","text","toolResult","se_ToolResultBlock","toolUse","se_ToolUseBlock","video","se_VideoBlock","name","se_ContentBlocks","filter","e","entry","citations","format","se_DocumentSource","s3Location","se_GuardrailContentBlock","se_GuardrailImageBlock","se_GuardrailConverseImageBlock","se_GuardrailConverseImageSource","se_GuardrailImageSource","se_ImageSource","maxTokens","stopSequences","temperature","topP","se_Message","role","reasoningText","redactedContent","se_SystemContentBlock","se_Tool","toolSpec","se_ToolSpecification","toolChoice","tools","se_Tools","se_ToolInputSchema","json","se_ToolResultContentBlocks","toolUseId","se_ToolResultContentBlock","description","inputSchema","se_VideoSource","retVal","de_AsyncInvokeSummary","base64Decoder","de_ContentBlock","de_DocumentBlock","de_GuardrailConverseContentBlock","de_ImageBlock","de_ReasoningContentBlock","de_ToolResultBlock","de_ToolUseBlock","de_VideoBlock","entries","de_ContentBlockDelta","citation","de_ReasoningContentBlockDelta","contentBlockIndex","delta","de_ContentBlocks","de_Message","de_ConverseStreamTrace","guardrail","de_GuardrailTraceAssessment","promptRouter","de_DocumentSource","de_GuardrailAssessment","automatedReasoningPolicy","de_GuardrailAutomatedReasoningPolicyAssessment","contentPolicy","contextualGroundingPolicy","de_GuardrailContextualGroundingPolicyAssessment","invocationMetrics","sensitiveInformationPolicy","topicPolicy","wordPolicy","de_GuardrailAssessmentListMap","reduce","acc","key","de_GuardrailAssessmentMap","de_GuardrailAutomatedReasoningFinding","impossible","de_GuardrailAutomatedReasoningImpossibleFinding","invalid","de_GuardrailAutomatedReasoningInvalidFinding","noTranslations","satisfiable","de_GuardrailAutomatedReasoningSatisfiableFinding","tooComplex","translationAmbiguous","de_GuardrailAutomatedReasoningTranslationAmbiguousFinding","valid","de_GuardrailAutomatedReasoningValidFinding","de_GuardrailAutomatedReasoningFindingList","contradictingRules","logicWarning","translation","de_GuardrailAutomatedReasoningTranslation","findings","claimsFalseScenario","claimsTrueScenario","claims","confidence","premises","untranslatedClaims","untranslatedPremises","differenceScenarios","options","de_GuardrailAutomatedReasoningTranslationOptionList","de_GuardrailAutomatedReasoningTranslationList","de_GuardrailAutomatedReasoningTranslationOption","translations","supportingRules","de_GuardrailContextualGroundingFilter","detected","score","threshold","de_GuardrailContextualGroundingFilters","filters","de_GuardrailConverseImageBlock","de_GuardrailConverseImageSource","inputAssessment","modelOutput","outputAssessments","de_ImageSource","signature","de_ToolResultContentBlocks","de_ToolResultContentBlock","de_VideoSource","httpStatusCode","requestId","extendedRequestId","cfId","collectBodyString","streamBody","then","utf8Encoder"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@aws-sdk/client-bedrock-runtime/dist-es/protocols/Aws_restJson1.js"],"sourcesContent":["import { awsExpectUnion as __expectUnion, loadRestJsonErrorCode, parseJsonBody as parseBody, parseJsonErrorBody as parseErrorBody, } from \"@aws-sdk/core\";\nimport { requestBuilder as rb } from \"@smithy/core\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, isSerializableHeaderValue, limitedParseDouble as __limitedParseDouble, map, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, serializeDateTime as __serializeDateTime, serializeFloat as __serializeFloat, take, withBaseException, } from \"@smithy/smithy-client\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\nimport { BedrockRuntimeServiceException as __BaseException } from \"../models/BedrockRuntimeServiceException\";\nimport { AccessDeniedException, ConflictException, ContentBlock, DocumentSource, GuardrailContentBlock, GuardrailConverseContentBlock, GuardrailConverseImageSource, GuardrailImageSource, ImageSource, InternalServerException, InvokeModelWithBidirectionalStreamInput, ModelErrorException, ModelNotReadyException, ModelStreamErrorException, ModelTimeoutException, ReasoningContentBlock, ResourceNotFoundException, ServiceQuotaExceededException, ServiceUnavailableException, SystemContentBlock, ThrottlingException, Tool, ToolInputSchema, ToolResultContentBlock, ValidationException, VideoSource, } from \"../models/models_0\";\nexport const se_ApplyGuardrailCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/guardrail/{guardrailIdentifier}/version/{guardrailVersion}/apply\");\n    b.p(\"guardrailIdentifier\", () => input.guardrailIdentifier, \"{guardrailIdentifier}\", false);\n    b.p(\"guardrailVersion\", () => input.guardrailVersion, \"{guardrailVersion}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        content: (_) => se_GuardrailContentBlockList(_, context),\n        outputScope: [],\n        source: [],\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_ConverseCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/model/{modelId}/converse\");\n    b.p(\"modelId\", () => input.modelId, \"{modelId}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        additionalModelRequestFields: (_) => se_Document(_, context),\n        additionalModelResponseFieldPaths: (_) => _json(_),\n        guardrailConfig: (_) => _json(_),\n        inferenceConfig: (_) => se_InferenceConfiguration(_, context),\n        messages: (_) => se_Messages(_, context),\n        performanceConfig: (_) => _json(_),\n        promptVariables: (_) => _json(_),\n        requestMetadata: (_) => _json(_),\n        system: (_) => se_SystemContentBlocks(_, context),\n        toolConfig: (_) => se_ToolConfiguration(_, context),\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_ConverseStreamCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/model/{modelId}/converse-stream\");\n    b.p(\"modelId\", () => input.modelId, \"{modelId}\", false);\n    let body;\n    body = JSON.stringify(take(input, {\n        additionalModelRequestFields: (_) => se_Document(_, context),\n        additionalModelResponseFieldPaths: (_) => _json(_),\n        guardrailConfig: (_) => _json(_),\n        inferenceConfig: (_) => se_InferenceConfiguration(_, context),\n        messages: (_) => se_Messages(_, context),\n        performanceConfig: (_) => _json(_),\n        promptVariables: (_) => _json(_),\n        requestMetadata: (_) => _json(_),\n        system: (_) => se_SystemContentBlocks(_, context),\n        toolConfig: (_) => se_ToolConfiguration(_, context),\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_GetAsyncInvokeCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/async-invoke/{invocationArn}\");\n    b.p(\"invocationArn\", () => input.invocationArn, \"{invocationArn}\", false);\n    let body;\n    b.m(\"GET\").h(headers).b(body);\n    return b.build();\n};\nexport const se_InvokeModelCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_ct]: input[_cT] || \"application/octet-stream\",\n        [_a]: input[_a],\n        [_xabt]: input[_t],\n        [_xabg]: input[_gI],\n        [_xabg_]: input[_gV],\n        [_xabpl]: input[_pCL],\n    });\n    b.bp(\"/model/{modelId}/invoke\");\n    b.p(\"modelId\", () => input.modelId, \"{modelId}\", false);\n    let body;\n    if (input.body !== undefined) {\n        body = input.body;\n    }\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_InvokeModelWithBidirectionalStreamCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/model/{modelId}/invoke-with-bidirectional-stream\");\n    b.p(\"modelId\", () => input.modelId, \"{modelId}\", false);\n    let body;\n    if (input.body !== undefined) {\n        body = se_InvokeModelWithBidirectionalStreamInput(input.body, context);\n    }\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_InvokeModelWithResponseStreamCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = map({}, isSerializableHeaderValue, {\n        [_ct]: input[_cT] || \"application/octet-stream\",\n        [_xaba]: input[_a],\n        [_xabt]: input[_t],\n        [_xabg]: input[_gI],\n        [_xabg_]: input[_gV],\n        [_xabpl]: input[_pCL],\n    });\n    b.bp(\"/model/{modelId}/invoke-with-response-stream\");\n    b.p(\"modelId\", () => input.modelId, \"{modelId}\", false);\n    let body;\n    if (input.body !== undefined) {\n        body = input.body;\n    }\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const se_ListAsyncInvokesCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {};\n    b.bp(\"/async-invoke\");\n    const query = map({\n        [_sTA]: [() => input.submitTimeAfter !== void 0, () => __serializeDateTime(input[_sTA]).toString()],\n        [_sTB]: [() => input.submitTimeBefore !== void 0, () => __serializeDateTime(input[_sTB]).toString()],\n        [_sE]: [, input[_sE]],\n        [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],\n        [_nT]: [, input[_nT]],\n        [_sB]: [, input[_sB]],\n        [_sO]: [, input[_sO]],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nexport const se_StartAsyncInvokeCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/async-invoke\");\n    let body;\n    body = JSON.stringify(take(input, {\n        clientRequestToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        modelId: [],\n        modelInput: (_) => se_ModelInputPayload(_, context),\n        outputDataConfig: (_) => _json(_),\n        tags: (_) => _json(_),\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const de_ApplyGuardrailCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        action: __expectString,\n        actionReason: __expectString,\n        assessments: (_) => de_GuardrailAssessmentList(_, context),\n        guardrailCoverage: _json,\n        outputs: _json,\n        usage: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ConverseCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        additionalModelResponseFields: (_) => de_Document(_, context),\n        metrics: _json,\n        output: (_) => de_ConverseOutput(__expectUnion(_), context),\n        performanceConfig: _json,\n        stopReason: __expectString,\n        trace: (_) => de_ConverseTrace(_, context),\n        usage: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_ConverseStreamCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = output.body;\n    contents.stream = de_ConverseStreamOutput(data, context);\n    return contents;\n};\nexport const de_GetAsyncInvokeCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        clientRequestToken: __expectString,\n        endTime: (_) => __expectNonNull(__parseRfc3339DateTimeWithOffset(_)),\n        failureMessage: __expectString,\n        invocationArn: __expectString,\n        lastModifiedTime: (_) => __expectNonNull(__parseRfc3339DateTimeWithOffset(_)),\n        modelArn: __expectString,\n        outputDataConfig: (_) => _json(__expectUnion(_)),\n        status: __expectString,\n        submitTime: (_) => __expectNonNull(__parseRfc3339DateTimeWithOffset(_)),\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_InvokeModelCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_cT]: [, output.headers[_ct]],\n        [_pCL]: [, output.headers[_xabpl]],\n    });\n    const data = await collectBody(output.body, context);\n    contents.body = data;\n    return contents;\n};\nexport const de_InvokeModelWithBidirectionalStreamCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = output.body;\n    contents.body = de_InvokeModelWithBidirectionalStreamOutput(data, context);\n    return contents;\n};\nexport const de_InvokeModelWithResponseStreamCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n        [_cT]: [, output.headers[_xabct]],\n        [_pCL]: [, output.headers[_xabpl]],\n    });\n    const data = output.body;\n    contents.body = de_ResponseStream(data, context);\n    return contents;\n};\nexport const de_ListAsyncInvokesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        asyncInvokeSummaries: (_) => de_AsyncInvokeSummaries(_, context),\n        nextToken: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nexport const de_StartAsyncInvokeCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        invocationArn: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.bedrockruntime#AccessDeniedException\":\n            throw await de_AccessDeniedExceptionRes(parsedOutput, context);\n        case \"InternalServerException\":\n        case \"com.amazonaws.bedrockruntime#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.bedrockruntime#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"ServiceQuotaExceededException\":\n        case \"com.amazonaws.bedrockruntime#ServiceQuotaExceededException\":\n            throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);\n        case \"ThrottlingException\":\n        case \"com.amazonaws.bedrockruntime#ThrottlingException\":\n            throw await de_ThrottlingExceptionRes(parsedOutput, context);\n        case \"ValidationException\":\n        case \"com.amazonaws.bedrockruntime#ValidationException\":\n            throw await de_ValidationExceptionRes(parsedOutput, context);\n        case \"ModelErrorException\":\n        case \"com.amazonaws.bedrockruntime#ModelErrorException\":\n            throw await de_ModelErrorExceptionRes(parsedOutput, context);\n        case \"ModelNotReadyException\":\n        case \"com.amazonaws.bedrockruntime#ModelNotReadyException\":\n            throw await de_ModelNotReadyExceptionRes(parsedOutput, context);\n        case \"ModelTimeoutException\":\n        case \"com.amazonaws.bedrockruntime#ModelTimeoutException\":\n            throw await de_ModelTimeoutExceptionRes(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.bedrockruntime#ServiceUnavailableException\":\n            throw await de_ServiceUnavailableExceptionRes(parsedOutput, context);\n        case \"ModelStreamErrorException\":\n        case \"com.amazonaws.bedrockruntime#ModelStreamErrorException\":\n            throw await de_ModelStreamErrorExceptionRes(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.bedrockruntime#ConflictException\":\n            throw await de_ConflictExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_AccessDeniedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new AccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ConflictExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InternalServerExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InternalServerException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ModelErrorExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n        originalStatusCode: __expectInt32,\n        resourceName: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ModelErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ModelNotReadyExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ModelNotReadyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ModelStreamErrorExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n        originalMessage: __expectString,\n        originalStatusCode: __expectInt32,\n    });\n    Object.assign(contents, doc);\n    const exception = new ModelStreamErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ModelTimeoutExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ModelTimeoutException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ServiceQuotaExceededExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ServiceQuotaExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ServiceUnavailableExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ServiceUnavailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ThrottlingExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ThrottlingException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ValidationExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ValidationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst se_InvokeModelWithBidirectionalStreamInput = (input, context) => {\n    const eventMarshallingVisitor = (event) => InvokeModelWithBidirectionalStreamInput.visit(event, {\n        chunk: (value) => se_BidirectionalInputPayloadPart_event(value, context),\n        _: (value) => value,\n    });\n    return context.eventStreamMarshaller.serialize(input, eventMarshallingVisitor);\n};\nconst se_BidirectionalInputPayloadPart_event = (input, context) => {\n    const headers = {\n        \":event-type\": { type: \"string\", value: \"chunk\" },\n        \":message-type\": { type: \"string\", value: \"event\" },\n        \":content-type\": { type: \"string\", value: \"application/json\" },\n    };\n    let body = new Uint8Array();\n    body = se_BidirectionalInputPayloadPart(input, context);\n    body = context.utf8Decoder(JSON.stringify(body));\n    return { headers, body };\n};\nconst de_ConverseStreamOutput = (output, context) => {\n    return context.eventStreamMarshaller.deserialize(output, async (event) => {\n        if (event[\"messageStart\"] != null) {\n            return {\n                messageStart: await de_MessageStartEvent_event(event[\"messageStart\"], context),\n            };\n        }\n        if (event[\"contentBlockStart\"] != null) {\n            return {\n                contentBlockStart: await de_ContentBlockStartEvent_event(event[\"contentBlockStart\"], context),\n            };\n        }\n        if (event[\"contentBlockDelta\"] != null) {\n            return {\n                contentBlockDelta: await de_ContentBlockDeltaEvent_event(event[\"contentBlockDelta\"], context),\n            };\n        }\n        if (event[\"contentBlockStop\"] != null) {\n            return {\n                contentBlockStop: await de_ContentBlockStopEvent_event(event[\"contentBlockStop\"], context),\n            };\n        }\n        if (event[\"messageStop\"] != null) {\n            return {\n                messageStop: await de_MessageStopEvent_event(event[\"messageStop\"], context),\n            };\n        }\n        if (event[\"metadata\"] != null) {\n            return {\n                metadata: await de_ConverseStreamMetadataEvent_event(event[\"metadata\"], context),\n            };\n        }\n        if (event[\"internalServerException\"] != null) {\n            return {\n                internalServerException: await de_InternalServerException_event(event[\"internalServerException\"], context),\n            };\n        }\n        if (event[\"modelStreamErrorException\"] != null) {\n            return {\n                modelStreamErrorException: await de_ModelStreamErrorException_event(event[\"modelStreamErrorException\"], context),\n            };\n        }\n        if (event[\"validationException\"] != null) {\n            return {\n                validationException: await de_ValidationException_event(event[\"validationException\"], context),\n            };\n        }\n        if (event[\"throttlingException\"] != null) {\n            return {\n                throttlingException: await de_ThrottlingException_event(event[\"throttlingException\"], context),\n            };\n        }\n        if (event[\"serviceUnavailableException\"] != null) {\n            return {\n                serviceUnavailableException: await de_ServiceUnavailableException_event(event[\"serviceUnavailableException\"], context),\n            };\n        }\n        return { $unknown: event };\n    });\n};\nconst de_InvokeModelWithBidirectionalStreamOutput = (output, context) => {\n    return context.eventStreamMarshaller.deserialize(output, async (event) => {\n        if (event[\"chunk\"] != null) {\n            return {\n                chunk: await de_BidirectionalOutputPayloadPart_event(event[\"chunk\"], context),\n            };\n        }\n        if (event[\"internalServerException\"] != null) {\n            return {\n                internalServerException: await de_InternalServerException_event(event[\"internalServerException\"], context),\n            };\n        }\n        if (event[\"modelStreamErrorException\"] != null) {\n            return {\n                modelStreamErrorException: await de_ModelStreamErrorException_event(event[\"modelStreamErrorException\"], context),\n            };\n        }\n        if (event[\"validationException\"] != null) {\n            return {\n                validationException: await de_ValidationException_event(event[\"validationException\"], context),\n            };\n        }\n        if (event[\"throttlingException\"] != null) {\n            return {\n                throttlingException: await de_ThrottlingException_event(event[\"throttlingException\"], context),\n            };\n        }\n        if (event[\"modelTimeoutException\"] != null) {\n            return {\n                modelTimeoutException: await de_ModelTimeoutException_event(event[\"modelTimeoutException\"], context),\n            };\n        }\n        if (event[\"serviceUnavailableException\"] != null) {\n            return {\n                serviceUnavailableException: await de_ServiceUnavailableException_event(event[\"serviceUnavailableException\"], context),\n            };\n        }\n        return { $unknown: event };\n    });\n};\nconst de_ResponseStream = (output, context) => {\n    return context.eventStreamMarshaller.deserialize(output, async (event) => {\n        if (event[\"chunk\"] != null) {\n            return {\n                chunk: await de_PayloadPart_event(event[\"chunk\"], context),\n            };\n        }\n        if (event[\"internalServerException\"] != null) {\n            return {\n                internalServerException: await de_InternalServerException_event(event[\"internalServerException\"], context),\n            };\n        }\n        if (event[\"modelStreamErrorException\"] != null) {\n            return {\n                modelStreamErrorException: await de_ModelStreamErrorException_event(event[\"modelStreamErrorException\"], context),\n            };\n        }\n        if (event[\"validationException\"] != null) {\n            return {\n                validationException: await de_ValidationException_event(event[\"validationException\"], context),\n            };\n        }\n        if (event[\"throttlingException\"] != null) {\n            return {\n                throttlingException: await de_ThrottlingException_event(event[\"throttlingException\"], context),\n            };\n        }\n        if (event[\"modelTimeoutException\"] != null) {\n            return {\n                modelTimeoutException: await de_ModelTimeoutException_event(event[\"modelTimeoutException\"], context),\n            };\n        }\n        if (event[\"serviceUnavailableException\"] != null) {\n            return {\n                serviceUnavailableException: await de_ServiceUnavailableException_event(event[\"serviceUnavailableException\"], context),\n            };\n        }\n        return { $unknown: event };\n    });\n};\nconst de_BidirectionalOutputPayloadPart_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_BidirectionalOutputPayloadPart(data, context));\n    return contents;\n};\nconst de_ContentBlockDeltaEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_ContentBlockDeltaEvent(data, context));\n    return contents;\n};\nconst de_ContentBlockStartEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, _json(data));\n    return contents;\n};\nconst de_ContentBlockStopEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, _json(data));\n    return contents;\n};\nconst de_ConverseStreamMetadataEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_ConverseStreamMetadataEvent(data, context));\n    return contents;\n};\nconst de_InternalServerException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_InternalServerExceptionRes(parsedOutput, context);\n};\nconst de_MessageStartEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, _json(data));\n    return contents;\n};\nconst de_MessageStopEvent_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_MessageStopEvent(data, context));\n    return contents;\n};\nconst de_ModelStreamErrorException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_ModelStreamErrorExceptionRes(parsedOutput, context);\n};\nconst de_ModelTimeoutException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_ModelTimeoutExceptionRes(parsedOutput, context);\n};\nconst de_PayloadPart_event = async (output, context) => {\n    const contents = {};\n    const data = await parseBody(output.body, context);\n    Object.assign(contents, de_PayloadPart(data, context));\n    return contents;\n};\nconst de_ServiceUnavailableException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_ServiceUnavailableExceptionRes(parsedOutput, context);\n};\nconst de_ThrottlingException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_ThrottlingExceptionRes(parsedOutput, context);\n};\nconst de_ValidationException_event = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    return de_ValidationExceptionRes(parsedOutput, context);\n};\nconst se_BidirectionalInputPayloadPart = (input, context) => {\n    return take(input, {\n        bytes: context.base64Encoder,\n    });\n};\nconst se_ContentBlock = (input, context) => {\n    return ContentBlock.visit(input, {\n        cachePoint: (value) => ({ cachePoint: _json(value) }),\n        citationsContent: (value) => ({ citationsContent: _json(value) }),\n        document: (value) => ({ document: se_DocumentBlock(value, context) }),\n        guardContent: (value) => ({ guardContent: se_GuardrailConverseContentBlock(value, context) }),\n        image: (value) => ({ image: se_ImageBlock(value, context) }),\n        reasoningContent: (value) => ({ reasoningContent: se_ReasoningContentBlock(value, context) }),\n        text: (value) => ({ text: value }),\n        toolResult: (value) => ({ toolResult: se_ToolResultBlock(value, context) }),\n        toolUse: (value) => ({ toolUse: se_ToolUseBlock(value, context) }),\n        video: (value) => ({ video: se_VideoBlock(value, context) }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_ContentBlocks = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_ContentBlock(entry, context);\n    });\n};\nconst se_DocumentBlock = (input, context) => {\n    return take(input, {\n        citations: _json,\n        context: [],\n        format: [],\n        name: [],\n        source: (_) => se_DocumentSource(_, context),\n    });\n};\nconst se_DocumentSource = (input, context) => {\n    return DocumentSource.visit(input, {\n        bytes: (value) => ({ bytes: context.base64Encoder(value) }),\n        content: (value) => ({ content: _json(value) }),\n        s3Location: (value) => ({ s3Location: _json(value) }),\n        text: (value) => ({ text: value }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_GuardrailContentBlock = (input, context) => {\n    return GuardrailContentBlock.visit(input, {\n        image: (value) => ({ image: se_GuardrailImageBlock(value, context) }),\n        text: (value) => ({ text: _json(value) }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_GuardrailContentBlockList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_GuardrailContentBlock(entry, context);\n    });\n};\nconst se_GuardrailConverseContentBlock = (input, context) => {\n    return GuardrailConverseContentBlock.visit(input, {\n        image: (value) => ({ image: se_GuardrailConverseImageBlock(value, context) }),\n        text: (value) => ({ text: _json(value) }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_GuardrailConverseImageBlock = (input, context) => {\n    return take(input, {\n        format: [],\n        source: (_) => se_GuardrailConverseImageSource(_, context),\n    });\n};\nconst se_GuardrailConverseImageSource = (input, context) => {\n    return GuardrailConverseImageSource.visit(input, {\n        bytes: (value) => ({ bytes: context.base64Encoder(value) }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_GuardrailImageBlock = (input, context) => {\n    return take(input, {\n        format: [],\n        source: (_) => se_GuardrailImageSource(_, context),\n    });\n};\nconst se_GuardrailImageSource = (input, context) => {\n    return GuardrailImageSource.visit(input, {\n        bytes: (value) => ({ bytes: context.base64Encoder(value) }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_ImageBlock = (input, context) => {\n    return take(input, {\n        format: [],\n        source: (_) => se_ImageSource(_, context),\n    });\n};\nconst se_ImageSource = (input, context) => {\n    return ImageSource.visit(input, {\n        bytes: (value) => ({ bytes: context.base64Encoder(value) }),\n        s3Location: (value) => ({ s3Location: _json(value) }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_InferenceConfiguration = (input, context) => {\n    return take(input, {\n        maxTokens: [],\n        stopSequences: _json,\n        temperature: __serializeFloat,\n        topP: __serializeFloat,\n    });\n};\nconst se_Message = (input, context) => {\n    return take(input, {\n        content: (_) => se_ContentBlocks(_, context),\n        role: [],\n    });\n};\nconst se_Messages = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_Message(entry, context);\n    });\n};\nconst se_ModelInputPayload = (input, context) => {\n    return input;\n};\nconst se_ReasoningContentBlock = (input, context) => {\n    return ReasoningContentBlock.visit(input, {\n        reasoningText: (value) => ({ reasoningText: _json(value) }),\n        redactedContent: (value) => ({ redactedContent: context.base64Encoder(value) }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_SystemContentBlock = (input, context) => {\n    return SystemContentBlock.visit(input, {\n        cachePoint: (value) => ({ cachePoint: _json(value) }),\n        guardContent: (value) => ({ guardContent: se_GuardrailConverseContentBlock(value, context) }),\n        text: (value) => ({ text: value }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_SystemContentBlocks = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_SystemContentBlock(entry, context);\n    });\n};\nconst se_Tool = (input, context) => {\n    return Tool.visit(input, {\n        cachePoint: (value) => ({ cachePoint: _json(value) }),\n        toolSpec: (value) => ({ toolSpec: se_ToolSpecification(value, context) }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_ToolConfiguration = (input, context) => {\n    return take(input, {\n        toolChoice: _json,\n        tools: (_) => se_Tools(_, context),\n    });\n};\nconst se_ToolInputSchema = (input, context) => {\n    return ToolInputSchema.visit(input, {\n        json: (value) => ({ json: se_Document(value, context) }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_ToolResultBlock = (input, context) => {\n    return take(input, {\n        content: (_) => se_ToolResultContentBlocks(_, context),\n        status: [],\n        toolUseId: [],\n    });\n};\nconst se_ToolResultContentBlock = (input, context) => {\n    return ToolResultContentBlock.visit(input, {\n        document: (value) => ({ document: se_DocumentBlock(value, context) }),\n        image: (value) => ({ image: se_ImageBlock(value, context) }),\n        json: (value) => ({ json: se_Document(value, context) }),\n        text: (value) => ({ text: value }),\n        video: (value) => ({ video: se_VideoBlock(value, context) }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_ToolResultContentBlocks = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_ToolResultContentBlock(entry, context);\n    });\n};\nconst se_Tools = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_Tool(entry, context);\n    });\n};\nconst se_ToolSpecification = (input, context) => {\n    return take(input, {\n        description: [],\n        inputSchema: (_) => se_ToolInputSchema(_, context),\n        name: [],\n    });\n};\nconst se_ToolUseBlock = (input, context) => {\n    return take(input, {\n        input: (_) => se_Document(_, context),\n        name: [],\n        toolUseId: [],\n    });\n};\nconst se_VideoBlock = (input, context) => {\n    return take(input, {\n        format: [],\n        source: (_) => se_VideoSource(_, context),\n    });\n};\nconst se_VideoSource = (input, context) => {\n    return VideoSource.visit(input, {\n        bytes: (value) => ({ bytes: context.base64Encoder(value) }),\n        s3Location: (value) => ({ s3Location: _json(value) }),\n        _: (name, value) => ({ [name]: value }),\n    });\n};\nconst se_Document = (input, context) => {\n    return input;\n};\nconst de_AsyncInvokeSummaries = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AsyncInvokeSummary(entry, context);\n    });\n    return retVal;\n};\nconst de_AsyncInvokeSummary = (output, context) => {\n    return take(output, {\n        clientRequestToken: __expectString,\n        endTime: (_) => __expectNonNull(__parseRfc3339DateTimeWithOffset(_)),\n        failureMessage: __expectString,\n        invocationArn: __expectString,\n        lastModifiedTime: (_) => __expectNonNull(__parseRfc3339DateTimeWithOffset(_)),\n        modelArn: __expectString,\n        outputDataConfig: (_) => _json(__expectUnion(_)),\n        status: __expectString,\n        submitTime: (_) => __expectNonNull(__parseRfc3339DateTimeWithOffset(_)),\n    });\n};\nconst de_BidirectionalOutputPayloadPart = (output, context) => {\n    return take(output, {\n        bytes: context.base64Decoder,\n    });\n};\nconst de_ContentBlock = (output, context) => {\n    if (output.cachePoint != null) {\n        return {\n            cachePoint: _json(output.cachePoint),\n        };\n    }\n    if (output.citationsContent != null) {\n        return {\n            citationsContent: _json(output.citationsContent),\n        };\n    }\n    if (output.document != null) {\n        return {\n            document: de_DocumentBlock(output.document, context),\n        };\n    }\n    if (output.guardContent != null) {\n        return {\n            guardContent: de_GuardrailConverseContentBlock(__expectUnion(output.guardContent), context),\n        };\n    }\n    if (output.image != null) {\n        return {\n            image: de_ImageBlock(output.image, context),\n        };\n    }\n    if (output.reasoningContent != null) {\n        return {\n            reasoningContent: de_ReasoningContentBlock(__expectUnion(output.reasoningContent), context),\n        };\n    }\n    if (__expectString(output.text) !== undefined) {\n        return { text: __expectString(output.text) };\n    }\n    if (output.toolResult != null) {\n        return {\n            toolResult: de_ToolResultBlock(output.toolResult, context),\n        };\n    }\n    if (output.toolUse != null) {\n        return {\n            toolUse: de_ToolUseBlock(output.toolUse, context),\n        };\n    }\n    if (output.video != null) {\n        return {\n            video: de_VideoBlock(output.video, context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_ContentBlockDelta = (output, context) => {\n    if (output.citation != null) {\n        return {\n            citation: _json(output.citation),\n        };\n    }\n    if (output.reasoningContent != null) {\n        return {\n            reasoningContent: de_ReasoningContentBlockDelta(__expectUnion(output.reasoningContent), context),\n        };\n    }\n    if (__expectString(output.text) !== undefined) {\n        return { text: __expectString(output.text) };\n    }\n    if (output.toolUse != null) {\n        return {\n            toolUse: _json(output.toolUse),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_ContentBlockDeltaEvent = (output, context) => {\n    return take(output, {\n        contentBlockIndex: __expectInt32,\n        delta: (_) => de_ContentBlockDelta(__expectUnion(_), context),\n    });\n};\nconst de_ContentBlocks = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ContentBlock(__expectUnion(entry), context);\n    });\n    return retVal;\n};\nconst de_ConverseOutput = (output, context) => {\n    if (output.message != null) {\n        return {\n            message: de_Message(output.message, context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_ConverseStreamMetadataEvent = (output, context) => {\n    return take(output, {\n        metrics: _json,\n        performanceConfig: _json,\n        trace: (_) => de_ConverseStreamTrace(_, context),\n        usage: _json,\n    });\n};\nconst de_ConverseStreamTrace = (output, context) => {\n    return take(output, {\n        guardrail: (_) => de_GuardrailTraceAssessment(_, context),\n        promptRouter: _json,\n    });\n};\nconst de_ConverseTrace = (output, context) => {\n    return take(output, {\n        guardrail: (_) => de_GuardrailTraceAssessment(_, context),\n        promptRouter: _json,\n    });\n};\nconst de_DocumentBlock = (output, context) => {\n    return take(output, {\n        citations: _json,\n        context: __expectString,\n        format: __expectString,\n        name: __expectString,\n        source: (_) => de_DocumentSource(__expectUnion(_), context),\n    });\n};\nconst de_DocumentSource = (output, context) => {\n    if (output.bytes != null) {\n        return {\n            bytes: context.base64Decoder(output.bytes),\n        };\n    }\n    if (output.content != null) {\n        return {\n            content: _json(output.content),\n        };\n    }\n    if (output.s3Location != null) {\n        return {\n            s3Location: _json(output.s3Location),\n        };\n    }\n    if (__expectString(output.text) !== undefined) {\n        return { text: __expectString(output.text) };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_GuardrailAssessment = (output, context) => {\n    return take(output, {\n        automatedReasoningPolicy: (_) => de_GuardrailAutomatedReasoningPolicyAssessment(_, context),\n        contentPolicy: _json,\n        contextualGroundingPolicy: (_) => de_GuardrailContextualGroundingPolicyAssessment(_, context),\n        invocationMetrics: _json,\n        sensitiveInformationPolicy: _json,\n        topicPolicy: _json,\n        wordPolicy: _json,\n    });\n};\nconst de_GuardrailAssessmentList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_GuardrailAssessment(entry, context);\n    });\n    return retVal;\n};\nconst de_GuardrailAssessmentListMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_GuardrailAssessmentList(value, context);\n        return acc;\n    }, {});\n};\nconst de_GuardrailAssessmentMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_GuardrailAssessment(value, context);\n        return acc;\n    }, {});\n};\nconst de_GuardrailAutomatedReasoningFinding = (output, context) => {\n    if (output.impossible != null) {\n        return {\n            impossible: de_GuardrailAutomatedReasoningImpossibleFinding(output.impossible, context),\n        };\n    }\n    if (output.invalid != null) {\n        return {\n            invalid: de_GuardrailAutomatedReasoningInvalidFinding(output.invalid, context),\n        };\n    }\n    if (output.noTranslations != null) {\n        return {\n            noTranslations: _json(output.noTranslations),\n        };\n    }\n    if (output.satisfiable != null) {\n        return {\n            satisfiable: de_GuardrailAutomatedReasoningSatisfiableFinding(output.satisfiable, context),\n        };\n    }\n    if (output.tooComplex != null) {\n        return {\n            tooComplex: _json(output.tooComplex),\n        };\n    }\n    if (output.translationAmbiguous != null) {\n        return {\n            translationAmbiguous: de_GuardrailAutomatedReasoningTranslationAmbiguousFinding(output.translationAmbiguous, context),\n        };\n    }\n    if (output.valid != null) {\n        return {\n            valid: de_GuardrailAutomatedReasoningValidFinding(output.valid, context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_GuardrailAutomatedReasoningFindingList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_GuardrailAutomatedReasoningFinding(__expectUnion(entry), context);\n    });\n    return retVal;\n};\nconst de_GuardrailAutomatedReasoningImpossibleFinding = (output, context) => {\n    return take(output, {\n        contradictingRules: _json,\n        logicWarning: _json,\n        translation: (_) => de_GuardrailAutomatedReasoningTranslation(_, context),\n    });\n};\nconst de_GuardrailAutomatedReasoningInvalidFinding = (output, context) => {\n    return take(output, {\n        contradictingRules: _json,\n        logicWarning: _json,\n        translation: (_) => de_GuardrailAutomatedReasoningTranslation(_, context),\n    });\n};\nconst de_GuardrailAutomatedReasoningPolicyAssessment = (output, context) => {\n    return take(output, {\n        findings: (_) => de_GuardrailAutomatedReasoningFindingList(_, context),\n    });\n};\nconst de_GuardrailAutomatedReasoningSatisfiableFinding = (output, context) => {\n    return take(output, {\n        claimsFalseScenario: _json,\n        claimsTrueScenario: _json,\n        logicWarning: _json,\n        translation: (_) => de_GuardrailAutomatedReasoningTranslation(_, context),\n    });\n};\nconst de_GuardrailAutomatedReasoningTranslation = (output, context) => {\n    return take(output, {\n        claims: _json,\n        confidence: __limitedParseDouble,\n        premises: _json,\n        untranslatedClaims: _json,\n        untranslatedPremises: _json,\n    });\n};\nconst de_GuardrailAutomatedReasoningTranslationAmbiguousFinding = (output, context) => {\n    return take(output, {\n        differenceScenarios: _json,\n        options: (_) => de_GuardrailAutomatedReasoningTranslationOptionList(_, context),\n    });\n};\nconst de_GuardrailAutomatedReasoningTranslationList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_GuardrailAutomatedReasoningTranslation(entry, context);\n    });\n    return retVal;\n};\nconst de_GuardrailAutomatedReasoningTranslationOption = (output, context) => {\n    return take(output, {\n        translations: (_) => de_GuardrailAutomatedReasoningTranslationList(_, context),\n    });\n};\nconst de_GuardrailAutomatedReasoningTranslationOptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_GuardrailAutomatedReasoningTranslationOption(entry, context);\n    });\n    return retVal;\n};\nconst de_GuardrailAutomatedReasoningValidFinding = (output, context) => {\n    return take(output, {\n        claimsTrueScenario: _json,\n        logicWarning: _json,\n        supportingRules: _json,\n        translation: (_) => de_GuardrailAutomatedReasoningTranslation(_, context),\n    });\n};\nconst de_GuardrailContextualGroundingFilter = (output, context) => {\n    return take(output, {\n        action: __expectString,\n        detected: __expectBoolean,\n        score: __limitedParseDouble,\n        threshold: __limitedParseDouble,\n        type: __expectString,\n    });\n};\nconst de_GuardrailContextualGroundingFilters = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_GuardrailContextualGroundingFilter(entry, context);\n    });\n    return retVal;\n};\nconst de_GuardrailContextualGroundingPolicyAssessment = (output, context) => {\n    return take(output, {\n        filters: (_) => de_GuardrailContextualGroundingFilters(_, context),\n    });\n};\nconst de_GuardrailConverseContentBlock = (output, context) => {\n    if (output.image != null) {\n        return {\n            image: de_GuardrailConverseImageBlock(output.image, context),\n        };\n    }\n    if (output.text != null) {\n        return {\n            text: _json(output.text),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_GuardrailConverseImageBlock = (output, context) => {\n    return take(output, {\n        format: __expectString,\n        source: (_) => de_GuardrailConverseImageSource(__expectUnion(_), context),\n    });\n};\nconst de_GuardrailConverseImageSource = (output, context) => {\n    if (output.bytes != null) {\n        return {\n            bytes: context.base64Decoder(output.bytes),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_GuardrailTraceAssessment = (output, context) => {\n    return take(output, {\n        actionReason: __expectString,\n        inputAssessment: (_) => de_GuardrailAssessmentMap(_, context),\n        modelOutput: _json,\n        outputAssessments: (_) => de_GuardrailAssessmentListMap(_, context),\n    });\n};\nconst de_ImageBlock = (output, context) => {\n    return take(output, {\n        format: __expectString,\n        source: (_) => de_ImageSource(__expectUnion(_), context),\n    });\n};\nconst de_ImageSource = (output, context) => {\n    if (output.bytes != null) {\n        return {\n            bytes: context.base64Decoder(output.bytes),\n        };\n    }\n    if (output.s3Location != null) {\n        return {\n            s3Location: _json(output.s3Location),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_Message = (output, context) => {\n    return take(output, {\n        content: (_) => de_ContentBlocks(_, context),\n        role: __expectString,\n    });\n};\nconst de_MessageStopEvent = (output, context) => {\n    return take(output, {\n        additionalModelResponseFields: (_) => de_Document(_, context),\n        stopReason: __expectString,\n    });\n};\nconst de_PayloadPart = (output, context) => {\n    return take(output, {\n        bytes: context.base64Decoder,\n    });\n};\nconst de_ReasoningContentBlock = (output, context) => {\n    if (output.reasoningText != null) {\n        return {\n            reasoningText: _json(output.reasoningText),\n        };\n    }\n    if (output.redactedContent != null) {\n        return {\n            redactedContent: context.base64Decoder(output.redactedContent),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_ReasoningContentBlockDelta = (output, context) => {\n    if (output.redactedContent != null) {\n        return {\n            redactedContent: context.base64Decoder(output.redactedContent),\n        };\n    }\n    if (__expectString(output.signature) !== undefined) {\n        return { signature: __expectString(output.signature) };\n    }\n    if (__expectString(output.text) !== undefined) {\n        return { text: __expectString(output.text) };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_ToolResultBlock = (output, context) => {\n    return take(output, {\n        content: (_) => de_ToolResultContentBlocks(_, context),\n        status: __expectString,\n        toolUseId: __expectString,\n    });\n};\nconst de_ToolResultContentBlock = (output, context) => {\n    if (output.document != null) {\n        return {\n            document: de_DocumentBlock(output.document, context),\n        };\n    }\n    if (output.image != null) {\n        return {\n            image: de_ImageBlock(output.image, context),\n        };\n    }\n    if (output.json != null) {\n        return {\n            json: de_Document(output.json, context),\n        };\n    }\n    if (__expectString(output.text) !== undefined) {\n        return { text: __expectString(output.text) };\n    }\n    if (output.video != null) {\n        return {\n            video: de_VideoBlock(output.video, context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_ToolResultContentBlocks = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ToolResultContentBlock(__expectUnion(entry), context);\n    });\n    return retVal;\n};\nconst de_ToolUseBlock = (output, context) => {\n    return take(output, {\n        input: (_) => de_Document(_, context),\n        name: __expectString,\n        toolUseId: __expectString,\n    });\n};\nconst de_VideoBlock = (output, context) => {\n    return take(output, {\n        format: __expectString,\n        source: (_) => de_VideoSource(__expectUnion(_), context),\n    });\n};\nconst de_VideoSource = (output, context) => {\n    if (output.bytes != null) {\n        return {\n            bytes: context.base64Decoder(output.bytes),\n        };\n    }\n    if (output.s3Location != null) {\n        return {\n            s3Location: _json(output.s3Location),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_Document = (output, context) => {\n    return output;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst _a = \"accept\";\nconst _cT = \"contentType\";\nconst _ct = \"content-type\";\nconst _gI = \"guardrailIdentifier\";\nconst _gV = \"guardrailVersion\";\nconst _mR = \"maxResults\";\nconst _nT = \"nextToken\";\nconst _pCL = \"performanceConfigLatency\";\nconst _sB = \"sortBy\";\nconst _sE = \"statusEquals\";\nconst _sO = \"sortOrder\";\nconst _sTA = \"submitTimeAfter\";\nconst _sTB = \"submitTimeBefore\";\nconst _t = \"trace\";\nconst _xaba = \"x-amzn-bedrock-accept\";\nconst _xabct = \"x-amzn-bedrock-content-type\";\nconst _xabg = \"x-amzn-bedrock-guardrailidentifier\";\nconst _xabg_ = \"x-amzn-bedrock-guardrailversion\";\nconst _xabpl = \"x-amzn-bedrock-performanceconfig-latency\";\nconst _xabt = \"x-amzn-bedrock-trace\";\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}