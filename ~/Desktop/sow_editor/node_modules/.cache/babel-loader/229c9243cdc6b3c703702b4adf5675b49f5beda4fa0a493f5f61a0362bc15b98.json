{"ast":null,"code":"import { memoize } from \"@smithy/property-provider\";\nimport bowser from \"bowser\";\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\nexport const resolveDefaultsModeConfig = ({\n  defaultsMode\n} = {}) => memoize(async () => {\n  const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n  switch (mode?.toLowerCase()) {\n    case \"auto\":\n      return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\n    case \"mobile\":\n    case \"in-region\":\n    case \"cross-region\":\n    case \"standard\":\n    case \"legacy\":\n      return Promise.resolve(mode?.toLocaleLowerCase());\n    case undefined:\n      return Promise.resolve(\"legacy\");\n    default:\n      throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n  }\n});\nconst isMobileBrowser = () => {\n  const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent ? bowser.parse(window.navigator.userAgent) : undefined;\n  const platform = parsedUA?.platform?.type;\n  return platform === \"tablet\" || platform === \"mobile\";\n};","map":{"version":3,"names":["memoize","bowser","DEFAULTS_MODE_OPTIONS","resolveDefaultsModeConfig","defaultsMode","mode","toLowerCase","Promise","resolve","isMobileBrowser","toLocaleLowerCase","undefined","Error","join","parsedUA","window","navigator","userAgent","parse","platform","type"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/util-defaults-mode-browser/dist-es/resolveDefaultsModeConfig.js"],"sourcesContent":["import { memoize } from \"@smithy/property-provider\";\nimport bowser from \"bowser\";\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\nexport const resolveDefaultsModeConfig = ({ defaultsMode, } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\n        case \"mobile\":\n        case \"in-region\":\n        case \"cross-region\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst isMobileBrowser = () => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const platform = parsedUA?.platform?.type;\n    return platform === \"tablet\" || platform === \"mobile\";\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,2BAA2B;AACnD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,qBAAqB,QAAQ,aAAa;AACnD,OAAO,MAAMC,yBAAyB,GAAGA,CAAC;EAAEC;AAAc,CAAC,GAAG,CAAC,CAAC,KAAKJ,OAAO,CAAC,YAAY;EACrF,MAAMK,IAAI,GAAG,OAAOD,YAAY,KAAK,UAAU,GAAG,MAAMA,YAAY,CAAC,CAAC,GAAGA,YAAY;EACrF,QAAQC,IAAI,EAAEC,WAAW,CAAC,CAAC;IACvB,KAAK,MAAM;MACP,OAAOC,OAAO,CAACC,OAAO,CAACC,eAAe,CAAC,CAAC,GAAG,QAAQ,GAAG,UAAU,CAAC;IACrE,KAAK,QAAQ;IACb,KAAK,WAAW;IAChB,KAAK,cAAc;IACnB,KAAK,UAAU;IACf,KAAK,QAAQ;MACT,OAAOF,OAAO,CAACC,OAAO,CAACH,IAAI,EAAEK,iBAAiB,CAAC,CAAC,CAAC;IACrD,KAAKC,SAAS;MACV,OAAOJ,OAAO,CAACC,OAAO,CAAC,QAAQ,CAAC;IACpC;MACI,MAAM,IAAII,KAAK,CAAC,gDAAgDV,qBAAqB,CAACW,IAAI,CAAC,IAAI,CAAC,SAASR,IAAI,EAAE,CAAC;EACxH;AACJ,CAAC,CAAC;AACF,MAAMI,eAAe,GAAGA,CAAA,KAAM;EAC1B,MAAMK,QAAQ,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,EAAEC,SAAS,EAAEC,SAAS,GACxEhB,MAAM,CAACiB,KAAK,CAACH,MAAM,CAACC,SAAS,CAACC,SAAS,CAAC,GACxCN,SAAS;EACf,MAAMQ,QAAQ,GAAGL,QAAQ,EAAEK,QAAQ,EAAEC,IAAI;EACzC,OAAOD,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,KAAK,QAAQ;AACzD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}