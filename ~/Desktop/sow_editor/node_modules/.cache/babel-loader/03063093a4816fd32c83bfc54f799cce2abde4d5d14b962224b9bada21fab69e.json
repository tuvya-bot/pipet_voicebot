{"ast":null,"code":"var _jsxFileName = \"/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/src/components/ChatPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Send, Bot, User, Loader, Plus, Replace, Copy } from 'lucide-react';\nimport { useSOWStore } from '../stores/sowStore';\nimport { BedrockService } from '../services/bedrockService';\nimport { useEditor } from '../contexts/EditorContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatPanel = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [isUserScrolling, setIsUserScrolling] = useState(false);\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n  const scrollTimeoutRef = useRef(null);\n  const {\n    chatMessages,\n    isClaudeTyping,\n    addChatMessage,\n    setClaudeTyping,\n    setPendingSuggestion\n  } = useSOWStore();\n  const {\n    insertText,\n    replaceSelection,\n    insertAtEnd,\n    getCurrentContent,\n    getSelectedText,\n    applySuggestion\n  } = useEditor();\n  const scrollToBottom = (force = false) => {\n    if (!isUserScrolling || force) {\n      var _messagesEndRef$curre;\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: 'smooth',\n        block: 'end'\n      });\n    }\n  };\n\n  // Auto-scroll when new messages arrive or Claude is typing\n  useEffect(() => {\n    scrollToBottom();\n  }, [chatMessages, isClaudeTyping]);\n\n  // Handle scroll detection to pause auto-scroll when user is manually scrolling\n  const handleScroll = () => {\n    if (!messagesContainerRef.current) return;\n    const container = messagesContainerRef.current;\n    const isAtBottom = container.scrollHeight - container.scrollTop <= container.clientHeight + 50;\n    if (!isAtBottom) {\n      setIsUserScrolling(true);\n\n      // Clear existing timeout\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n\n      // Resume auto-scroll after 3 seconds of no scrolling\n      scrollTimeoutRef.current = setTimeout(() => {\n        setIsUserScrolling(false);\n      }, 3000);\n    } else {\n      setIsUserScrolling(false);\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n    }\n  };\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n    };\n  }, []);\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isClaudeTyping) return;\n    const userMessage = {\n      role: 'user',\n      content: inputValue.trim()\n    };\n    addChatMessage(userMessage);\n    setInputValue('');\n    setClaudeTyping(true);\n\n    // Force scroll to bottom when user sends a message\n    setIsUserScrolling(false);\n    setTimeout(() => scrollToBottom(true), 100);\n    try {\n      // Use BedrockService to send message to Claude\n      const bedrockService = new BedrockService();\n\n      // Prepare context from current document state\n      const currentContent = getCurrentContent();\n      const selectedText = getSelectedText();\n      const context = {\n        documentTitle: 'SOW Document',\n        sections: [],\n        currentContent: currentContent,\n        selectedText: selectedText,\n        hasSelection: selectedText.length > 0\n      };\n      const response = await bedrockService.sendMessage(userMessage.content, context);\n\n      // Check if this is an actionable instruction\n      const isActionable = isActionableInstruction(userMessage.content);\n      if (isActionable) {\n        // Automatically apply the suggestion and create pending suggestion\n        const suggestion = {\n          id: Date.now(),\n          type: determineSuggestionType(userMessage.content, selectedText),\n          content: response,\n          explanation: `Applied suggestion for: \"${userMessage.content}\"`,\n          preview: response.length > 100 ? response.substring(0, 100) + '...' : response,\n          applied: true,\n          originalRequest: userMessage.content,\n          timestamp: new Date().toISOString()\n        };\n\n        // Apply the suggestion immediately\n        applySuggestion(suggestion);\n\n        // Set as pending for accept/reject\n        setPendingSuggestion(suggestion);\n\n        // Add a system message instead of the full response\n        addChatMessage({\n          role: 'assistant',\n          content: `âœ¨ I've applied the suggestion automatically. You can accept or reject it using the panel.`,\n          isSystemMessage: true\n        });\n      } else {\n        // Regular chat response\n        addChatMessage({\n          role: 'assistant',\n          content: response\n        });\n      }\n    } catch (error) {\n      console.error('Error sending message to Claude:', error);\n      addChatMessage({\n        role: 'assistant',\n        content: 'I apologize, but I encountered an error while processing your request. Please check your AWS configuration.'\n      });\n    } finally {\n      setClaudeTyping(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-panel\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        style: {\n          padding: '16px',\n          borderBottom: '1px solid #e2e8f0',\n          background: 'white',\n          borderRadius: '8px 8px 0 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: 0,\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px',\n            fontSize: '16px',\n            fontWeight: '600'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), \"Claude Assistant\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '4px 0 0 0',\n            fontSize: '14px',\n            color: '#6b7280'\n          },\n          children: \"Get help with your SOW writing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        ref: messagesContainerRef,\n        onScroll: handleScroll,\n        children: [chatMessages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            color: '#6b7280',\n            padding: '40px 20px',\n            fontSize: '14px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Bot, {\n            size: 48,\n            style: {\n              margin: '0 auto 16px',\n              opacity: 0.3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hi! I'm Claude, your AI assistant for writing Statements of Work.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I can help you with:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              textAlign: 'left',\n              marginTop: '16px',\n              paddingLeft: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Structuring your SOW sections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Improving clarity and professionalism\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Adding industry best practices\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Reviewing for completeness\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), chatMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.role}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: message.role === 'user' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(User, {\n                size: 16,\n                style: {\n                  marginRight: '4px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this), \"You\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Bot, {\n                size: 16,\n                style: {\n                  marginRight: '4px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this), \"Claude\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), message.role === 'assistant' && /*#__PURE__*/_jsxDEV(MessageActions, {\n            message: message,\n            onInsertText: insertText,\n            onReplaceSelection: replaceSelection,\n            onInsertAtEnd: insertAtEnd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)), isClaudeTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message assistant\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(Bot, {\n              size: 16,\n              style: {\n                marginRight: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), \"Claude\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Loader, {\n              size: 16,\n              className: \"animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), \"Thinking...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), isUserScrolling && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            bottom: '20px',\n            right: '20px',\n            background: '#3b82f6',\n            color: 'white',\n            padding: '8px 12px',\n            borderRadius: '20px',\n            fontSize: '12px',\n            cursor: 'pointer',\n            boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n            zIndex: 10\n          },\n          onClick: () => {\n            setIsUserScrolling(false);\n            scrollToBottom(true);\n          },\n          children: \"\\u2193 New messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyDown: handleKeyPress,\n          placeholder: \"Ask Claude for help with your SOW...\",\n          disabled: isClaudeTyping\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: !inputValue.trim() || isClaudeTyping,\n          style: {\n            opacity: !inputValue.trim() || isClaudeTyping ? 0.5 : 1,\n            cursor: !inputValue.trim() || isClaudeTyping ? 'not-allowed' : 'pointer'\n          },\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to determine if a message is an actionable instruction\n_s(ChatPanel, \"Y7TPb317ES4GTSe57wGdgVek0W4=\", false, function () {\n  return [useSOWStore, useEditor];\n});\n_c = ChatPanel;\nconst isActionableInstruction = message => {\n  const actionWords = ['write', 'add', 'create', 'generate', 'make', 'build', 'draft', 'compose', 'improve', 'enhance', 'fix', 'correct', 'update', 'modify', 'change', 'edit', 'replace', 'rewrite', 'revise', 'refactor', 'optimize', 'include', 'insert', 'append', 'prepend', 'remove', 'delete', 'eliminate', 'format', 'structure', 'organize'];\n  const lowerMessage = message.toLowerCase();\n  return actionWords.some(word => lowerMessage.includes(word));\n};\n\n// Helper function to determine suggestion type based on context\nconst determineSuggestionType = (message, selectedText) => {\n  const lowerMessage = message.toLowerCase();\n  if (selectedText && selectedText.length > 0) {\n    if (lowerMessage.includes('replace') || lowerMessage.includes('change') || lowerMessage.includes('fix')) {\n      return 'replace';\n    }\n  }\n  if (lowerMessage.includes('add') || lowerMessage.includes('append') || lowerMessage.includes('end')) {\n    return 'append';\n  }\n  return 'insert';\n};\n\n// Component for action buttons on Claude's messages (now only for non-actionable messages)\nconst MessageActions = ({\n  message,\n  onInsertText,\n  onReplaceSelection,\n  onInsertAtEnd\n}) => {\n  const handleInsertAtCursor = () => {\n    onInsertText(message.content);\n  };\n  const handleReplaceSelected = () => {\n    onReplaceSelection(message.content);\n  };\n  const handleAppendToEnd = () => {\n    onInsertAtEnd(message.content);\n  };\n  const handleCopyToClipboard = () => {\n    navigator.clipboard.writeText(message.content);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '4px',\n      marginTop: '8px',\n      flexWrap: 'wrap'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInsertAtCursor,\n      style: {\n        padding: '4px 8px',\n        fontSize: '12px',\n        border: '1px solid #d1d5db',\n        borderRadius: '4px',\n        background: 'white',\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '4px'\n      },\n      title: \"Insert at cursor position\",\n      children: [/*#__PURE__*/_jsxDEV(Plus, {\n        size: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), \"Insert\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReplaceSelected,\n      style: {\n        padding: '4px 8px',\n        fontSize: '12px',\n        border: '1px solid #d1d5db',\n        borderRadius: '4px',\n        background: 'white',\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '4px'\n      },\n      title: \"Replace selected text\",\n      children: [/*#__PURE__*/_jsxDEV(Replace, {\n        size: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), \"Replace\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAppendToEnd,\n      style: {\n        padding: '4px 8px',\n        fontSize: '12px',\n        border: '1px solid #d1d5db',\n        borderRadius: '4px',\n        background: 'white',\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '4px'\n      },\n      title: \"Add to end of document\",\n      children: [/*#__PURE__*/_jsxDEV(Plus, {\n        size: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), \"Append\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCopyToClipboard,\n      style: {\n        padding: '4px 8px',\n        fontSize: '12px',\n        border: '1px solid #d1d5db',\n        borderRadius: '4px',\n        background: 'white',\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '4px'\n      },\n      title: \"Copy to clipboard\",\n      children: [/*#__PURE__*/_jsxDEV(Copy, {\n        size: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), \"Copy\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 5\n  }, this);\n};\n_c2 = MessageActions;\nexport default ChatPanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChatPanel\");\n$RefreshReg$(_c2, \"MessageActions\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Send","Bot","User","Loader","Plus","Replace","Copy","useSOWStore","BedrockService","useEditor","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPanel","_s","inputValue","setInputValue","isUserScrolling","setIsUserScrolling","messagesEndRef","messagesContainerRef","scrollTimeoutRef","chatMessages","isClaudeTyping","addChatMessage","setClaudeTyping","setPendingSuggestion","insertText","replaceSelection","insertAtEnd","getCurrentContent","getSelectedText","applySuggestion","scrollToBottom","force","_messagesEndRef$curre","current","scrollIntoView","behavior","block","handleScroll","container","isAtBottom","scrollHeight","scrollTop","clientHeight","clearTimeout","setTimeout","handleSendMessage","trim","userMessage","role","content","bedrockService","currentContent","selectedText","context","documentTitle","sections","hasSelection","length","response","sendMessage","isActionable","isActionableInstruction","suggestion","id","Date","now","type","determineSuggestionType","explanation","preview","substring","applied","originalRequest","timestamp","toISOString","isSystemMessage","error","console","handleKeyPress","e","key","shiftKey","preventDefault","className","children","style","padding","borderBottom","background","borderRadius","margin","display","alignItems","gap","fontSize","fontWeight","size","fileName","_jsxFileName","lineNumber","columnNumber","color","ref","onScroll","textAlign","opacity","marginTop","paddingLeft","map","message","marginRight","MessageActions","onInsertText","onReplaceSelection","onInsertAtEnd","position","bottom","right","cursor","boxShadow","zIndex","onClick","value","onChange","target","onKeyDown","placeholder","disabled","_c","actionWords","lowerMessage","toLowerCase","some","word","includes","handleInsertAtCursor","handleReplaceSelected","handleAppendToEnd","handleCopyToClipboard","navigator","clipboard","writeText","flexWrap","border","title","_c2","$RefreshReg$"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/src/components/ChatPanel.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Send, Bot, User, Loader, Plus, Replace, Copy } from 'lucide-react';\nimport { useSOWStore } from '../stores/sowStore';\nimport { BedrockService } from '../services/bedrockService';\nimport { useEditor } from '../contexts/EditorContext';\n\nconst ChatPanel = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [isUserScrolling, setIsUserScrolling] = useState(false);\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n  const scrollTimeoutRef = useRef(null);\n  \n  const {\n    chatMessages,\n    isClaudeTyping,\n    addChatMessage,\n    setClaudeTyping,\n    setPendingSuggestion\n  } = useSOWStore();\n  \n  const { \n    insertText, \n    replaceSelection, \n    insertAtEnd, \n    getCurrentContent, \n    getSelectedText,\n    applySuggestion\n  } = useEditor();\n\n  const scrollToBottom = (force = false) => {\n    if (!isUserScrolling || force) {\n      messagesEndRef.current?.scrollIntoView({ \n        behavior: 'smooth',\n        block: 'end'\n      });\n    }\n  };\n\n  // Auto-scroll when new messages arrive or Claude is typing\n  useEffect(() => {\n    scrollToBottom();\n  }, [chatMessages, isClaudeTyping]);\n\n  // Handle scroll detection to pause auto-scroll when user is manually scrolling\n  const handleScroll = () => {\n    if (!messagesContainerRef.current) return;\n    \n    const container = messagesContainerRef.current;\n    const isAtBottom = container.scrollHeight - container.scrollTop <= container.clientHeight + 50;\n    \n    if (!isAtBottom) {\n      setIsUserScrolling(true);\n      \n      // Clear existing timeout\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n      \n      // Resume auto-scroll after 3 seconds of no scrolling\n      scrollTimeoutRef.current = setTimeout(() => {\n        setIsUserScrolling(false);\n      }, 3000);\n    } else {\n      setIsUserScrolling(false);\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n    }\n  };\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isClaudeTyping) return;\n\n    const userMessage = {\n      role: 'user',\n      content: inputValue.trim()\n    };\n\n    addChatMessage(userMessage);\n    setInputValue('');\n    setClaudeTyping(true);\n    \n    // Force scroll to bottom when user sends a message\n    setIsUserScrolling(false);\n    setTimeout(() => scrollToBottom(true), 100);\n\n    try {\n      // Use BedrockService to send message to Claude\n      const bedrockService = new BedrockService();\n      \n      // Prepare context from current document state\n      const currentContent = getCurrentContent();\n      const selectedText = getSelectedText();\n      \n      const context = {\n        documentTitle: 'SOW Document',\n        sections: [],\n        currentContent: currentContent,\n        selectedText: selectedText,\n        hasSelection: selectedText.length > 0\n      };\n\n      const response = await bedrockService.sendMessage(userMessage.content, context);\n      \n      // Check if this is an actionable instruction\n      const isActionable = isActionableInstruction(userMessage.content);\n      \n      if (isActionable) {\n        // Automatically apply the suggestion and create pending suggestion\n        const suggestion = {\n          id: Date.now(),\n          type: determineSuggestionType(userMessage.content, selectedText),\n          content: response,\n          explanation: `Applied suggestion for: \"${userMessage.content}\"`,\n          preview: response.length > 100 ? response.substring(0, 100) + '...' : response,\n          applied: true,\n          originalRequest: userMessage.content,\n          timestamp: new Date().toISOString()\n        };\n\n        // Apply the suggestion immediately\n        applySuggestion(suggestion);\n        \n        // Set as pending for accept/reject\n        setPendingSuggestion(suggestion);\n        \n        // Add a system message instead of the full response\n        addChatMessage({\n          role: 'assistant',\n          content: `âœ¨ I've applied the suggestion automatically. You can accept or reject it using the panel.`,\n          isSystemMessage: true\n        });\n      } else {\n        // Regular chat response\n        addChatMessage({\n          role: 'assistant',\n          content: response\n        });\n      }\n    } catch (error) {\n      console.error('Error sending message to Claude:', error);\n      addChatMessage({\n        role: 'assistant',\n        content: 'I apologize, but I encountered an error while processing your request. Please check your AWS configuration.'\n      });\n    } finally {\n      setClaudeTyping(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"sidebar-panel\">\n      <div className=\"chat-panel\">\n        <div className=\"chat-header\" style={{ \n          padding: '16px', \n          borderBottom: '1px solid #e2e8f0',\n          background: 'white',\n          borderRadius: '8px 8px 0 0'\n        }}>\n          <h3 style={{ \n            margin: 0, \n            display: 'flex', \n            alignItems: 'center', \n            gap: '8px',\n            fontSize: '16px',\n            fontWeight: '600'\n          }}>\n            <Bot size={20} />\n            Claude Assistant\n          </h3>\n          <p style={{ \n            margin: '4px 0 0 0', \n            fontSize: '14px', \n            color: '#6b7280' \n          }}>\n            Get help with your SOW writing\n          </p>\n        </div>\n\n        <div \n          className=\"chat-messages\"\n          ref={messagesContainerRef}\n          onScroll={handleScroll}\n        >\n          {chatMessages.length === 0 && (\n            <div style={{ \n              textAlign: 'center', \n              color: '#6b7280', \n              padding: '40px 20px',\n              fontSize: '14px'\n            }}>\n              <Bot size={48} style={{ margin: '0 auto 16px', opacity: 0.3 }} />\n              <p>Hi! I'm Claude, your AI assistant for writing Statements of Work.</p>\n              <p>I can help you with:</p>\n              <ul style={{ \n                textAlign: 'left', \n                marginTop: '16px',\n                paddingLeft: '20px'\n              }}>\n                <li>Structuring your SOW sections</li>\n                <li>Improving clarity and professionalism</li>\n                <li>Adding industry best practices</li>\n                <li>Reviewing for completeness</li>\n              </ul>\n            </div>\n          )}\n\n          {chatMessages.map((message) => (\n            <div\n              key={message.id}\n              className={`message ${message.role}`}\n            >\n              <div className=\"message-header\">\n                {message.role === 'user' ? (\n                  <>\n                    <User size={16} style={{ marginRight: '4px' }} />\n                    You\n                  </>\n                ) : (\n                  <>\n                    <Bot size={16} style={{ marginRight: '4px' }} />\n                    Claude\n                  </>\n                )}\n              </div>\n              <div className=\"message-content\">\n                {message.content}\n              </div>\n              {message.role === 'assistant' && (\n                <MessageActions \n                  message={message} \n                  onInsertText={insertText}\n                  onReplaceSelection={replaceSelection}\n                  onInsertAtEnd={insertAtEnd}\n                />\n              )}\n            </div>\n          ))}\n\n          {isClaudeTyping && (\n            <div className=\"message assistant\">\n              <div className=\"message-header\">\n                <Bot size={16} style={{ marginRight: '4px' }} />\n                Claude\n              </div>\n              <div className=\"message-content\" style={{ \n                display: 'flex', \n                alignItems: 'center', \n                gap: '8px' \n              }}>\n                <Loader size={16} className=\"animate-spin\" />\n                Thinking...\n              </div>\n            </div>\n          )}\n\n          <div ref={messagesEndRef} />\n          \n          {/* Scroll to bottom indicator */}\n          {isUserScrolling && (\n            <div \n              style={{\n                position: 'absolute',\n                bottom: '20px',\n                right: '20px',\n                background: '#3b82f6',\n                color: 'white',\n                padding: '8px 12px',\n                borderRadius: '20px',\n                fontSize: '12px',\n                cursor: 'pointer',\n                boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                zIndex: 10\n              }}\n              onClick={() => {\n                setIsUserScrolling(false);\n                scrollToBottom(true);\n              }}\n            >\n              â†“ New messages\n            </div>\n          )}\n        </div>\n\n        <div className=\"chat-input\">\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyDown={handleKeyPress}\n            placeholder=\"Ask Claude for help with your SOW...\"\n            disabled={isClaudeTyping}\n          />\n          <button\n            onClick={handleSendMessage}\n            disabled={!inputValue.trim() || isClaudeTyping}\n            style={{\n              opacity: (!inputValue.trim() || isClaudeTyping) ? 0.5 : 1,\n              cursor: (!inputValue.trim() || isClaudeTyping) ? 'not-allowed' : 'pointer'\n            }}\n          >\n            <Send size={16} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Helper function to determine if a message is an actionable instruction\nconst isActionableInstruction = (message) => {\n  const actionWords = [\n    'write', 'add', 'create', 'generate', 'make', 'build', 'draft', 'compose',\n    'improve', 'enhance', 'fix', 'correct', 'update', 'modify', 'change', 'edit',\n    'replace', 'rewrite', 'revise', 'refactor', 'optimize',\n    'include', 'insert', 'append', 'prepend',\n    'remove', 'delete', 'eliminate',\n    'format', 'structure', 'organize'\n  ];\n  \n  const lowerMessage = message.toLowerCase();\n  return actionWords.some(word => lowerMessage.includes(word));\n};\n\n// Helper function to determine suggestion type based on context\nconst determineSuggestionType = (message, selectedText) => {\n  const lowerMessage = message.toLowerCase();\n  \n  if (selectedText && selectedText.length > 0) {\n    if (lowerMessage.includes('replace') || lowerMessage.includes('change') || lowerMessage.includes('fix')) {\n      return 'replace';\n    }\n  }\n  \n  if (lowerMessage.includes('add') || lowerMessage.includes('append') || lowerMessage.includes('end')) {\n    return 'append';\n  }\n  \n  return 'insert';\n};\n\n// Component for action buttons on Claude's messages (now only for non-actionable messages)\nconst MessageActions = ({ message, onInsertText, onReplaceSelection, onInsertAtEnd }) => {\n  const handleInsertAtCursor = () => {\n    onInsertText(message.content);\n  };\n\n  const handleReplaceSelected = () => {\n    onReplaceSelection(message.content);\n  };\n\n  const handleAppendToEnd = () => {\n    onInsertAtEnd(message.content);\n  };\n\n  const handleCopyToClipboard = () => {\n    navigator.clipboard.writeText(message.content);\n  };\n\n  return (\n    <div style={{\n      display: 'flex',\n      gap: '4px',\n      marginTop: '8px',\n      flexWrap: 'wrap'\n    }}>\n      <button\n        onClick={handleInsertAtCursor}\n        style={{\n          padding: '4px 8px',\n          fontSize: '12px',\n          border: '1px solid #d1d5db',\n          borderRadius: '4px',\n          background: 'white',\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '4px'\n        }}\n        title=\"Insert at cursor position\"\n      >\n        <Plus size={12} />\n        Insert\n      </button>\n      \n      <button\n        onClick={handleReplaceSelected}\n        style={{\n          padding: '4px 8px',\n          fontSize: '12px',\n          border: '1px solid #d1d5db',\n          borderRadius: '4px',\n          background: 'white',\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '4px'\n        }}\n        title=\"Replace selected text\"\n      >\n        <Replace size={12} />\n        Replace\n      </button>\n      \n      <button\n        onClick={handleAppendToEnd}\n        style={{\n          padding: '4px 8px',\n          fontSize: '12px',\n          border: '1px solid #d1d5db',\n          borderRadius: '4px',\n          background: 'white',\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '4px'\n        }}\n        title=\"Add to end of document\"\n      >\n        <Plus size={12} />\n        Append\n      </button>\n      \n      <button\n        onClick={handleCopyToClipboard}\n        style={{\n          padding: '4px 8px',\n          fontSize: '12px',\n          border: '1px solid #d1d5db',\n          borderRadius: '4px',\n          background: 'white',\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '4px'\n        }}\n        title=\"Copy to clipboard\"\n      >\n        <Copy size={12} />\n        Copy\n      </button>\n    </div>\n  );\n};\n\nexport default ChatPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}