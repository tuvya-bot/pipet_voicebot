{"ast":null,"code":"var _jsxFileName = \"/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/src/contexts/EditorContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditorContext = /*#__PURE__*/createContext();\nexport const useEditor = () => {\n  _s();\n  const context = useContext(EditorContext);\n  if (!context) {\n    throw new Error('useEditor must be used within an EditorProvider');\n  }\n  return context;\n};\n_s(useEditor, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const EditorProvider = ({\n  children\n}) => {\n  _s2();\n  const [editorRef, setEditorRef] = useState(null);\n  const [editorValue, setEditorValue] = useState([]);\n  const insertText = text => {\n    if (editorRef) {\n      // Insert text at current cursor position\n      editorRef.insertText(text);\n    }\n  };\n  const replaceSelection = newText => {\n    if (editorRef) {\n      // Replace currently selected text\n      editorRef.insertText(newText);\n    }\n  };\n  const insertAtEnd = text => {\n    if (editorRef) {\n      // Move to end and insert text\n      const {\n        selection\n      } = editorRef;\n      const end = editorRef.end([]);\n      editorRef.select(end);\n      editorRef.insertText('\\n' + text);\n      // Restore selection if it existed\n      if (selection) {\n        editorRef.select(selection);\n      }\n    }\n  };\n  const applySuggestion = suggestion => {\n    if (!editorRef || !suggestion) return;\n    switch (suggestion.type) {\n      case 'replace':\n        if (suggestion.range) {\n          // Replace specific range\n          editorRef.select(suggestion.range);\n          editorRef.insertText(suggestion.content);\n        } else {\n          // Replace selected text\n          replaceSelection(suggestion.content);\n        }\n        break;\n      case 'insert':\n        if (suggestion.position) {\n          // Insert at specific position\n          editorRef.select(suggestion.position);\n          editorRef.insertText(suggestion.content);\n        } else {\n          // Insert at cursor\n          insertText(suggestion.content);\n        }\n        break;\n      case 'append':\n        insertAtEnd(suggestion.content);\n        break;\n      default:\n        insertText(suggestion.content);\n    }\n  };\n  const undoLastChange = () => {\n    if (editorRef && editorRef.history && editorRef.history.undos.length > 0) {\n      editorRef.undo();\n    }\n  };\n  const getCurrentContent = () => {\n    return editorValue;\n  };\n  const getSelectedText = () => {\n    if (editorRef && editorRef.selection) {\n      return editorRef.string(editorRef.selection);\n    }\n    return '';\n  };\n  const value = {\n    editorRef,\n    setEditorRef,\n    editorValue,\n    setEditorValue,\n    insertText,\n    replaceSelection,\n    insertAtEnd,\n    getCurrentContent,\n    getSelectedText,\n    applySuggestion,\n    undoLastChange\n  };\n  return /*#__PURE__*/_jsxDEV(EditorContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s2(EditorProvider, \"zgZfJL5ndp37rQnmv8S1HkejH2o=\");\n_c = EditorProvider;\nexport default EditorContext;\nvar _c;\n$RefreshReg$(_c, \"EditorProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","EditorContext","useEditor","_s","context","Error","EditorProvider","children","_s2","editorRef","setEditorRef","editorValue","setEditorValue","insertText","text","replaceSelection","newText","insertAtEnd","selection","end","select","applySuggestion","suggestion","type","range","content","position","undoLastChange","history","undos","length","undo","getCurrentContent","getSelectedText","string","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/src/contexts/EditorContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst EditorContext = createContext();\n\nexport const useEditor = () => {\n  const context = useContext(EditorContext);\n  if (!context) {\n    throw new Error('useEditor must be used within an EditorProvider');\n  }\n  return context;\n};\n\nexport const EditorProvider = ({ children }) => {\n  const [editorRef, setEditorRef] = useState(null);\n  const [editorValue, setEditorValue] = useState([]);\n\n  const insertText = (text) => {\n    if (editorRef) {\n      // Insert text at current cursor position\n      editorRef.insertText(text);\n    }\n  };\n\n  const replaceSelection = (newText) => {\n    if (editorRef) {\n      // Replace currently selected text\n      editorRef.insertText(newText);\n    }\n  };\n\n  const insertAtEnd = (text) => {\n    if (editorRef) {\n      // Move to end and insert text\n      const { selection } = editorRef;\n      const end = editorRef.end([]);\n      editorRef.select(end);\n      editorRef.insertText('\\n' + text);\n      // Restore selection if it existed\n      if (selection) {\n        editorRef.select(selection);\n      }\n    }\n  };\n\n  const applySuggestion = (suggestion) => {\n    if (!editorRef || !suggestion) return;\n\n    switch (suggestion.type) {\n      case 'replace':\n        if (suggestion.range) {\n          // Replace specific range\n          editorRef.select(suggestion.range);\n          editorRef.insertText(suggestion.content);\n        } else {\n          // Replace selected text\n          replaceSelection(suggestion.content);\n        }\n        break;\n      case 'insert':\n        if (suggestion.position) {\n          // Insert at specific position\n          editorRef.select(suggestion.position);\n          editorRef.insertText(suggestion.content);\n        } else {\n          // Insert at cursor\n          insertText(suggestion.content);\n        }\n        break;\n      case 'append':\n        insertAtEnd(suggestion.content);\n        break;\n      default:\n        insertText(suggestion.content);\n    }\n  };\n\n  const undoLastChange = () => {\n    if (editorRef && editorRef.history && editorRef.history.undos.length > 0) {\n      editorRef.undo();\n    }\n  };\n\n  const getCurrentContent = () => {\n    return editorValue;\n  };\n\n  const getSelectedText = () => {\n    if (editorRef && editorRef.selection) {\n      return editorRef.string(editorRef.selection);\n    }\n    return '';\n  };\n\n  const value = {\n    editorRef,\n    setEditorRef,\n    editorValue,\n    setEditorValue,\n    insertText,\n    replaceSelection,\n    insertAtEnd,\n    getCurrentContent,\n    getSelectedText,\n    applySuggestion,\n    undoLastChange\n  };\n\n  return (\n    <EditorContext.Provider value={value}>\n      {children}\n    </EditorContext.Provider>\n  );\n};\n\nexport default EditorContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}