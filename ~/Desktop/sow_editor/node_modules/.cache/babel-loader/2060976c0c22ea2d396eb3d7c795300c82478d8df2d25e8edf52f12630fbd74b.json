{"ast":null,"code":"import { HttpRequest } from \"@smithy/protocol-http\";\nimport { HttpApiKeyAuthLocation } from \"@smithy/types\";\nexport class HttpApiKeyAuthSigner {\n  async sign(httpRequest, identity, signingProperties) {\n    if (!signingProperties) {\n      throw new Error(\"request could not be signed with `apiKey` since the `name` and `in` signer properties are missing\");\n    }\n    if (!signingProperties.name) {\n      throw new Error(\"request could not be signed with `apiKey` since the `name` signer property is missing\");\n    }\n    if (!signingProperties.in) {\n      throw new Error(\"request could not be signed with `apiKey` since the `in` signer property is missing\");\n    }\n    if (!identity.apiKey) {\n      throw new Error(\"request could not be signed with `apiKey` since the `apiKey` is not defined\");\n    }\n    const clonedRequest = HttpRequest.clone(httpRequest);\n    if (signingProperties.in === HttpApiKeyAuthLocation.QUERY) {\n      clonedRequest.query[signingProperties.name] = identity.apiKey;\n    } else if (signingProperties.in === HttpApiKeyAuthLocation.HEADER) {\n      clonedRequest.headers[signingProperties.name] = signingProperties.scheme ? `${signingProperties.scheme} ${identity.apiKey}` : identity.apiKey;\n    } else {\n      throw new Error(\"request can only be signed with `apiKey` locations `query` or `header`, \" + \"but found: `\" + signingProperties.in + \"`\");\n    }\n    return clonedRequest;\n  }\n}","map":{"version":3,"names":["HttpRequest","HttpApiKeyAuthLocation","HttpApiKeyAuthSigner","sign","httpRequest","identity","signingProperties","Error","name","in","apiKey","clonedRequest","clone","QUERY","query","HEADER","headers","scheme"],"sources":["/Users/tuvyakhatter/Desktop/pipecat_voicebot/~/Desktop/sow_editor/node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/httpApiKeyAuth.js"],"sourcesContent":["import { HttpRequest } from \"@smithy/protocol-http\";\nimport { HttpApiKeyAuthLocation } from \"@smithy/types\";\nexport class HttpApiKeyAuthSigner {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!signingProperties) {\n            throw new Error(\"request could not be signed with `apiKey` since the `name` and `in` signer properties are missing\");\n        }\n        if (!signingProperties.name) {\n            throw new Error(\"request could not be signed with `apiKey` since the `name` signer property is missing\");\n        }\n        if (!signingProperties.in) {\n            throw new Error(\"request could not be signed with `apiKey` since the `in` signer property is missing\");\n        }\n        if (!identity.apiKey) {\n            throw new Error(\"request could not be signed with `apiKey` since the `apiKey` is not defined\");\n        }\n        const clonedRequest = HttpRequest.clone(httpRequest);\n        if (signingProperties.in === HttpApiKeyAuthLocation.QUERY) {\n            clonedRequest.query[signingProperties.name] = identity.apiKey;\n        }\n        else if (signingProperties.in === HttpApiKeyAuthLocation.HEADER) {\n            clonedRequest.headers[signingProperties.name] = signingProperties.scheme\n                ? `${signingProperties.scheme} ${identity.apiKey}`\n                : identity.apiKey;\n        }\n        else {\n            throw new Error(\"request can only be signed with `apiKey` locations `query` or `header`, \" +\n                \"but found: `\" +\n                signingProperties.in +\n                \"`\");\n        }\n        return clonedRequest;\n    }\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,uBAAuB;AACnD,SAASC,sBAAsB,QAAQ,eAAe;AACtD,OAAO,MAAMC,oBAAoB,CAAC;EAC9B,MAAMC,IAAIA,CAACC,WAAW,EAAEC,QAAQ,EAAEC,iBAAiB,EAAE;IACjD,IAAI,CAACA,iBAAiB,EAAE;MACpB,MAAM,IAAIC,KAAK,CAAC,mGAAmG,CAAC;IACxH;IACA,IAAI,CAACD,iBAAiB,CAACE,IAAI,EAAE;MACzB,MAAM,IAAID,KAAK,CAAC,uFAAuF,CAAC;IAC5G;IACA,IAAI,CAACD,iBAAiB,CAACG,EAAE,EAAE;MACvB,MAAM,IAAIF,KAAK,CAAC,qFAAqF,CAAC;IAC1G;IACA,IAAI,CAACF,QAAQ,CAACK,MAAM,EAAE;MAClB,MAAM,IAAIH,KAAK,CAAC,6EAA6E,CAAC;IAClG;IACA,MAAMI,aAAa,GAAGX,WAAW,CAACY,KAAK,CAACR,WAAW,CAAC;IACpD,IAAIE,iBAAiB,CAACG,EAAE,KAAKR,sBAAsB,CAACY,KAAK,EAAE;MACvDF,aAAa,CAACG,KAAK,CAACR,iBAAiB,CAACE,IAAI,CAAC,GAAGH,QAAQ,CAACK,MAAM;IACjE,CAAC,MACI,IAAIJ,iBAAiB,CAACG,EAAE,KAAKR,sBAAsB,CAACc,MAAM,EAAE;MAC7DJ,aAAa,CAACK,OAAO,CAACV,iBAAiB,CAACE,IAAI,CAAC,GAAGF,iBAAiB,CAACW,MAAM,GAClE,GAAGX,iBAAiB,CAACW,MAAM,IAAIZ,QAAQ,CAACK,MAAM,EAAE,GAChDL,QAAQ,CAACK,MAAM;IACzB,CAAC,MACI;MACD,MAAM,IAAIH,KAAK,CAAC,0EAA0E,GACtF,cAAc,GACdD,iBAAiB,CAACG,EAAE,GACpB,GAAG,CAAC;IACZ;IACA,OAAOE,aAAa;EACxB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}